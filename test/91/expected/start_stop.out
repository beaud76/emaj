-- start_stop.sql : test emaj_start_group(), emaj_start_groups(), 
--                      emaj_stop_group(), emaj_stop_groups(), emaj_force_stop_group(),
--                      emaj_protect_group() and emaj_unprotect_group() functions
--
SET client_min_messages TO WARNING;
-- prepare groups
select emaj.emaj_create_group('myGroup1');
WARNING:  _create_tbl: table "myschema1.mytbl2" has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(r_grpdef, v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 70 at PERFORM
 emaj_create_group 
-------------------
                 6
(1 row)

select emaj.emaj_create_group('myGroup2');
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups (array[v_groupName])"
PL/pgSQL function "emaj_create_group" line 90 at PERFORM
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups (array[v_groupName])"
PL/pgSQL function "emaj_create_group" line 90 at PERFORM
 emaj_create_group 
-------------------
                 8
(1 row)

INSERT INTO emaj.emaj_param (param_key, param_value_interval) VALUES ('history_retention','1 second'::interval);
select pg_sleep(1);
 pg_sleep 
----------
 
(1 row)

-----------------------------
-- emaj_start_group() tests
-----------------------------
-- group is unknown in emaj_group
select emaj.emaj_start_group(NULL,NULL);
ERROR:  _start_groups: group "<NULL>" has not been created.
CONTEXT:  SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
select emaj.emaj_start_group('unknownGroup',NULL,NULL);
ERROR:  _start_groups: group "unknownGroup" has not been created.
CONTEXT:  SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
-- reserved mark name
select emaj.emaj_start_group('myGroup1','EMAJ_LAST_MARK');
ERROR:  _check_new_mark: "EMAJ_LAST_MARK" is not an allowed name for a new mark.
CONTEXT:  SQL statement "SELECT emaj._check_new_mark(v_mark, v_groupNames)"
PL/pgSQL function "_start_groups" line 45 at SQL statement
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
-- detection of a missing application schema
begin;
  drop schema myschema1 cascade;
  select emaj.emaj_start_group('myGroup1','M1');
ERROR:  _verify_groups (1): In group "myGroup1", the table "myschema1"."mytbl1" does not exist any more. You may use "SELECT * FROM emaj.emaj_verify_all()" to look for other issues.
CONTEXT:  SQL statement "SELECT 0 FROM emaj._verify_groups(v_groupNames, true)"
PL/pgSQL function "_start_groups" line 34 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
rollback;
-- detection of a missing application relation
begin;
  drop table myschema1.mytbl4;
  select emaj.emaj_start_group('myGroup1','M1');
ERROR:  _verify_groups (1): In group "myGroup1", the table "myschema1"."mytbl4" does not exist any more. You may use "SELECT * FROM emaj.emaj_verify_all()" to look for other issues.
CONTEXT:  SQL statement "SELECT 0 FROM emaj._verify_groups(v_groupNames, true)"
PL/pgSQL function "_start_groups" line 34 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
rollback;
-- detection of relation type change (a table is now a sequence!)
begin;
  update emaj.emaj_relation set rel_kind = 'S' where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1';
  select emaj.emaj_start_group('myGroup1','M1');
ERROR:  _verify_groups (1): In group "myGroup1", the sequence "myschema1"."mytbl1" does not exist any more. You may use "SELECT * FROM emaj.emaj_verify_all()" to look for other issues.
CONTEXT:  SQL statement "SELECT 0 FROM emaj._verify_groups(v_groupNames, true)"
PL/pgSQL function "_start_groups" line 34 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
rollback;
-- detection of a missing E-Maj secondary schema
begin;
  drop schema emajb cascade;
  select emaj.emaj_start_group('myGroup1','M1');
ERROR:  _verify_groups (2): In group "myGroup1", the log table "emajb"."myschema1_mytbl2b_log" is not found. You may use "SELECT * FROM emaj.emaj_verify_all()" to look for other issues.
CONTEXT:  SQL statement "SELECT 0 FROM emaj._verify_groups(v_groupNames, true)"
PL/pgSQL function "_start_groups" line 34 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
rollback;
-- detection of a missing log trigger
begin;
  drop trigger emaj_log_trg on myschema1.mytbl1;
  select emaj.emaj_start_group('myGroup1','M1');
ERROR:  _verify_groups (4): In group "myGroup1", the log trigger "emaj_log_trg" on table "myschema1"."mytbl1" is not found. You may use "SELECT * FROM emaj.emaj_verify_all()" to look for other issues.
CONTEXT:  SQL statement "SELECT 0 FROM emaj._verify_groups(v_groupNames, true)"
PL/pgSQL function "_start_groups" line 34 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
rollback;
-- detection of a missing log function
begin;
  drop function emaj.myschema1_mytbl1_log_fnct() cascade;
  select emaj.emaj_start_group('myGroup1','M1');
ERROR:  _verify_groups (3): In group "myGroup1", the log function "emaj"."myschema1_mytbl1_log_fnct" is not found. You may use "SELECT * FROM emaj.emaj_verify_all()" to look for other issues.
CONTEXT:  SQL statement "SELECT 0 FROM emaj._verify_groups(v_groupNames, true)"
PL/pgSQL function "_start_groups" line 34 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
rollback;
-- detection of a missing truncate trigger
begin;
  drop trigger emaj_trunc_trg on myschema1.mytbl1;
  select emaj.emaj_start_group('myGroup1','M1');
ERROR:  _verify_groups (5): In group "myGroup1", the truncate trigger "emaj_trunc_trg" on table "myschema1"."mytbl1" is not found. You may use "SELECT * FROM emaj.emaj_verify_all()" to look for other issues.
CONTEXT:  SQL statement "SELECT 0 FROM emaj._verify_groups(v_groupNames, true)"
PL/pgSQL function "_start_groups" line 34 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
rollback;
-- detection of a missing log table
begin;
  drop table emaj.myschema1_mytbl1_log;
  select emaj.emaj_start_group('myGroup1','M1');
ERROR:  _verify_groups (2): In group "myGroup1", the log table "emaj"."myschema1_mytbl1_log" is not found. You may use "SELECT * FROM emaj.emaj_verify_all()" to look for other issues.
CONTEXT:  SQL statement "SELECT 0 FROM emaj._verify_groups(v_groupNames, true)"
PL/pgSQL function "_start_groups" line 34 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
rollback;
-- detection of a change in the application table structure (new column)
begin;
  alter table myschema1.mytbl1 add column newcol int;
  alter table myschema1.mytbl1 add column othernewcol text;
  alter table myschema1.mytbl2 add column newcol int;
  select emaj.emaj_start_group('myGroup1','M1');
ERROR:  _verify_groups (6): In group "myGroup1", the structure of the application table "myschema1"."mytbl1" is not coherent with its log table ("emaj"."myschema1_mytbl1_log"). You may use "SELECT * FROM emaj.emaj_verify_all()" to look for other issues.
CONTEXT:  SQL statement "SELECT 0 FROM emaj._verify_groups(v_groupNames, true)"
PL/pgSQL function "_start_groups" line 34 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
rollback;
-- detection of a change in the application table structure (column type change)
begin;
  alter table myschema1.mytbl4 drop column col42;
  alter table myschema1.mytbl4 alter column col45 type varchar(15);
  select emaj.emaj_start_group('myGroup1','M1');
ERROR:  _verify_groups (6): In group "myGroup1", the structure of the application table "myschema1"."mytbl4" is not coherent with its log table ("emaj"."myschema1_mytbl4_log"). You may use "SELECT * FROM emaj.emaj_verify_all()" to look for other issues.
CONTEXT:  SQL statement "SELECT 0 FROM emaj._verify_groups(v_groupNames, true)"
PL/pgSQL function "_start_groups" line 34 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
rollback;
-- detection of a missing primary key
begin;
  alter table myschema1.mytbl4 drop constraint mytbl4_pkey;
  select emaj.emaj_start_group('myGroup1','M1');
ERROR:  _verify_groups (7): In rollbackable group "myGroup1", the table "myschema1"."mytbl4" has no primary key any more. You may use "SELECT * FROM emaj.emaj_verify_all()" to look for other issues.
CONTEXT:  SQL statement "SELECT 0 FROM emaj._verify_groups(v_groupNames, true)"
PL/pgSQL function "_start_groups" line 34 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
rollback;
-- detection of a table altered as UNLOGGED
begin;
  alter table myschema1."myTbl3" set unlogged;                        -- needs 9.5+
ERROR:  syntax error at or near "unlogged"
LINE 1: alter table myschema1."myTbl3" set unlogged;
                                           ^
  select emaj.emaj_start_group('myGroup1','M1');
ERROR:  current transaction is aborted, commands ignored until end of transaction block
rollback;
-- detection of a table altered as WITH OIDS
begin;
  alter table myschema1."myTbl3" set with oids;
  select emaj.emaj_start_group('myGroup1','M1');
ERROR:  _verify_groups (9): In rollbackable group "myGroup1", the table "myschema1"."myTbl3" is declared WITH OIDS. You may use "SELECT * FROM emaj.emaj_verify_all()" to look for other issues.
CONTEXT:  SQL statement "SELECT 0 FROM emaj._verify_groups(v_groupNames, true)"
PL/pgSQL function "_start_groups" line 34 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
rollback;
-- should be OK
select emaj.emaj_start_group('myGroup1','Mark1');
 emaj_start_group 
------------------
                6
(1 row)

select emaj.emaj_start_group('myGroup2','Mark2',true);
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
 emaj_start_group 
------------------
                8
(1 row)

select emaj.emaj_start_group('phil''s group#3",','Mark3',false);
 emaj_start_group 
------------------
                4
(1 row)

select emaj.emaj_start_group('emptyGroup','Mark1');
 emaj_start_group 
------------------
                0
(1 row)

select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               6
(1 row)

select emaj.emaj_stop_group('myGroup2');
 emaj_stop_group 
-----------------
               8
(1 row)

-- should be OK, with a warning on fkey between tables from different groups
begin;
  alter table myschema2.myTbl4 drop constraint mytbl4_col44_fkey;
  alter table myschema2.myTbl4 add constraint mytbl4_col44_fkey 
    FOREIGN KEY (col44,col45) REFERENCES myschema1.myTbl1 (col11,col12) ON DELETE CASCADE ON UPDATE SET NULL;
  select emaj.emaj_start_group('myGroup2','Mark2');
WARNING:  _check_fk_groups: Foreign key "mytbl4_col44_fkey", from table "myschema2.mytbl4", references "myschema1.mytbl1" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
 emaj_start_group 
------------------
                8
(1 row)

rollback;
-- start with generated mark name
select emaj.emaj_start_group('myGroup1','%abc%',true);
 emaj_start_group 
------------------
                6
(1 row)

select emaj.emaj_start_group('myGroup2','',false);
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
 emaj_start_group 
------------------
                8
(1 row)

-- group already started
select emaj.emaj_start_group('myGroup2','Mark3');
ERROR:  _start_groups: The group "myGroup2" cannot be started because it is in LOGGING state. An emaj_stop_group function must be previously executed.
CONTEXT:  SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
-- check how truncate reacts  - tables are empty anyway
-- ... for a rollbackable group (must be blocked)
SET client_min_messages TO NOTICE;
truncate myschema1.mytbl1 cascade;
NOTICE:  truncate cascades to table "mytbl4"
ERROR:  emaj._forbid_truncate_fnct: TRUNCATE is not allowed while updates on this table (myschema1.mytbl1) are currently protected by E-Maj. Consider stopping the group before issuing a TRUNCATE.
-- ... for an audit_only group (must be logged)
truncate "phil's schema3"."phil's tbl1" cascade;
NOTICE:  truncate cascades to table "mytbl4"
NOTICE:  truncate cascades to table "myTbl2\"
select "phil's col11", "phil's col12", "phil\s col13", 
       emaj_verb, emaj_tuple, emaj_gid, emaj_user, emaj_user_ip, emaj_user_port 
  from "emaj #'3"."phil's schema3_phil's tbl1_log";
 phil's col11 | phil's col12 | phil\s col13 | emaj_verb | emaj_tuple | emaj_gid | emaj_user | emaj_user_ip | emaj_user_port 
--------------+--------------+--------------+-----------+------------+----------+-----------+--------------+----------------
              |              |              | TRU       |            |        1 | postgres  |              |               
(1 row)

SET client_min_messages TO WARNING;
-- impact of started group
select group_name, group_is_logging, group_is_rlbk_protected, group_nb_table, group_nb_sequence, group_is_rollbackable,
       group_creation_time_id, group_last_alter_time_id, group_comment
  from emaj.emaj_group order by group_name;
    group_name    | group_is_logging | group_is_rlbk_protected | group_nb_table | group_nb_sequence | group_is_rollbackable | group_creation_time_id | group_last_alter_time_id | group_comment 
------------------+------------------+-------------------------+----------------+-------------------+-----------------------+------------------------+--------------------------+---------------
 emptyGroup       | t                | f                       |              0 |                 0 | t                     |                     18 |                          | 
 myGroup1         | t                | f                       |              5 |                 1 | t                     |                    200 |                          | 
 myGroup2         | t                | f                       |              6 |                 2 | t                     |                    201 |                          | 
 myGroup4         | f                | f                       |              3 |                 0 | t                     |                     10 |                          | 
 phil's group#3", | t                | t                       |              2 |                 2 | f                     |                      9 |                          | 
(5 rows)

select mark_id, mark_group, regexp_replace(mark_name,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d','%','g'), mark_time_id, mark_is_deleted, mark_is_rlbk_protected, mark_comment, mark_log_rows_before_next, mark_logged_rlbk_target_mark from emaj.emaj_mark order by mark_id;
 mark_id |    mark_group    | regexp_replace | mark_time_id | mark_is_deleted | mark_is_rlbk_protected | mark_comment | mark_log_rows_before_next | mark_logged_rlbk_target_mark 
---------+------------------+----------------+--------------+-----------------+------------------------+--------------+---------------------------+------------------------------
     201 | myGroup2         | Mark2          |          203 | t               | f                      |              |                         0 | 
     202 | phil's group#3", | Mark3          |          204 | f               | f                      |              |                           | 
     203 | emptyGroup       | Mark1          |          205 | f               | f                      |              |                           | 
     205 | myGroup2         | STOP_%         |          207 | t               | f                      |              |                         0 | 
     207 | myGroup1         | %abc%          |          209 | f               | f                      |              |                           | 
     208 | myGroup2         | START_%        |          210 | f               | f                      |              |                           | 
(6 rows)

select time_id, time_last_emaj_gid, time_event from emaj.emaj_time_stamp where time_id >= 200 order by time_id;
 time_id | time_last_emaj_gid | time_event 
---------+--------------------+------------
     200 |                  0 | C
     201 |                  0 | C
     202 |                  0 | M
     203 |                  0 | M
     204 |                  0 | M
     205 |                  0 | M
     206 |                  0 | M
     207 |                  0 | M
     209 |                  0 | M
     210 |                  0 | M
(10 rows)

-- check old events are deleted
select hist_function, hist_event, hist_object,
       regexp_replace(regexp_replace(hist_wording,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d','%','g'),E'\\[.+\\]','(timestamp)','g'),
       hist_user
  from emaj.emaj_hist order by hist_id;
 hist_function  | hist_event |   hist_object    |                       regexp_replace                        | hist_user 
----------------+------------+------------------+-------------------------------------------------------------+-----------
 START_GROUP    | BEGIN      | myGroup1         | With log reset                                              | postgres
 PURGE_HISTORY  |            |                  | 182 emaj_hist rows deleted ; 37 alter groups events deleted | postgres
 LOCK_GROUP     | BEGIN      | myGroup1         |                                                             | postgres
 LOCK_GROUP     | END        | myGroup1         | 5 tables locked, 0 deadlock(s)                              | postgres
 SET_MARK_GROUP | BEGIN      | myGroup1         | Mark1                                                       | postgres
 SET_MARK_GROUP | END        | myGroup1         | Mark1                                                       | postgres
 START_GROUP    | END        | myGroup1         | 6 tables/sequences processed                                | postgres
 START_GROUP    | BEGIN      | myGroup2         | With log reset                                              | postgres
 LOCK_GROUP     | BEGIN      | myGroup2         |                                                             | postgres
 LOCK_GROUP     | END        | myGroup2         | 6 tables locked, 0 deadlock(s)                              | postgres
 SET_MARK_GROUP | BEGIN      | myGroup2         | Mark2                                                       | postgres
 SET_MARK_GROUP | END        | myGroup2         | Mark2                                                       | postgres
 START_GROUP    | END        | myGroup2         | 8 tables/sequences processed                                | postgres
 START_GROUP    | BEGIN      | phil's group#3", | Without log reset                                           | postgres
 LOCK_GROUP     | BEGIN      | phil's group#3", |                                                             | postgres
 LOCK_GROUP     | END        | phil's group#3", | 2 tables locked, 0 deadlock(s)                              | postgres
 SET_MARK_GROUP | BEGIN      | phil's group#3", | Mark3                                                       | postgres
 SET_MARK_GROUP | END        | phil's group#3", | Mark3                                                       | postgres
 START_GROUP    | END        | phil's group#3", | 4 tables/sequences processed                                | postgres
 START_GROUP    | BEGIN      | emptyGroup       | With log reset                                              | postgres
 LOCK_GROUP     | BEGIN      | emptyGroup       |                                                             | postgres
 LOCK_GROUP     | END        | emptyGroup       | 0 tables locked, 0 deadlock(s)                              | postgres
 SET_MARK_GROUP | BEGIN      | emptyGroup       | Mark1                                                       | postgres
 SET_MARK_GROUP | END        | emptyGroup       | Mark1                                                       | postgres
 START_GROUP    | END        | emptyGroup       | 0 tables/sequences processed                                | postgres
 STOP_GROUP     | BEGIN      | myGroup1         |                                                             | postgres
 LOCK_GROUP     | BEGIN      | myGroup1         |                                                             | postgres
 LOCK_GROUP     | END        | myGroup1         | 5 tables locked, 0 deadlock(s)                              | postgres
 SET_MARK_GROUP | BEGIN      | myGroup1         | STOP_%                                                      | postgres
 SET_MARK_GROUP | END        | myGroup1         | STOP_%                                                      | postgres
 STOP_GROUP     | END        | myGroup1         | 6 tables/sequences processed                                | postgres
 STOP_GROUP     | BEGIN      | myGroup2         |                                                             | postgres
 LOCK_GROUP     | BEGIN      | myGroup2         |                                                             | postgres
 LOCK_GROUP     | END        | myGroup2         | 6 tables locked, 0 deadlock(s)                              | postgres
 SET_MARK_GROUP | BEGIN      | myGroup2         | STOP_%                                                      | postgres
 SET_MARK_GROUP | END        | myGroup2         | STOP_%                                                      | postgres
 STOP_GROUP     | END        | myGroup2         | 8 tables/sequences processed                                | postgres
 START_GROUP    | BEGIN      | myGroup1         | With log reset                                              | postgres
 LOCK_GROUP     | BEGIN      | myGroup1         |                                                             | postgres
 LOCK_GROUP     | END        | myGroup1         | 5 tables locked, 0 deadlock(s)                              | postgres
 SET_MARK_GROUP | BEGIN      | myGroup1         | %abc%                                                       | postgres
 SET_MARK_GROUP | END        | myGroup1         | %abc%                                                       | postgres
 START_GROUP    | END        | myGroup1         | 6 tables/sequences processed                                | postgres
 START_GROUP    | BEGIN      | myGroup2         | Without log reset                                           | postgres
 LOCK_GROUP     | BEGIN      | myGroup2         |                                                             | postgres
 LOCK_GROUP     | END        | myGroup2         | 6 tables locked, 0 deadlock(s)                              | postgres
 SET_MARK_GROUP | BEGIN      | myGroup2         | START_%                                                     | postgres
 SET_MARK_GROUP | END        | myGroup2         | START_%                                                     | postgres
 START_GROUP    | END        | myGroup2         | 8 tables/sequences processed                                | postgres
(49 rows)

delete from emaj.emaj_param where param_key = 'history_retention';
-----------------------------
-- emaj_stop_group() tests
-----------------------------
-- unknown group
select emaj.emaj_stop_group(NULL);
ERROR:  _stop_groups: group "<NULL>" has not been created.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], v_mark, false, false)"
PL/pgSQL function "emaj_stop_group" line 16 at SQL statement
select emaj.emaj_stop_group('unkownGroup');
ERROR:  _stop_groups: group "unkownGroup" has not been created.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], v_mark, false, false)"
PL/pgSQL function "emaj_stop_group" line 16 at SQL statement
select emaj.emaj_stop_group(NULL,NULL);
ERROR:  _stop_groups: group "<NULL>" has not been created.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], v_mark, false, false)"
PL/pgSQL function "emaj_stop_group" line 16 at SQL statement
select emaj.emaj_stop_group('unkownGroup',NULL);
ERROR:  _stop_groups: group "unkownGroup" has not been created.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], v_mark, false, false)"
PL/pgSQL function "emaj_stop_group" line 16 at SQL statement
-- invalid mark
select emaj.emaj_stop_group('myGroup1','EMAJ_LAST_MARK');
ERROR:  _check_new_mark: "EMAJ_LAST_MARK" is not an allowed name for a new mark.
CONTEXT:  SQL statement "SELECT emaj._check_new_mark(v_mark, v_groupNames)"
PL/pgSQL function "_stop_groups" line 41 at SQL statement
SQL statement "SELECT emaj._stop_groups(array[v_groupName], v_mark, false, false)"
PL/pgSQL function "emaj_stop_group" line 16 at SQL statement
-- already existing mark
select emaj.emaj_stop_group('phil''s group#3",','Mark3');
ERROR:  _check_new_mark: Group "phil's group#3"," already contains a mark named "Mark3".
CONTEXT:  SQL statement "SELECT emaj._check_new_mark(v_mark, v_groupNames)"
PL/pgSQL function "_stop_groups" line 41 at SQL statement
SQL statement "SELECT emaj._stop_groups(array[v_groupName], v_mark, false, false)"
PL/pgSQL function "emaj_stop_group" line 16 at SQL statement
-- missing application table
begin;
  drop table mySchema2."myTbl3" cascade;
  select emaj.emaj_stop_group('myGroup2');
ERROR:  _stop_groups: Table "myschema2.myTbl3" does not exist any more.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], v_mark, false, false)"
PL/pgSQL function "emaj_stop_group" line 16 at SQL statement
rollback;
-- should be OK
select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               6
(1 row)

select emaj.emaj_stop_group('emptyGroup');
 emaj_stop_group 
-----------------
               0
(1 row)

-- impact of stopped group
select group_name, group_is_logging, group_is_rlbk_protected, group_nb_table, group_nb_sequence, group_is_rollbackable, 
       group_creation_time_id, group_last_alter_time_id, group_comment
  from emaj.emaj_group order by group_name;
    group_name    | group_is_logging | group_is_rlbk_protected | group_nb_table | group_nb_sequence | group_is_rollbackable | group_creation_time_id | group_last_alter_time_id | group_comment 
------------------+------------------+-------------------------+----------------+-------------------+-----------------------+------------------------+--------------------------+---------------
 emptyGroup       | f                | f                       |              0 |                 0 | t                     |                     18 |                          | 
 myGroup1         | f                | f                       |              5 |                 1 | t                     |                    200 |                          | 
 myGroup2         | t                | f                       |              6 |                 2 | t                     |                    201 |                          | 
 myGroup4         | f                | f                       |              3 |                 0 | t                     |                     10 |                          | 
 phil's group#3", | t                | t                       |              2 |                 2 | f                     |                      9 |                          | 
(5 rows)

select mark_id, mark_group, regexp_replace(mark_name,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d','%','g'), mark_time_id, mark_is_deleted, mark_is_rlbk_protected, mark_comment, mark_log_rows_before_next, mark_logged_rlbk_target_mark from emaj.emaj_mark order by mark_id;
 mark_id |    mark_group    | regexp_replace | mark_time_id | mark_is_deleted | mark_is_rlbk_protected | mark_comment | mark_log_rows_before_next | mark_logged_rlbk_target_mark 
---------+------------------+----------------+--------------+-----------------+------------------------+--------------+---------------------------+------------------------------
     201 | myGroup2         | Mark2          |          203 | t               | f                      |              |                         0 | 
     202 | phil's group#3", | Mark3          |          204 | f               | f                      |              |                           | 
     203 | emptyGroup       | Mark1          |          205 | t               | f                      |              |                         0 | 
     205 | myGroup2         | STOP_%         |          207 | t               | f                      |              |                         0 | 
     207 | myGroup1         | %abc%          |          209 | t               | f                      |              |                         0 | 
     208 | myGroup2         | START_%        |          210 | f               | f                      |              |                           | 
     209 | myGroup1         | STOP_%         |          211 | t               | f                      |              |                         0 | 
     210 | emptyGroup       | STOP_%         |          212 | t               | f                      |              |                         0 | 
(8 rows)

select time_id, time_last_emaj_gid, time_event from emaj.emaj_time_stamp where time_id >= 200 order by time_id;
 time_id | time_last_emaj_gid | time_event 
---------+--------------------+------------
     200 |                  0 | C
     201 |                  0 | C
     202 |                  0 | M
     203 |                  0 | M
     204 |                  0 | M
     205 |                  0 | M
     206 |                  0 | M
     207 |                  0 | M
     209 |                  0 | M
     210 |                  0 | M
     211 |                  2 | M
     212 |                  2 | M
(12 rows)

-- should be OK
select emaj.emaj_stop_group('myGroup2','Stop mark');
 emaj_stop_group 
-----------------
               8
(1 row)

-- warning, already stopped
select emaj.emaj_stop_group('myGroup2');
WARNING:  _stop_groups: Group "myGroup2" cannot be stopped because it is not in LOGGING state.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], v_mark, false, false)"
PL/pgSQL function "emaj_stop_group" line 16 at SQL statement
 emaj_stop_group 
-----------------
               0
(1 row)

select emaj.emaj_stop_group('myGroup2','Stop mark 2');
WARNING:  _stop_groups: Group "myGroup2" cannot be stopped because it is not in LOGGING state.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], v_mark, false, false)"
PL/pgSQL function "emaj_stop_group" line 16 at SQL statement
 emaj_stop_group 
-----------------
               0
(1 row)

-- start with auto-mark in a single transaction
begin transaction;
  select emaj.emaj_start_group('myGroup1');
 emaj_start_group 
------------------
                6
(1 row)

  select emaj.emaj_start_group('myGroup2','');
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
 emaj_start_group 
------------------
                8
(1 row)

commit;
select mark_id, mark_group, regexp_replace(mark_name,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d','%','g'), mark_time_id, mark_is_deleted, mark_is_rlbk_protected, mark_comment, mark_log_rows_before_next, mark_logged_rlbk_target_mark from emaj.emaj_mark order by mark_id;
 mark_id |    mark_group    | regexp_replace | mark_time_id | mark_is_deleted | mark_is_rlbk_protected | mark_comment | mark_log_rows_before_next | mark_logged_rlbk_target_mark 
---------+------------------+----------------+--------------+-----------------+------------------------+--------------+---------------------------+------------------------------
     202 | phil's group#3", | Mark3          |          204 | f               | f                      |              |                           | 
     203 | emptyGroup       | Mark1          |          205 | t               | f                      |              |                         0 | 
     210 | emptyGroup       | STOP_%         |          212 | t               | f                      |              |                         0 | 
     212 | myGroup1         | START_%        |          214 | f               | f                      |              |                           | 
     213 | myGroup2         | START_%        |          215 | f               | f                      |              |                           | 
(5 rows)

begin transaction;
  select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               6
(1 row)

  select emaj.emaj_stop_group('myGroup2','');
 emaj_stop_group 
-----------------
               8
(1 row)

commit;
-- use of % in start mark name
select emaj.emaj_start_group('myGroup1','Foo%Bar');
 emaj_start_group 
------------------
                6
(1 row)

select mark_id, mark_group, regexp_replace(mark_name,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d','%','g'), mark_time_id, mark_is_deleted, mark_is_rlbk_protected, mark_comment, mark_log_rows_before_next, mark_logged_rlbk_target_mark from emaj.emaj_mark order by mark_id;
 mark_id |    mark_group    | regexp_replace | mark_time_id | mark_is_deleted | mark_is_rlbk_protected | mark_comment | mark_log_rows_before_next | mark_logged_rlbk_target_mark 
---------+------------------+----------------+--------------+-----------------+------------------------+--------------+---------------------------+------------------------------
     202 | phil's group#3", | Mark3          |          204 | f               | f                      |              |                           | 
     203 | emptyGroup       | Mark1          |          205 | t               | f                      |              |                         0 | 
     210 | emptyGroup       | STOP_%         |          212 | t               | f                      |              |                         0 | 
     213 | myGroup2         | START_%        |          215 | t               | f                      |              |                         0 | 
     215 | myGroup2         | STOP_%         |          217 | t               | f                      |              |                         0 | 
     216 | myGroup1         | Foo%Bar        |          218 | f               | f                      |              |                           | 
(6 rows)

-----------------------------
-- emaj_start_groups() tests
-----------------------------
select emaj.emaj_stop_group('myGroup1',NULL);
 emaj_stop_group 
-----------------
               6
(1 row)

-- NULL group names array
select emaj.emaj_start_groups(NULL,NULL,NULL);
WARNING:  _check_names_array: No group name to process.
CONTEXT:  SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
 emaj_start_groups 
-------------------
                 0
(1 row)

-- at least one group is unknown in emaj_group_def
select emaj.emaj_start_groups('{""}',NULL);
WARNING:  _check_names_array: a group name is NULL or empty.
CONTEXT:  SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
WARNING:  _check_names_array: No group name to process.
CONTEXT:  SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
 emaj_start_groups 
-------------------
                 0
(1 row)

select emaj.emaj_start_groups('{"unknownGroup",""}',NULL,true);
WARNING:  _check_names_array: a group name is NULL or empty.
CONTEXT:  SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
ERROR:  _start_groups: group "unknownGroup" has not been created.
CONTEXT:  SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
select emaj.emaj_start_groups('{"myGroup1","unknownGroup"}',NULL,false);
ERROR:  _start_groups: group "unknownGroup" has not been created.
CONTEXT:  SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
-- reserved mark name
select emaj.emaj_start_groups('{"myGroup1"}','EMAJ_LAST_MARK');
ERROR:  _check_new_mark: "EMAJ_LAST_MARK" is not an allowed name for a new mark.
CONTEXT:  SQL statement "SELECT emaj._check_new_mark(v_mark, v_groupNames)"
PL/pgSQL function "_start_groups" line 45 at SQL statement
SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
-- second group is already started
select emaj.emaj_start_group('myGroup2','Mark1',true);
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(array[v_groupName], v_mark, false, v_resetLog)"
PL/pgSQL function "emaj_start_group" line 17 at SQL statement
 emaj_start_group 
------------------
                8
(1 row)

select emaj.emaj_start_groups('{"myGroup1","myGroup2"}','Mark1',false);
ERROR:  _start_groups: The group "myGroup2" cannot be started because it is in LOGGING state. An emaj_stop_group function must be previously executed.
CONTEXT:  SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
select emaj.emaj_stop_group('myGroup2');
 emaj_stop_group 
-----------------
               8
(1 row)

-- missing application table
begin;
  drop table mySchema2."myTbl3" cascade;
  select emaj.emaj_start_groups(array['myGroup1','myGroup2'],'Mark1',true);
ERROR:  _verify_groups (1): In group "myGroup2", the table "myschema2"."myTbl3" does not exist any more. You may use "SELECT * FROM emaj.emaj_verify_all()" to look for other issues.
CONTEXT:  SQL statement "SELECT 0 FROM emaj._verify_groups(v_groupNames, true)"
PL/pgSQL function "_start_groups" line 34 at PERFORM
SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
rollback;
-- should be OK, with a warning on fkey between tables from different groups and warning on group names array content
begin;
  alter table myschema2.myTbl4 drop constraint mytbl4_col44_fkey;
  alter table myschema2.myTbl4 add constraint mytbl4_col44_fkey 
    FOREIGN KEY (col44,col45) REFERENCES myschema1.myTbl1 (col11,col12) ON DELETE CASCADE ON UPDATE SET NULL;
  select emaj.emaj_start_groups(array['myGroup1',NULL,'myGroup2','','myGroup2','myGroup2','myGroup1'],'Mark1');
WARNING:  _check_names_array: a group name is NULL or empty.
CONTEXT:  SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
WARNING:  _check_names_array: a group name is NULL or empty.
CONTEXT:  SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
WARNING:  _check_names_array: duplicate group name "myGroup2".
CONTEXT:  SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
WARNING:  _check_names_array: duplicate group name "myGroup2".
CONTEXT:  SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
WARNING:  _check_names_array: duplicate group name "myGroup1".
CONTEXT:  SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
 emaj_start_groups 
-------------------
                14
(1 row)

rollback;
-- impact of started group
select emaj.emaj_start_groups(array['myGroup1','myGroup2'],'Mark1',true);
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
 emaj_start_groups 
-------------------
                14
(1 row)

select group_name, group_is_logging, group_is_rlbk_protected, group_nb_table, group_nb_sequence, group_is_rollbackable, 
       group_creation_time_id, group_last_alter_time_id, group_comment
  from emaj.emaj_group order by group_name;
    group_name    | group_is_logging | group_is_rlbk_protected | group_nb_table | group_nb_sequence | group_is_rollbackable | group_creation_time_id | group_last_alter_time_id | group_comment 
------------------+------------------+-------------------------+----------------+-------------------+-----------------------+------------------------+--------------------------+---------------
 emptyGroup       | f                | f                       |              0 |                 0 | t                     |                     18 |                          | 
 myGroup1         | t                | f                       |              5 |                 1 | t                     |                    200 |                          | 
 myGroup2         | t                | f                       |              6 |                 2 | t                     |                    201 |                          | 
 myGroup4         | f                | f                       |              3 |                 0 | t                     |                     10 |                          | 
 phil's group#3", | t                | t                       |              2 |                 2 | f                     |                      9 |                          | 
(5 rows)

select mark_id, mark_group, regexp_replace(mark_name,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d','%','g'), mark_time_id, mark_is_deleted, mark_is_rlbk_protected, mark_comment, mark_log_rows_before_next, mark_logged_rlbk_target_mark from emaj.emaj_mark order by mark_id;
 mark_id |    mark_group    | regexp_replace | mark_time_id | mark_is_deleted | mark_is_rlbk_protected | mark_comment | mark_log_rows_before_next | mark_logged_rlbk_target_mark 
---------+------------------+----------------+--------------+-----------------+------------------------+--------------+---------------------------+------------------------------
     202 | phil's group#3", | Mark3          |          204 | f               | f                      |              |                           | 
     203 | emptyGroup       | Mark1          |          205 | t               | f                      |              |                         0 | 
     210 | emptyGroup       | STOP_%         |          212 | t               | f                      |              |                         0 | 
     222 | myGroup1         | Mark1          |          223 | f               | f                      |              |                           | 
     223 | myGroup2         | Mark1          |          223 | f               | f                      |              |                           | 
(5 rows)

select time_id, time_last_emaj_gid, time_event from emaj.emaj_time_stamp where time_id >= 200 order by time_id;
 time_id | time_last_emaj_gid | time_event 
---------+--------------------+------------
     200 |                  0 | C
     201 |                  0 | C
     202 |                  0 | M
     203 |                  0 | M
     204 |                  0 | M
     205 |                  0 | M
     206 |                  0 | M
     207 |                  0 | M
     209 |                  0 | M
     210 |                  0 | M
     211 |                  2 | M
     212 |                  2 | M
     213 |                  2 | M
     214 |                  2 | M
     215 |                  2 | M
     216 |                  2 | M
     217 |                  2 | M
     218 |                  2 | M
     219 |                  2 | M
     220 |                  2 | M
     221 |                  2 | M
     223 |                  2 | M
(22 rows)

-----------------------------
-- emaj_stop_groups() tests
-----------------------------
-- NULL group names array
select emaj.emaj_stop_groups(NULL);
WARNING:  _check_names_array: No group name to process.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, false)"
PL/pgSQL function "emaj_stop_groups" line 13 at SQL statement
 emaj_stop_groups 
------------------
                0
(1 row)

-- at least one group is unknown in emaj_group_def
select emaj.emaj_stop_groups('{""}');
WARNING:  _check_names_array: a group name is NULL or empty.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, false)"
PL/pgSQL function "emaj_stop_groups" line 13 at SQL statement
WARNING:  _check_names_array: No group name to process.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, false)"
PL/pgSQL function "emaj_stop_groups" line 13 at SQL statement
 emaj_stop_groups 
------------------
                0
(1 row)

select emaj.emaj_stop_groups('{"unknownGroup",""}');
WARNING:  _check_names_array: a group name is NULL or empty.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, false)"
PL/pgSQL function "emaj_stop_groups" line 13 at SQL statement
ERROR:  _stop_groups: group "unknownGroup" has not been created.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, false)"
PL/pgSQL function "emaj_stop_groups" line 13 at SQL statement
select emaj.emaj_stop_groups('{"myGroup1","unknownGroup"}');
ERROR:  _stop_groups: group "unknownGroup" has not been created.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, false)"
PL/pgSQL function "emaj_stop_groups" line 13 at SQL statement
-- missing application table
begin;
  drop table mySchema2."myTbl3" cascade;
  select emaj.emaj_stop_groups(array['myGroup1','myGroup2']);
ERROR:  _stop_groups: Table "myschema2.myTbl3" does not exist any more.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, false)"
PL/pgSQL function "emaj_stop_groups" line 13 at SQL statement
rollback;
-- should be OK
select emaj.emaj_stop_groups(array['myGroup1','myGroup2'],'Global Stop at %');
 emaj_stop_groups 
------------------
               14
(1 row)

select mark_id, mark_group, regexp_replace(mark_name,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d','%','g'), mark_time_id, mark_is_deleted, mark_is_rlbk_protected, mark_comment, mark_log_rows_before_next, mark_logged_rlbk_target_mark from emaj.emaj_mark order by mark_id;
 mark_id |    mark_group    |  regexp_replace  | mark_time_id | mark_is_deleted | mark_is_rlbk_protected | mark_comment | mark_log_rows_before_next | mark_logged_rlbk_target_mark 
---------+------------------+------------------+--------------+-----------------+------------------------+--------------+---------------------------+------------------------------
     202 | phil's group#3", | Mark3            |          204 | f               | f                      |              |                           | 
     203 | emptyGroup       | Mark1            |          205 | t               | f                      |              |                         0 | 
     210 | emptyGroup       | STOP_%           |          212 | t               | f                      |              |                         0 | 
     222 | myGroup1         | Mark1            |          223 | t               | f                      |              |                         0 | 
     223 | myGroup2         | Mark1            |          223 | t               | f                      |              |                         0 | 
     224 | myGroup1         | Global Stop at % |          224 | t               | f                      |              |                         0 | 
     225 | myGroup2         | Global Stop at % |          224 | t               | f                      |              |                         0 | 
(7 rows)

-- with warning about group names array content
select emaj.emaj_stop_groups(array['myGroup1',NULL,'myGroup2','','myGroup2','myGroup2','myGroup1']);
WARNING:  _check_names_array: a group name is NULL or empty.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, false)"
PL/pgSQL function "emaj_stop_groups" line 13 at SQL statement
WARNING:  _check_names_array: a group name is NULL or empty.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, false)"
PL/pgSQL function "emaj_stop_groups" line 13 at SQL statement
WARNING:  _check_names_array: duplicate group name "myGroup2".
CONTEXT:  SQL statement "SELECT emaj._stop_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, false)"
PL/pgSQL function "emaj_stop_groups" line 13 at SQL statement
WARNING:  _check_names_array: duplicate group name "myGroup2".
CONTEXT:  SQL statement "SELECT emaj._stop_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, false)"
PL/pgSQL function "emaj_stop_groups" line 13 at SQL statement
WARNING:  _check_names_array: duplicate group name "myGroup1".
CONTEXT:  SQL statement "SELECT emaj._stop_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, false)"
PL/pgSQL function "emaj_stop_groups" line 13 at SQL statement
WARNING:  _stop_groups: Group "myGroup1" cannot be stopped because it is not in LOGGING state.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, false)"
PL/pgSQL function "emaj_stop_groups" line 13 at SQL statement
WARNING:  _stop_groups: Group "myGroup2" cannot be stopped because it is not in LOGGING state.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, false)"
PL/pgSQL function "emaj_stop_groups" line 13 at SQL statement
 emaj_stop_groups 
------------------
                0
(1 row)

-----------------------------
-- emaj_force_stop_group() tests
-----------------------------
select emaj.emaj_start_groups(array['myGroup1','myGroup2'],'Mark1',true);
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
 emaj_start_groups 
-------------------
                14
(1 row)

-- unknown group
select emaj.emaj_force_stop_group(NULL);
ERROR:  _stop_groups: group "<NULL>" has not been created.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], NULL, false, true)"
PL/pgSQL function "emaj_force_stop_group" line 15 at SQL statement
select emaj.emaj_force_stop_group('unkownGroup');
ERROR:  _stop_groups: group "unkownGroup" has not been created.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], NULL, false, true)"
PL/pgSQL function "emaj_force_stop_group" line 15 at SQL statement
-- should be OK
-- missing application schema
begin;
  drop schema mySchema2 cascade;
  select emaj.emaj_force_stop_group('myGroup2');
WARNING:  _stop_groups: Schema "myschema2" does not exist any more.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], NULL, false, true)"
PL/pgSQL function "emaj_force_stop_group" line 15 at SQL statement
WARNING:  _stop_groups: Table "myschema2.mytbl1" does not exist any more.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], NULL, false, true)"
PL/pgSQL function "emaj_force_stop_group" line 15 at SQL statement
WARNING:  _stop_groups: Table "myschema2.mytbl2" does not exist any more.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], NULL, false, true)"
PL/pgSQL function "emaj_force_stop_group" line 15 at SQL statement
WARNING:  _stop_groups: Table "myschema2.myTbl3" does not exist any more.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], NULL, false, true)"
PL/pgSQL function "emaj_force_stop_group" line 15 at SQL statement
WARNING:  _stop_groups: Table "myschema2.mytbl4" does not exist any more.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], NULL, false, true)"
PL/pgSQL function "emaj_force_stop_group" line 15 at SQL statement
WARNING:  _stop_groups: Table "myschema2.mytbl5" does not exist any more.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], NULL, false, true)"
PL/pgSQL function "emaj_force_stop_group" line 15 at SQL statement
WARNING:  _stop_groups: Table "myschema2.mytbl6" does not exist any more.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], NULL, false, true)"
PL/pgSQL function "emaj_force_stop_group" line 15 at SQL statement
 emaj_force_stop_group 
-----------------------
                     8
(1 row)

rollback;
-- missing application table
begin;
  drop table mySchema2."myTbl3" cascade;
  select emaj.emaj_force_stop_group('myGroup2');
WARNING:  _stop_groups: Table "myschema2.myTbl3" does not exist any more.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], NULL, false, true)"
PL/pgSQL function "emaj_force_stop_group" line 15 at SQL statement
 emaj_force_stop_group 
-----------------------
                     8
(1 row)

rollback;
-- missing log trigger
begin;
  drop trigger emaj_log_trg on myschema2.mytbl4;
  select emaj.emaj_force_stop_group('myGroup2');
WARNING:  _stop_groups: Log trigger "emaj_log_trg" on table "myschema2.mytbl4" does not exist any more.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], NULL, false, true)"
PL/pgSQL function "emaj_force_stop_group" line 15 at SQL statement
 emaj_force_stop_group 
-----------------------
                     8
(1 row)

rollback;
-- missing truncate trigger
begin;
  drop trigger emaj_trunc_trg on myschema2.mytbl4;
  select emaj.emaj_force_stop_group('myGroup2');
WARNING:  _stop_groups: Truncate trigger "emaj_trunc_trg" on table "myschema2.mytbl4" does not exist any more.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], NULL, false, true)"
PL/pgSQL function "emaj_force_stop_group" line 15 at SQL statement
 emaj_force_stop_group 
-----------------------
                     8
(1 row)

rollback;
-- sane group
select emaj.emaj_force_stop_group('myGroup2');
 emaj_force_stop_group 
-----------------------
                     8
(1 row)

select emaj.emaj_force_stop_group('myGroup1');
 emaj_force_stop_group 
-----------------------
                     6
(1 row)

-- warning, already stopped
select emaj.emaj_force_stop_group('myGroup2');
WARNING:  _stop_groups: Group "myGroup2" cannot be stopped because it is not in LOGGING state.
CONTEXT:  SQL statement "SELECT emaj._stop_groups(array[v_groupName], NULL, false, true)"
PL/pgSQL function "emaj_force_stop_group" line 15 at SQL statement
 emaj_force_stop_group 
-----------------------
                     0
(1 row)

-- impact of stopped group
select group_name, group_is_logging, group_is_rlbk_protected, group_nb_table, group_nb_sequence, group_is_rollbackable, 
       group_creation_time_id, group_last_alter_time_id, group_comment
  from emaj.emaj_group order by group_name;
    group_name    | group_is_logging | group_is_rlbk_protected | group_nb_table | group_nb_sequence | group_is_rollbackable | group_creation_time_id | group_last_alter_time_id | group_comment 
------------------+------------------+-------------------------+----------------+-------------------+-----------------------+------------------------+--------------------------+---------------
 emptyGroup       | f                | f                       |              0 |                 0 | t                     |                     18 |                          | 
 myGroup1         | f                | f                       |              5 |                 1 | t                     |                    200 |                          | 
 myGroup2         | f                | f                       |              6 |                 2 | t                     |                    201 |                          | 
 myGroup4         | f                | f                       |              3 |                 0 | t                     |                     10 |                          | 
 phil's group#3", | t                | t                       |              2 |                 2 | f                     |                      9 |                          | 
(5 rows)

select mark_id, mark_group, regexp_replace(mark_name,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d','%','g'), mark_time_id, mark_is_deleted, mark_is_rlbk_protected, mark_comment, mark_log_rows_before_next, mark_logged_rlbk_target_mark from emaj.emaj_mark order by mark_id;
 mark_id |    mark_group    | regexp_replace | mark_time_id | mark_is_deleted | mark_is_rlbk_protected | mark_comment | mark_log_rows_before_next | mark_logged_rlbk_target_mark 
---------+------------------+----------------+--------------+-----------------+------------------------+--------------+---------------------------+------------------------------
     202 | phil's group#3", | Mark3          |          204 | f               | f                      |              |                           | 
     203 | emptyGroup       | Mark1          |          205 | t               | f                      |              |                         0 | 
     210 | emptyGroup       | STOP_%         |          212 | t               | f                      |              |                         0 | 
     226 | myGroup1         | Mark1          |          225 | t               | f                      |              |                           | 
     227 | myGroup2         | Mark1          |          225 | t               | f                      |              |                           | 
(5 rows)

select time_id, time_last_emaj_gid, time_event from emaj.emaj_time_stamp where time_id >= 200 order by time_id;
 time_id | time_last_emaj_gid | time_event 
---------+--------------------+------------
     200 |                  0 | C
     201 |                  0 | C
     202 |                  0 | M
     203 |                  0 | M
     204 |                  0 | M
     205 |                  0 | M
     206 |                  0 | M
     207 |                  0 | M
     209 |                  0 | M
     210 |                  0 | M
     211 |                  2 | M
     212 |                  2 | M
     213 |                  2 | M
     214 |                  2 | M
     215 |                  2 | M
     216 |                  2 | M
     217 |                  2 | M
     218 |                  2 | M
     219 |                  2 | M
     220 |                  2 | M
     221 |                  2 | M
     223 |                  2 | M
     224 |                  2 | M
     225 |                  2 | M
(24 rows)

-----------------------------
-- emaj_protect_group() tests
-----------------------------
-- group is unknown
select emaj.emaj_protect_group(NULL);
ERROR:  emaj_protect_group: group <NULL> has not been created.
select emaj.emaj_protect_group('unknownGroup');
ERROR:  emaj_protect_group: group unknownGroup has not been created.
-- group is not rollbackable
select emaj.emaj_protect_group('phil''s group#3",');
ERROR:  emaj_protect_group: The group "phil's group#3"," cannot be protected because it is an AUDIT_ONLY group.
-- group is not in logging state
select emaj.emaj_protect_group('myGroup1');
ERROR:  emaj_protect_group: The group "myGroup1" cannot be protected because it is not in LOGGING state.
-- should be ok
select emaj.emaj_start_groups(array['myGroup1','emptyGroup'],'M1');
 emaj_start_groups 
-------------------
                 6
(1 row)

select emaj.emaj_protect_group('myGroup1');
 emaj_protect_group 
--------------------
                  1
(1 row)

select emaj.emaj_protect_group('emptyGroup');
 emaj_protect_group 
--------------------
                  1
(1 row)

select group_is_logging, group_is_rlbk_protected from emaj.emaj_group where group_name in ('myGroup1','emptyGroup');
 group_is_logging | group_is_rlbk_protected 
------------------+-------------------------
 t                | t
 t                | t
(2 rows)

-- protect an already protected group
select emaj.emaj_protect_group('myGroup1');
 emaj_protect_group 
--------------------
                  0
(1 row)

select group_is_logging, group_is_rlbk_protected from emaj.emaj_group where group_name = 'myGroup1';
 group_is_logging | group_is_rlbk_protected 
------------------+-------------------------
 t                | t
(1 row)

-- stop should reset the protection
select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               6
(1 row)

select group_is_logging, group_is_rlbk_protected from emaj.emaj_group where group_name = 'myGroup1';
 group_is_logging | group_is_rlbk_protected 
------------------+-------------------------
 f                | f
(1 row)

-----------------------------
-- emaj_unprotect_group() tests
-----------------------------
-- group is unknown
select emaj.emaj_unprotect_group(NULL);
ERROR:  emaj_unprotect_group: group "<NULL>" has not been created.
select emaj.emaj_unprotect_group('unknownGroup');
ERROR:  emaj_unprotect_group: group "unknownGroup" has not been created.
-- group is not rollbackable
select emaj.emaj_unprotect_group('phil''s group#3",');
ERROR:  emaj_unprotect_group: The group "phil's group#3"," cannot be unprotected because it is an AUDIT_ONLY group.
-- group is not in logging state
select emaj.emaj_unprotect_group('myGroup1');
 emaj_unprotect_group 
----------------------
                    0
(1 row)

-- should be ok
select emaj.emaj_start_group('myGroup1','M1');
 emaj_start_group 
------------------
                6
(1 row)

select emaj.emaj_protect_group('myGroup1');
 emaj_protect_group 
--------------------
                  1
(1 row)

select emaj.emaj_unprotect_group('myGroup1');
 emaj_unprotect_group 
----------------------
                    1
(1 row)

select emaj.emaj_unprotect_group('emptyGroup');
 emaj_unprotect_group 
----------------------
                    1
(1 row)

select group_is_logging, group_is_rlbk_protected from emaj.emaj_group where group_name in ('myGroup1','emptyGroup');
 group_is_logging | group_is_rlbk_protected 
------------------+-------------------------
 t                | f
 t                | f
(2 rows)

-- unprotect an already unprotected group
select emaj.emaj_unprotect_group('myGroup1');
 emaj_unprotect_group 
----------------------
                    0
(1 row)

select group_is_logging, group_is_rlbk_protected from emaj.emaj_group where group_name = 'myGroup1';
 group_is_logging | group_is_rlbk_protected 
------------------+-------------------------
 t                | f
(1 row)

select emaj.emaj_stop_groups(array['myGroup1','emptyGroup']);
 emaj_stop_groups 
------------------
                6
(1 row)

select group_is_logging, group_is_rlbk_protected from emaj.emaj_group where group_name = 'myGroup1';
 group_is_logging | group_is_rlbk_protected 
------------------+-------------------------
 f                | f
(1 row)

-- test end: (groups are stopped) reset history and force sequences id
select hist_id, hist_function, hist_event, hist_object, 
  regexp_replace(regexp_replace(hist_wording,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d','%','g'),E'\\[.+\\]','(timestamp)','g'),
  hist_user from emaj.emaj_hist order by hist_id;
 hist_id |  hist_function   | hist_event |                  hist_object                  |                       regexp_replace                        | hist_user 
---------+------------------+------------+-----------------------------------------------+-------------------------------------------------------------+-----------
    2036 | START_GROUP      | BEGIN      | myGroup1                                      | With log reset                                              | postgres
    2037 | PURGE_HISTORY    |            |                                               | 182 emaj_hist rows deleted ; 37 alter groups events deleted | postgres
    2038 | LOCK_GROUP       | BEGIN      | myGroup1                                      |                                                             | postgres
    2039 | LOCK_GROUP       | END        | myGroup1                                      | 5 tables locked, 0 deadlock(s)                              | postgres
    2040 | SET_MARK_GROUP   | BEGIN      | myGroup1                                      | Mark1                                                       | postgres
    2041 | SET_MARK_GROUP   | END        | myGroup1                                      | Mark1                                                       | postgres
    2042 | START_GROUP      | END        | myGroup1                                      | 6 tables/sequences processed                                | postgres
    2043 | START_GROUP      | BEGIN      | myGroup2                                      | With log reset                                              | postgres
    2044 | LOCK_GROUP       | BEGIN      | myGroup2                                      |                                                             | postgres
    2045 | LOCK_GROUP       | END        | myGroup2                                      | 6 tables locked, 0 deadlock(s)                              | postgres
    2046 | SET_MARK_GROUP   | BEGIN      | myGroup2                                      | Mark2                                                       | postgres
    2047 | SET_MARK_GROUP   | END        | myGroup2                                      | Mark2                                                       | postgres
    2048 | START_GROUP      | END        | myGroup2                                      | 8 tables/sequences processed                                | postgres
    2049 | START_GROUP      | BEGIN      | phil's group#3",                              | Without log reset                                           | postgres
    2050 | LOCK_GROUP       | BEGIN      | phil's group#3",                              |                                                             | postgres
    2051 | LOCK_GROUP       | END        | phil's group#3",                              | 2 tables locked, 0 deadlock(s)                              | postgres
    2052 | SET_MARK_GROUP   | BEGIN      | phil's group#3",                              | Mark3                                                       | postgres
    2053 | SET_MARK_GROUP   | END        | phil's group#3",                              | Mark3                                                       | postgres
    2054 | START_GROUP      | END        | phil's group#3",                              | 4 tables/sequences processed                                | postgres
    2055 | START_GROUP      | BEGIN      | emptyGroup                                    | With log reset                                              | postgres
    2056 | LOCK_GROUP       | BEGIN      | emptyGroup                                    |                                                             | postgres
    2057 | LOCK_GROUP       | END        | emptyGroup                                    | 0 tables locked, 0 deadlock(s)                              | postgres
    2058 | SET_MARK_GROUP   | BEGIN      | emptyGroup                                    | Mark1                                                       | postgres
    2059 | SET_MARK_GROUP   | END        | emptyGroup                                    | Mark1                                                       | postgres
    2060 | START_GROUP      | END        | emptyGroup                                    | 0 tables/sequences processed                                | postgres
    2061 | STOP_GROUP       | BEGIN      | myGroup1                                      |                                                             | postgres
    2062 | LOCK_GROUP       | BEGIN      | myGroup1                                      |                                                             | postgres
    2063 | LOCK_GROUP       | END        | myGroup1                                      | 5 tables locked, 0 deadlock(s)                              | postgres
    2064 | SET_MARK_GROUP   | BEGIN      | myGroup1                                      | STOP_%                                                      | postgres
    2065 | SET_MARK_GROUP   | END        | myGroup1                                      | STOP_%                                                      | postgres
    2066 | STOP_GROUP       | END        | myGroup1                                      | 6 tables/sequences processed                                | postgres
    2067 | STOP_GROUP       | BEGIN      | myGroup2                                      |                                                             | postgres
    2068 | LOCK_GROUP       | BEGIN      | myGroup2                                      |                                                             | postgres
    2069 | LOCK_GROUP       | END        | myGroup2                                      | 6 tables locked, 0 deadlock(s)                              | postgres
    2070 | SET_MARK_GROUP   | BEGIN      | myGroup2                                      | STOP_%                                                      | postgres
    2071 | SET_MARK_GROUP   | END        | myGroup2                                      | STOP_%                                                      | postgres
    2072 | STOP_GROUP       | END        | myGroup2                                      | 8 tables/sequences processed                                | postgres
    2079 | START_GROUP      | BEGIN      | myGroup1                                      | With log reset                                              | postgres
    2080 | LOCK_GROUP       | BEGIN      | myGroup1                                      |                                                             | postgres
    2081 | LOCK_GROUP       | END        | myGroup1                                      | 5 tables locked, 0 deadlock(s)                              | postgres
    2082 | SET_MARK_GROUP   | BEGIN      | myGroup1                                      | %abc%                                                       | postgres
    2083 | SET_MARK_GROUP   | END        | myGroup1                                      | %abc%                                                       | postgres
    2084 | START_GROUP      | END        | myGroup1                                      | 6 tables/sequences processed                                | postgres
    2085 | START_GROUP      | BEGIN      | myGroup2                                      | Without log reset                                           | postgres
    2086 | LOCK_GROUP       | BEGIN      | myGroup2                                      |                                                             | postgres
    2087 | LOCK_GROUP       | END        | myGroup2                                      | 6 tables locked, 0 deadlock(s)                              | postgres
    2088 | SET_MARK_GROUP   | BEGIN      | myGroup2                                      | START_%                                                     | postgres
    2089 | SET_MARK_GROUP   | END        | myGroup2                                      | START_%                                                     | postgres
    2090 | START_GROUP      | END        | myGroup2                                      | 8 tables/sequences processed                                | postgres
    2101 | STOP_GROUP       | BEGIN      | myGroup1                                      |                                                             | postgres
    2102 | LOCK_GROUP       | BEGIN      | myGroup1                                      |                                                             | postgres
    2103 | LOCK_GROUP       | END        | myGroup1                                      | 5 tables locked, 0 deadlock(s)                              | postgres
    2104 | SET_MARK_GROUP   | BEGIN      | myGroup1                                      | STOP_%                                                      | postgres
    2105 | SET_MARK_GROUP   | END        | myGroup1                                      | STOP_%                                                      | postgres
    2106 | STOP_GROUP       | END        | myGroup1                                      | 6 tables/sequences processed                                | postgres
    2107 | STOP_GROUP       | BEGIN      | emptyGroup                                    |                                                             | postgres
    2108 | LOCK_GROUP       | BEGIN      | emptyGroup                                    |                                                             | postgres
    2109 | LOCK_GROUP       | END        | emptyGroup                                    | 0 tables locked, 0 deadlock(s)                              | postgres
    2110 | SET_MARK_GROUP   | BEGIN      | emptyGroup                                    | STOP_%                                                      | postgres
    2111 | SET_MARK_GROUP   | END        | emptyGroup                                    | STOP_%                                                      | postgres
    2112 | STOP_GROUP       | END        | emptyGroup                                    | 0 tables/sequences processed                                | postgres
    2113 | STOP_GROUP       | BEGIN      | myGroup2                                      |                                                             | postgres
    2114 | LOCK_GROUP       | BEGIN      | myGroup2                                      |                                                             | postgres
    2115 | LOCK_GROUP       | END        | myGroup2                                      | 6 tables locked, 0 deadlock(s)                              | postgres
    2116 | SET_MARK_GROUP   | BEGIN      | myGroup2                                      | Stop mark                                                   | postgres
    2117 | SET_MARK_GROUP   | END        | myGroup2                                      | Stop mark                                                   | postgres
    2118 | STOP_GROUP       | END        | myGroup2                                      | 8 tables/sequences processed                                | postgres
    2119 | STOP_GROUP       | BEGIN      | myGroup2                                      |                                                             | postgres
    2120 | STOP_GROUP       | END        | myGroup2                                      | 0 tables/sequences processed                                | postgres
    2121 | STOP_GROUP       | BEGIN      | myGroup2                                      |                                                             | postgres
    2122 | STOP_GROUP       | END        | myGroup2                                      | 0 tables/sequences processed                                | postgres
    2123 | START_GROUP      | BEGIN      | myGroup1                                      | With log reset                                              | postgres
    2124 | LOCK_GROUP       | BEGIN      | myGroup1                                      |                                                             | postgres
    2125 | LOCK_GROUP       | END        | myGroup1                                      | 5 tables locked, 0 deadlock(s)                              | postgres
    2126 | SET_MARK_GROUP   | BEGIN      | myGroup1                                      | START_%                                                     | postgres
    2127 | SET_MARK_GROUP   | END        | myGroup1                                      | START_%                                                     | postgres
    2128 | START_GROUP      | END        | myGroup1                                      | 6 tables/sequences processed                                | postgres
    2129 | START_GROUP      | BEGIN      | myGroup2                                      | With log reset                                              | postgres
    2130 | LOCK_GROUP       | BEGIN      | myGroup2                                      |                                                             | postgres
    2131 | LOCK_GROUP       | END        | myGroup2                                      | 6 tables locked, 0 deadlock(s)                              | postgres
    2132 | SET_MARK_GROUP   | BEGIN      | myGroup2                                      | START_%                                                     | postgres
    2133 | SET_MARK_GROUP   | END        | myGroup2                                      | START_%                                                     | postgres
    2134 | START_GROUP      | END        | myGroup2                                      | 8 tables/sequences processed                                | postgres
    2135 | STOP_GROUP       | BEGIN      | myGroup1                                      |                                                             | postgres
    2136 | LOCK_GROUP       | BEGIN      | myGroup1                                      |                                                             | postgres
    2137 | LOCK_GROUP       | END        | myGroup1                                      | 5 tables locked, 0 deadlock(s)                              | postgres
    2138 | SET_MARK_GROUP   | BEGIN      | myGroup1                                      | STOP_%                                                      | postgres
    2139 | SET_MARK_GROUP   | END        | myGroup1                                      | STOP_%                                                      | postgres
    2140 | STOP_GROUP       | END        | myGroup1                                      | 6 tables/sequences processed                                | postgres
    2141 | STOP_GROUP       | BEGIN      | myGroup2                                      |                                                             | postgres
    2142 | LOCK_GROUP       | BEGIN      | myGroup2                                      |                                                             | postgres
    2143 | LOCK_GROUP       | END        | myGroup2                                      | 6 tables locked, 0 deadlock(s)                              | postgres
    2144 | SET_MARK_GROUP   | BEGIN      | myGroup2                                      | STOP_%                                                      | postgres
    2145 | SET_MARK_GROUP   | END        | myGroup2                                      | STOP_%                                                      | postgres
    2146 | STOP_GROUP       | END        | myGroup2                                      | 8 tables/sequences processed                                | postgres
    2147 | START_GROUP      | BEGIN      | myGroup1                                      | With log reset                                              | postgres
    2148 | LOCK_GROUP       | BEGIN      | myGroup1                                      |                                                             | postgres
    2149 | LOCK_GROUP       | END        | myGroup1                                      | 5 tables locked, 0 deadlock(s)                              | postgres
    2150 | SET_MARK_GROUP   | BEGIN      | myGroup1                                      | Foo%Bar                                                     | postgres
    2151 | SET_MARK_GROUP   | END        | myGroup1                                      | Foo%Bar                                                     | postgres
    2152 | START_GROUP      | END        | myGroup1                                      | 6 tables/sequences processed                                | postgres
    2153 | STOP_GROUP       | BEGIN      | myGroup1                                      |                                                             | postgres
    2154 | LOCK_GROUP       | BEGIN      | myGroup1                                      |                                                             | postgres
    2155 | LOCK_GROUP       | END        | myGroup1                                      | 5 tables locked, 0 deadlock(s)                              | postgres
    2156 | SET_MARK_GROUP   | BEGIN      | myGroup1                                      | STOP_%                                                      | postgres
    2157 | SET_MARK_GROUP   | END        | myGroup1                                      | STOP_%                                                      | postgres
    2158 | STOP_GROUP       | END        | myGroup1                                      | 6 tables/sequences processed                                | postgres
    2159 | START_GROUPS     | BEGIN      |                                               | Without log reset                                           | postgres
    2160 | START_GROUPS     | END        |                                               | 0 tables/sequences processed                                | postgres
    2161 | START_GROUPS     | BEGIN      |                                               | With log reset                                              | postgres
    2162 | START_GROUPS     | END        |                                               | 0 tables/sequences processed                                | postgres
    2166 | START_GROUP      | BEGIN      | myGroup2                                      | With log reset                                              | postgres
    2167 | LOCK_GROUP       | BEGIN      | myGroup2                                      |                                                             | postgres
    2168 | LOCK_GROUP       | END        | myGroup2                                      | 6 tables locked, 0 deadlock(s)                              | postgres
    2169 | SET_MARK_GROUP   | BEGIN      | myGroup2                                      | Mark1                                                       | postgres
    2170 | SET_MARK_GROUP   | END        | myGroup2                                      | Mark1                                                       | postgres
    2171 | START_GROUP      | END        | myGroup2                                      | 8 tables/sequences processed                                | postgres
    2173 | STOP_GROUP       | BEGIN      | myGroup2                                      |                                                             | postgres
    2174 | LOCK_GROUP       | BEGIN      | myGroup2                                      |                                                             | postgres
    2175 | LOCK_GROUP       | END        | myGroup2                                      | 6 tables locked, 0 deadlock(s)                              | postgres
    2176 | SET_MARK_GROUP   | BEGIN      | myGroup2                                      | STOP_%                                                      | postgres
    2177 | SET_MARK_GROUP   | END        | myGroup2                                      | STOP_%                                                      | postgres
    2178 | STOP_GROUP       | END        | myGroup2                                      | 8 tables/sequences processed                                | postgres
    2186 | START_GROUPS     | BEGIN      | myGroup1,myGroup2                             | With log reset                                              | postgres
    2187 | LOCK_GROUPS      | BEGIN      | myGroup1,myGroup2                             |                                                             | postgres
    2188 | LOCK_GROUPS      | END        | myGroup1,myGroup2                             | 11 tables locked, 0 deadlock(s)                             | postgres
    2189 | SET_MARK_GROUPS  | BEGIN      | myGroup1,myGroup2                             | Mark1                                                       | postgres
    2190 | SET_MARK_GROUPS  | END        | myGroup1,myGroup2                             | Mark1                                                       | postgres
    2191 | START_GROUPS     | END        | myGroup1,myGroup2                             | 14 tables/sequences processed                               | postgres
    2192 | STOP_GROUPS      | BEGIN      |                                               |                                                             | postgres
    2193 | STOP_GROUPS      | END        |                                               | 0 tables/sequences processed                                | postgres
    2194 | STOP_GROUPS      | BEGIN      |                                               |                                                             | postgres
    2195 | STOP_GROUPS      | END        |                                               | 0 tables/sequences processed                                | postgres
    2201 | STOP_GROUPS      | BEGIN      | myGroup1,myGroup2                             |                                                             | postgres
    2202 | LOCK_GROUPS      | BEGIN      | myGroup1,myGroup2                             |                                                             | postgres
    2203 | LOCK_GROUPS      | END        | myGroup1,myGroup2                             | 11 tables locked, 0 deadlock(s)                             | postgres
    2204 | SET_MARK_GROUPS  | BEGIN      | myGroup1,myGroup2                             | Global Stop at %                                            | postgres
    2205 | SET_MARK_GROUPS  | END        | myGroup1,myGroup2                             | Global Stop at %                                            | postgres
    2206 | STOP_GROUPS      | END        | myGroup1,myGroup2                             | 14 tables/sequences processed                               | postgres
    2207 | STOP_GROUPS      | BEGIN      | myGroup1,myGroup2,,myGroup2,myGroup2,myGroup1 |                                                             | postgres
    2208 | STOP_GROUPS      | END        | myGroup1,myGroup2,,myGroup2,myGroup2,myGroup1 | 0 tables/sequences processed                                | postgres
    2209 | START_GROUPS     | BEGIN      | myGroup1,myGroup2                             | With log reset                                              | postgres
    2210 | LOCK_GROUPS      | BEGIN      | myGroup1,myGroup2                             |                                                             | postgres
    2211 | LOCK_GROUPS      | END        | myGroup1,myGroup2                             | 11 tables locked, 0 deadlock(s)                             | postgres
    2212 | SET_MARK_GROUPS  | BEGIN      | myGroup1,myGroup2                             | Mark1                                                       | postgres
    2213 | SET_MARK_GROUPS  | END        | myGroup1,myGroup2                             | Mark1                                                       | postgres
    2214 | START_GROUPS     | END        | myGroup1,myGroup2                             | 14 tables/sequences processed                               | postgres
    2233 | FORCE_STOP_GROUP | BEGIN      | myGroup2                                      |                                                             | postgres
    2234 | LOCK_GROUP       | BEGIN      | myGroup2                                      |                                                             | postgres
    2235 | LOCK_GROUP       | END        | myGroup2                                      | 6 tables locked, 0 deadlock(s)                              | postgres
    2236 | FORCE_STOP_GROUP | END        | myGroup2                                      | 8 tables/sequences processed                                | postgres
    2237 | FORCE_STOP_GROUP | BEGIN      | myGroup1                                      |                                                             | postgres
    2238 | LOCK_GROUP       | BEGIN      | myGroup1                                      |                                                             | postgres
    2239 | LOCK_GROUP       | END        | myGroup1                                      | 5 tables locked, 0 deadlock(s)                              | postgres
    2240 | FORCE_STOP_GROUP | END        | myGroup1                                      | 6 tables/sequences processed                                | postgres
    2241 | FORCE_STOP_GROUP | BEGIN      | myGroup2                                      |                                                             | postgres
    2242 | FORCE_STOP_GROUP | END        | myGroup2                                      | 0 tables/sequences processed                                | postgres
    2243 | START_GROUPS     | BEGIN      | myGroup1,emptyGroup                           | With log reset                                              | postgres
    2244 | LOCK_GROUPS      | BEGIN      | myGroup1,emptyGroup                           |                                                             | postgres
    2245 | LOCK_GROUPS      | END        | myGroup1,emptyGroup                           | 5 tables locked, 0 deadlock(s)                              | postgres
    2246 | SET_MARK_GROUPS  | BEGIN      | myGroup1,emptyGroup                           | M1                                                          | postgres
    2247 | SET_MARK_GROUPS  | END        | myGroup1,emptyGroup                           | M1                                                          | postgres
    2248 | START_GROUPS     | END        | myGroup1,emptyGroup                           | 6 tables/sequences processed                                | postgres
    2249 | PROTECT_GROUP    |            | myGroup1                                      | Status 1                                                    | postgres
    2250 | PROTECT_GROUP    |            | emptyGroup                                    | Status 1                                                    | postgres
    2251 | PROTECT_GROUP    |            | myGroup1                                      | Status 0                                                    | postgres
    2252 | STOP_GROUP       | BEGIN      | myGroup1                                      |                                                             | postgres
    2253 | LOCK_GROUP       | BEGIN      | myGroup1                                      |                                                             | postgres
    2254 | LOCK_GROUP       | END        | myGroup1                                      | 5 tables locked, 0 deadlock(s)                              | postgres
    2255 | SET_MARK_GROUP   | BEGIN      | myGroup1                                      | STOP_%                                                      | postgres
    2256 | SET_MARK_GROUP   | END        | myGroup1                                      | STOP_%                                                      | postgres
    2257 | STOP_GROUP       | END        | myGroup1                                      | 6 tables/sequences processed                                | postgres
    2258 | UNPROTECT_GROUP  |            | myGroup1                                      | Status 0                                                    | postgres
    2259 | START_GROUP      | BEGIN      | myGroup1                                      | With log reset                                              | postgres
    2260 | LOCK_GROUP       | BEGIN      | myGroup1                                      |                                                             | postgres
    2261 | LOCK_GROUP       | END        | myGroup1                                      | 5 tables locked, 0 deadlock(s)                              | postgres
    2262 | SET_MARK_GROUP   | BEGIN      | myGroup1                                      | M1                                                          | postgres
    2263 | SET_MARK_GROUP   | END        | myGroup1                                      | M1                                                          | postgres
    2264 | START_GROUP      | END        | myGroup1                                      | 6 tables/sequences processed                                | postgres
    2265 | PROTECT_GROUP    |            | myGroup1                                      | Status 1                                                    | postgres
    2266 | UNPROTECT_GROUP  |            | myGroup1                                      | Status 1                                                    | postgres
    2267 | UNPROTECT_GROUP  |            | emptyGroup                                    | Status 1                                                    | postgres
    2268 | UNPROTECT_GROUP  |            | myGroup1                                      | Status 0                                                    | postgres
    2269 | STOP_GROUPS      | BEGIN      | myGroup1,emptyGroup                           |                                                             | postgres
    2270 | LOCK_GROUPS      | BEGIN      | myGroup1,emptyGroup                           |                                                             | postgres
    2271 | LOCK_GROUPS      | END        | myGroup1,emptyGroup                           | 5 tables locked, 0 deadlock(s)                              | postgres
    2272 | SET_MARK_GROUPS  | BEGIN      | myGroup1,emptyGroup                           | STOP_%                                                      | postgres
    2273 | SET_MARK_GROUPS  | END        | myGroup1,emptyGroup                           | STOP_%                                                      | postgres
    2274 | STOP_GROUPS      | END        | myGroup1,emptyGroup                           | 6 tables/sequences processed                                | postgres
(189 rows)

truncate emaj.emaj_hist;
alter sequence emaj.emaj_hist_hist_id_seq restart 3000;
alter sequence emaj.emaj_time_stamp_time_id_seq restart 300;
alter sequence emaj.emaj_mark_mark_id_seq restart 300;
