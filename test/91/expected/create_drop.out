-- create_drop.sql : prepare groups content and test emaj_create_group(), emaj_comment_group() 
-- emaj_drop_group(), emaj_force_drop_group(), emaj_alter_group() and emaj_alter_groups() functions
--
SET client_min_messages TO WARNING;
-----------------------------
-- prepare groups
-----------------------------
delete from emaj.emaj_group_def;
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl1',20);
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2',NULL,NULL,NULL,'tsplog1','tsplog1');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2b',NULL,'b',NULL,'tsp log''2','tsp log''2');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3_col31_seq',1);
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3',10,'C',NULL,'tsplog1');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl4',20,NULL,NULL,'tsplog1','tsp log''2');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl1');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl2');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','myTbl3_col31_seq');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','myTbl3',NULL,'C');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl4',NULL,NULL,'myschema2_mytbl4');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl5',NULL,NULL,'otherPrefix4mytbl5');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl6');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','myseq1');
-- The third group name contains space, comma # and '
-- (note myTbl4 from "phil's schema3" remains outside phil's group#3", group)
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3','phil''s tbl1',NULL,' #''3');
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3',E'myTbl2\\');
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3',E'myTbl2\\_col21_seq');
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3',E'phil''s seq\\1');
insert into emaj.emaj_group_def values ('myGroup4','myschema4','mytblm');
insert into emaj.emaj_group_def values ('myGroup4','myschema4','mytblc1');
insert into emaj.emaj_group_def values ('myGroup4','myschema4','mytblc2');
insert into emaj.emaj_group_def values ('dummyGrp1','dummySchema','mytbl4');
insert into emaj.emaj_group_def values ('dummyGrp1','myschema1','dummyTable');
insert into emaj.emaj_group_def values ('dummyGrp2','emaj','emaj_param');
insert into emaj.emaj_group_def values ('dummyGrp2','emajC','myschema1_myTbl3_log');
insert into emaj.emaj_group_def values ('dummyGrp3','myschema1','mytbl1');
insert into emaj.emaj_group_def values ('dummyGrp3','myschema2','mytbl2');
-----------------------------
-- disable event triggers 
-----------------------------
-- this is done to allow tests with missing or renamed or altered components
-- triggers will be re-enabled in misc.sql
select emaj.emaj_disable_protection_by_event_triggers();
 emaj_disable_protection_by_event_triggers 
-------------------------------------------
                                         0
(1 row)

-----------------------------
-- emaj_create_group() tests
-----------------------------
-- invalid group names
select emaj.emaj_create_group(NULL);
ERROR:  emaj_create_group: group name can't be NULL or empty.
select emaj.emaj_create_group('',false);
ERROR:  emaj_create_group: group name can't be NULL or empty.
-- group is unknown in emaj_group_def
select emaj.emaj_create_group('unknownGroup');
ERROR:  emaj_create_group: group "unknownGroup" is unknown in the emaj_group_def table. To create an empty group, explicitely set the third parameter to true.
select emaj.emaj_create_group('unknownGroup',false);
ERROR:  emaj_create_group: group "unknownGroup" is unknown in the emaj_group_def table. To create an empty group, explicitely set the third parameter to true.
-- an emtpy group to create is known in emaj_group_def
select emaj.emaj_create_group('myGroup1',true,true);
ERROR:  emaj_create_group: group "myGroup1" is referenced into the emaj_group_def table. This is not consistent with the <is_empty> parameter set to true.
-- unknown schema or table in emaj_group_def
select emaj.emaj_create_group('dummyGrp1');
WARNING:  _check_groups_content: Error, the table or sequence "dummySchema".mytbl4 does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
WARNING:  _check_groups_content: Error, the table or sequence myschema1."dummyTable" does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
-- group with a temp table
begin;
  CREATE TEMPORARY TABLE myTempTbl (
    col1       INT     NOT NULL,
    PRIMARY KEY (col1)
  );
  insert into emaj.emaj_group_def 
    select 'myGroup5',nspname,'mytemptbl' from pg_class, pg_namespace
      where relnamespace = pg_namespace.oid and relname = 'mytemptbl';
  select emaj.emaj_create_group('myGroup5');
WARNING:  _check_groups_content: Error, the table pg_temp_2.mytemptbl is a TEMPORARY table.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
rollback;
-- group with an unlogged table
begin;
  insert into emaj.emaj_group_def values ('myGroup5','myschema5','myunloggedtbl');
  select emaj.emaj_create_group('myGroup5');
WARNING:  _check_groups_content: Error, the table myschema5.myunloggedtbl is an UNLOGGED table.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
rollback;
-- group with a WITH OIDS table
begin;
  insert into emaj.emaj_group_def values ('myGroup5','myschema5','myoidstbl');
  select emaj.emaj_create_group('myGroup5');
WARNING:  _check_groups_content: Error, the table myschema5.myoidstbl is declared WITH OIDS.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
rollback;
-- table without pkey for a rollbackable group
select emaj.emaj_create_group('phil''s group#3",',true);
WARNING:  _check_groups_content: Error, the table "phil's schema3"."myTbl2\" has no PRIMARY KEY.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
-- sequence with a log schema suffix defined in the emaj_group_def table
begin;
  update emaj.emaj_group_def set grpdef_log_schema_suffix = 'something' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_create_group('myGroup1');
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the secondary log schema suffix is not NULL.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
rollback;
-- sequence with an emaj names prefix defined in the emaj_group_def table
begin;
  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'something' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_create_group('myGroup1');
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the emaj names prefix is not NULL.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
rollback;
-- sequence with tablespaces defined in the emaj_group_def table
begin;
  update emaj.emaj_group_def set grpdef_log_dat_tsp = 'something', grpdef_log_idx_tsp = 'something' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_create_group('myGroup1');
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the data log tablespace is not NULL.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the index log tablespace is not NULL.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
rollback;
-- table with invalid tablespace
begin;
  update emaj.emaj_group_def set grpdef_log_dat_tsp = 'dummyTablespace' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
  select emaj.emaj_create_group('myGroup1');
ERROR:  tablespace "dummyTablespace" does not exist
CONTEXT:  SQL statement "CREATE TABLE emaj.myschema1_mytbl1_log (LIKE myschema1.mytbl1) TABLESPACE "dummyTablespace""
PL/pgSQL function "_create_tbl" line 67 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 70 at PERFORM
rollback;
-- already existing secondary schema
begin;
  create schema emajb;
  select emaj.emaj_create_group('myGroup1');
ERROR:  _create_log_schema: schema "emajb" should not exist. Drop it manually, or modify emaj_group_def table's content.
CONTEXT:  SQL statement "SELECT emaj._create_log_schema(r_schema.log_schema)"
PL/pgSQL function "emaj_create_group" line 55 at PERFORM
rollback;
-- conflict on emaj names prefix inside the group to create
begin;
  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'samePrefix' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'samePrefix' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2';
  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'myschema1_mytbl4' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
  select emaj.emaj_create_group('myGroup1');
WARNING:  _check_groups_content: Error, the emaj prefix "myschema1_mytbl4" is configured for several tables in the groups.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
WARNING:  _check_groups_content: Error, the emaj prefix "samePrefix" is configured for several tables in the groups.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
rollback;
-- conflict on emaj names prefix with already create groups
begin;
  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'samePrefix' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
  select emaj.emaj_create_group('myGroup1');
WARNING:  _create_tbl: table "myschema1.mytbl2" has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(r_grpdef, v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 70 at PERFORM
 emaj_create_group 
-------------------
                 6
(1 row)

  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'samePrefix' where grpdef_group = 'myGroup2' and grpdef_schema = 'myschema2' and grpdef_tblseq = 'mytbl1';
  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'myschema1_mytbl2' where grpdef_group = 'myGroup2' and grpdef_schema = 'myschema2' and grpdef_tblseq = 'mytbl2';
  select emaj.emaj_create_group('myGroup2');
WARNING:  _check_groups_content: Error, the emaj prefix "myschema1_mytbl2" is already used.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
WARNING:  _check_groups_content: Error, the emaj prefix "samePrefix" is already used.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
rollback;
-- mix a lot of errors
begin;
  update emaj.emaj_group_def set grpdef_log_schema_suffix = 'something', grpdef_emaj_names_prefix = 'something', grpdef_log_dat_tsp = 'something' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'samePrefix' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'samePrefix' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2';
  alter table myschema1.mytbl1 set with oids;
  select emaj.emaj_create_group('myGroup1');
WARNING:  _check_groups_content: Error, the emaj prefix "samePrefix" is configured for several tables in the groups.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
WARNING:  _check_groups_content: Error, the table myschema1.mytbl1 is declared WITH OIDS.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the secondary log schema suffix is not NULL.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the emaj names prefix is not NULL.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the data log tablespace is not NULL.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
rollback;
-- should be OK
select emaj.emaj_create_group('myGroup1');
WARNING:  _create_tbl: table "myschema1.mytbl2" has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(r_grpdef, v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 70 at PERFORM
 emaj_create_group 
-------------------
                 6
(1 row)

-- explicitely create an empty group (here audit_only)
select emaj.emaj_create_group('emptyGroup',false,true);
 emaj_create_group 
-------------------
                 0
(1 row)

-- should be OK, but with a warning for linked table not protected by E-Maj
alter table myschema2.myTbl6 add foreign key (col61) references myschema2.myTbl7 (col71) deferrable initially immediate;
alter table myschema2.myTbl8 add foreign key (col81) references myschema2.myTbl6 (col61) deferrable;
select emaj.emaj_create_group('myGroup2',true);
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups (array[v_groupName])"
PL/pgSQL function "emaj_create_group" line 90 at PERFORM
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups (array[v_groupName])"
PL/pgSQL function "emaj_create_group" line 90 at PERFORM
 emaj_create_group 
-------------------
                 8
(1 row)

-- should be OK, but with a warning for linked table belonging to another group
begin;
  update emaj.emaj_group_def set grpdef_group = 'dummyGrp3' 
    where grpdef_schema = 'phil''s schema3' and grpdef_tblseq = E'myTbl2\\';
  select emaj.emaj_create_group('phil''s group#3",',false);
WARNING:  _create_seq: Sequence phil's schema3.myTbl2\_col21_seq is linked to table phil's schema3.myTbl2\ but this table belong to another tables group (dummyGrp3).
CONTEXT:  SQL statement "SELECT emaj._create_seq(r_grpdef)"
PL/pgSQL function "emaj_create_group" line 83 at PERFORM
 emaj_create_group 
-------------------
                 3
(1 row)

rollback;
-- should be OK, but with a warning for linked table not belonging to any group
begin;
  delete from emaj.emaj_group_def
    where grpdef_schema = 'phil''s schema3' and grpdef_tblseq = E'myTbl2\\';
  select emaj.emaj_create_group('phil''s group#3",',false);
WARNING:  _create_seq: Sequence phil's schema3.myTbl2\_col21_seq is linked to table phil's schema3.myTbl2\ but this table does not belong to any tables group.
CONTEXT:  SQL statement "SELECT emaj._create_seq(r_grpdef)"
PL/pgSQL function "emaj_create_group" line 83 at PERFORM
 emaj_create_group 
-------------------
                 3
(1 row)

rollback;
-- should be OK
select emaj.emaj_create_group('phil''s group#3",',false);
 emaj_create_group 
-------------------
                 4
(1 row)

select emaj.emaj_create_group('myGroup4');
WARNING:  _create_tbl: table "myschema4.mytblm" has triggers (mytblm_insert_trigger). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(r_grpdef, v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 70 at PERFORM
 emaj_create_group 
-------------------
                 3
(1 row)

-- create a group with a table from an E-Maj secondary schema
select emaj.emaj_create_group('dummyGrp2',false);
WARNING:  _check_groups_content: Error, the table or sequence emaj.emaj_param belongs to an E-Maj schema.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
WARNING:  _check_groups_content: Error, the table or sequence "emajC"."myschema1_myTbl3_log" belongs to an E-Maj schema.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
-- create a group with a table already belonging to another group
select emaj.emaj_create_group('dummyGrp3');
WARNING:  _check_groups_content: Error, the table or sequence myschema1.mytbl1 belongs to another group (myGroup1).
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
WARNING:  _check_groups_content: Error, the table or sequence myschema2.mytbl2 belongs to another group (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
WARNING:  _check_groups_content: Error, the emaj prefix "myschema1_mytbl1" is already used.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
WARNING:  _check_groups_content: Error, the emaj prefix "myschema2_mytbl2" is already used.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(ARRAY[v_groupName],v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 37 at PERFORM
-- already created
select emaj.emaj_create_group('myGroup2');
ERROR:  emaj_create_group: group "myGroup2" is already created.
-- impact of created groups
select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname  
----------
 emaj
 emaj #'3
 emajC
 emajb
(4 rows)

select group_name, group_is_logging, group_is_rlbk_protected, group_nb_table, group_nb_sequence, group_is_rollbackable, 
       group_creation_time_id, group_last_alter_time_id, group_comment
 from emaj.emaj_group order by group_name;
    group_name    | group_is_logging | group_is_rlbk_protected | group_nb_table | group_nb_sequence | group_is_rollbackable | group_creation_time_id | group_last_alter_time_id | group_comment 
------------------+------------------+-------------------------+----------------+-------------------+-----------------------+------------------------+--------------------------+---------------
 emptyGroup       | f                | t                       |              0 |                 0 | f                     |                      5 |                          | 
 myGroup1         | f                | f                       |              5 |                 1 | t                     |                      4 |                          | 
 myGroup2         | f                | f                       |              6 |                 2 | t                     |                      6 |                          | 
 myGroup4         | f                | f                       |              3 |                 0 | t                     |                     10 |                          | 
 phil's group#3", | f                | t                       |              2 |                 2 | f                     |                      9 |                          | 
(5 rows)

select * from emaj.emaj_relation order by rel_group, rel_priority, rel_schema, rel_tblseq;
   rel_schema   |    rel_tblseq     |    rel_group     | rel_kind | rel_priority | rel_log_schema |         rel_log_table          | rel_log_dat_tsp |           rel_log_index            | rel_log_idx_tsp |          rel_log_sequence          |          rel_log_function           |                       rel_sql_columns                       |      rel_sql_pk_columns       |                               rel_sql_pk_eq_conditions                                
----------------+-------------------+------------------+----------+--------------+----------------+--------------------------------+-----------------+------------------------------------+-----------------+------------------------------------+-------------------------------------+-------------------------------------------------------------+-------------------------------+---------------------------------------------------------------------------------------
 myschema1      | myTbl3_col31_seq  | myGroup1         | S        |            1 |                |                                |                 |                                    |                 |                                    |                                     |                                                             |                               | 
 myschema1      | myTbl3            | myGroup1         | r        |           10 | emajC          | myschema1_myTbl3_log           | tsplog1         | myschema1_myTbl3_log_idx           |                 | myschema1_myTbl3_log_seq           | myschema1_myTbl3_log_fnct           | tbl.col31,tbl.col32,tbl.col33                               | col31                         | tbl.col31 = keys.col31
 myschema1      | mytbl1            | myGroup1         | r        |           20 | emaj           | myschema1_mytbl1_log           |                 | myschema1_mytbl1_log_idx           |                 | myschema1_mytbl1_log_seq           | myschema1_mytbl1_log_fnct           | tbl.col11,tbl.col12,tbl.col13                               | col11,col12                   | tbl.col11 = keys.col11 AND tbl.col12 = keys.col12
 myschema1      | mytbl4            | myGroup1         | r        |           20 | emaj           | myschema1_mytbl4_log           | tsplog1         | myschema1_mytbl4_log_idx           | tsp log'2       | myschema1_mytbl4_log_seq           | myschema1_mytbl4_log_fnct           | tbl.col41,tbl.col42,tbl.col43,tbl.col44,tbl.col45           | col41                         | tbl.col41 = keys.col41
 myschema1      | mytbl2            | myGroup1         | r        |              | emaj           | myschema1_mytbl2_log           | tsplog1         | myschema1_mytbl2_log_idx           | tsplog1         | myschema1_mytbl2_log_seq           | myschema1_mytbl2_log_fnct           | tbl.col21,tbl.col22,tbl.col23                               | col21                         | tbl.col21 = keys.col21
 myschema1      | mytbl2b           | myGroup1         | r        |              | emajb          | myschema1_mytbl2b_log          | tsp log'2       | myschema1_mytbl2b_log_idx          | tsp log'2       | myschema1_mytbl2b_log_seq          | myschema1_mytbl2b_log_fnct          | tbl.col20,tbl.col21                                         | col20                         | tbl.col20 = keys.col20
 myschema2      | myseq1            | myGroup2         | S        |              |                |                                |                 |                                    |                 |                                    |                                     |                                                             |                               | 
 myschema2      | mytbl1            | myGroup2         | r        |              | emaj           | myschema2_mytbl1_log           |                 | myschema2_mytbl1_log_idx           |                 | myschema2_mytbl1_log_seq           | myschema2_mytbl1_log_fnct           | tbl.col11,tbl.col12,tbl.col13                               | col11,col12                   | tbl.col11 = keys.col11 AND tbl.col12 = keys.col12
 myschema2      | mytbl2            | myGroup2         | r        |              | emaj           | myschema2_mytbl2_log           |                 | myschema2_mytbl2_log_idx           |                 | myschema2_mytbl2_log_seq           | myschema2_mytbl2_log_fnct           | tbl.col21,tbl.col22,tbl.col23                               | col21                         | tbl.col21 = keys.col21
 myschema2      | myTbl3            | myGroup2         | r        |              | emajC          | myschema2_myTbl3_log           |                 | myschema2_myTbl3_log_idx           |                 | myschema2_myTbl3_log_seq           | myschema2_myTbl3_log_fnct           | tbl.col31,tbl.col32,tbl.col33                               | col31                         | tbl.col31 = keys.col31
 myschema2      | myTbl3_col31_seq  | myGroup2         | S        |              |                |                                |                 |                                    |                 |                                    |                                     |                                                             |                               | 
 myschema2      | mytbl4            | myGroup2         | r        |              | emaj           | myschema2_mytbl4_log           |                 | myschema2_mytbl4_log_idx           |                 | myschema2_mytbl4_log_seq           | myschema2_mytbl4_log_fnct           | tbl.col41,tbl.col42,tbl.col43,tbl.col44,tbl.col45           | col41                         | tbl.col41 = keys.col41
 myschema2      | mytbl5            | myGroup2         | r        |              | emaj           | otherPrefix4mytbl5_log         |                 | otherPrefix4mytbl5_log_idx         |                 | otherPrefix4mytbl5_log_seq         | otherPrefix4mytbl5_log_fnct         | tbl.col51,tbl.col52,tbl.col53,tbl.col54                     | col51                         | tbl.col51 = keys.col51
 myschema2      | mytbl6            | myGroup2         | r        |              | emaj           | myschema2_mytbl6_log           |                 | myschema2_mytbl6_log_idx           |                 | myschema2_mytbl6_log_seq           | myschema2_mytbl6_log_fnct           | tbl.col61,tbl.col62,tbl.col63,tbl.col64,tbl.col65,tbl.col66 | col61                         | tbl.col61 = keys.col61
 myschema4      | mytblc1           | myGroup4         | r        |              | emaj           | myschema4_mytblc1_log          |                 | myschema4_mytblc1_log_idx          |                 | myschema4_mytblc1_log_seq          | myschema4_mytblc1_log_fnct          | tbl.col1,tbl.col2,tbl.col3                                  | col1,col2                     | tbl.col1 = keys.col1 AND tbl.col2 = keys.col2
 myschema4      | mytblc2           | myGroup4         | r        |              | emaj           | myschema4_mytblc2_log          |                 | myschema4_mytblc2_log_idx          |                 | myschema4_mytblc2_log_seq          | myschema4_mytblc2_log_fnct          | tbl.col1,tbl.col2,tbl.col3                                  | col1,col2                     | tbl.col1 = keys.col1 AND tbl.col2 = keys.col2
 myschema4      | mytblm            | myGroup4         | r        |              | emaj           | myschema4_mytblm_log           |                 | myschema4_mytblm_log_idx           |                 | myschema4_mytblm_log_seq           | myschema4_mytblm_log_fnct           | tbl.col1,tbl.col2,tbl.col3                                  | col1                          | tbl.col1 = keys.col1
 phil's schema3 | myTbl2\           | phil's group#3", | r        |              | emaj           | phil's schema3_myTbl2\_log     |                 | phil's schema3_myTbl2\_log_idx     |                 | phil's schema3_myTbl2\_log_seq     | phil's schema3_myTbl2\_log_fnct     | tbl.col21,tbl.col22,tbl.col23                               |                               | 
 phil's schema3 | myTbl2\_col21_seq | phil's group#3", | S        |              |                |                                |                 |                                    |                 |                                    |                                     |                                                             |                               | 
 phil's schema3 | phil's seq\1      | phil's group#3", | S        |              |                |                                |                 |                                    |                 |                                    |                                     |                                                             |                               | 
 phil's schema3 | phil's tbl1       | phil's group#3", | r        |              | emaj #'3       | phil's schema3_phil's tbl1_log |                 | phil's schema3_phil's tbl1_log_idx |                 | phil's schema3_phil's tbl1_log_seq | phil's schema3_phil's tbl1_log_fnct | tbl."phil's col11",tbl."phil's col12",tbl."phil\s col13"    | "phil's col11","phil's col12" | tbl."phil's col11" = keys."phil's col11" AND tbl."phil's col12" = keys."phil's col12"
(21 rows)

select * from pg_tables where schemaname like 'emaj%' order by tablename;
 schemaname |           tablename            | tableowner | tablespace | hasindexes | hasrules | hastriggers 
------------+--------------------------------+------------+------------+------------+----------+-------------
 emaj       | emaj_alter_plan                | postgres   |            | t          | f        | t
 emaj       | emaj_group                     | postgres   |            | t          | f        | t
 emaj       | emaj_group_def                 | postgres   |            | t          | f        | f
 emaj       | emaj_hist                      | postgres   |            | t          | f        | f
 emaj       | emaj_mark                      | postgres   |            | t          | f        | t
 emaj       | emaj_param                     | postgres   |            | t          | f        | f
 emaj       | emaj_relation                  | postgres   |            | t          | f        | t
 emaj       | emaj_rlbk                      | postgres   |            | t          | f        | t
 emaj       | emaj_rlbk_plan                 | postgres   |            | t          | f        | t
 emaj       | emaj_rlbk_session              | postgres   |            | t          | f        | t
 emaj       | emaj_rlbk_stat                 | postgres   |            | t          | f        | t
 emaj       | emaj_seq_hole                  | postgres   |            | t          | f        | t
 emaj       | emaj_sequence                  | postgres   |            | t          | f        | t
 emaj       | emaj_time_stamp                | postgres   |            | t          | f        | t
 emajC      | myschema1_myTbl3_log           | postgres   | tsplog1    | t          | f        | f
 emaj       | myschema1_mytbl1_log           | postgres   |            | t          | f        | f
 emaj       | myschema1_mytbl2_log           | postgres   | tsplog1    | t          | f        | f
 emajb      | myschema1_mytbl2b_log          | postgres   | tsp log'2  | t          | f        | f
 emaj       | myschema1_mytbl4_log           | postgres   | tsplog1    | t          | f        | f
 emajC      | myschema2_myTbl3_log           | postgres   |            | t          | f        | f
 emaj       | myschema2_mytbl1_log           | postgres   |            | t          | f        | f
 emaj       | myschema2_mytbl2_log           | postgres   |            | t          | f        | f
 emaj       | myschema2_mytbl4_log           | postgres   |            | t          | f        | f
 emaj       | myschema2_mytbl6_log           | postgres   |            | t          | f        | f
 emaj       | myschema4_mytblc1_log          | postgres   |            | t          | f        | f
 emaj       | myschema4_mytblc2_log          | postgres   |            | t          | f        | f
 emaj       | myschema4_mytblm_log           | postgres   |            | t          | f        | f
 emaj       | otherPrefix4mytbl5_log         | postgres   |            | t          | f        | f
 emaj       | phil's schema3_myTbl2\_log     | postgres   |            | t          | f        | f
 emaj #'3   | phil's schema3_phil's tbl1_log | postgres   |            | t          | f        | f
(30 rows)

-----------------------------
-- emaj_comment_group() tests
-----------------------------
-- unknown group
select emaj.emaj_comment_group(NULL,NULL);
ERROR:  emaj_comment_group: group "<NULL>" has not been created.
select emaj.emaj_comment_group('unkownGroup',NULL);
ERROR:  emaj_comment_group: group "unkownGroup" has not been created.
-- should be OK
select emaj.emaj_comment_group('myGroup1','a first comment for group #1');
 emaj_comment_group 
--------------------
 
(1 row)

select emaj.emaj_comment_group('myGroup1','a better comment for group #1');
 emaj_comment_group 
--------------------
 
(1 row)

select emaj.emaj_comment_group('emptyGroup','an empty group');
 emaj_comment_group 
--------------------
 
(1 row)

select group_name, group_comment from emaj.emaj_group where group_name = 'myGroup1';
 group_name |         group_comment         
------------+-------------------------------
 myGroup1   | a better comment for group #1
(1 row)

select emaj.emaj_comment_group('myGroup1',NULL);
 emaj_comment_group 
--------------------
 
(1 row)

select group_name, group_comment from emaj.emaj_group where group_name = 'myGroup1';
 group_name | group_comment 
------------+---------------
 myGroup1   | 
(1 row)

-----------------------------
-- emaj_drop_group() tests
-----------------------------
-- unknown group
select emaj.emaj_drop_group(NULL);
ERROR:  _drop_group: group "<NULL>" has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group(v_groupName, FALSE)"
PL/pgSQL function "emaj_drop_group" line 12 at SQL statement
select emaj.emaj_drop_group('unknownGroup');
ERROR:  _drop_group: group "unknownGroup" has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group(v_groupName, FALSE)"
PL/pgSQL function "emaj_drop_group" line 12 at SQL statement
-- group in logging state
select emaj.emaj_start_group('myGroup1','');
 emaj_start_group 
------------------
                6
(1 row)

select emaj.emaj_drop_group('myGroup1');
ERROR:  _drop_group: The group "myGroup1" cannot be deleted because it is in LOGGING state.
CONTEXT:  SQL statement "SELECT emaj._drop_group(v_groupName, FALSE)"
PL/pgSQL function "emaj_drop_group" line 12 at SQL statement
select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               6
(1 row)

-- secondary schema with an object blocking the schema drop
begin;
  create table emajb.dummy_log (col1 int);
  select emaj.emaj_drop_group('myGroup1');
ERROR:  _drop_log_schema: cannot drop schema "emajb". It probably owns unattended objects. Use the emaj_verify_all() function to get details
CONTEXT:  SQL statement "SELECT emaj._drop_log_schema(v_logSchema, v_isForced)"
PL/pgSQL function "_drop_group" line 59 at PERFORM
SQL statement "SELECT emaj._drop_group(v_groupName, FALSE)"
PL/pgSQL function "emaj_drop_group" line 12 at SQL statement
rollback;
-- should be OK
select emaj.emaj_drop_group('myGroup1');
 emaj_drop_group 
-----------------
               6
(1 row)

select emaj.emaj_drop_group('myGroup2');
 emaj_drop_group 
-----------------
               8
(1 row)

select emaj.emaj_drop_group('emptyGroup');
 emaj_drop_group 
-----------------
               0
(1 row)

-- already dropped
select emaj.emaj_drop_group('myGroup2');
ERROR:  _drop_group: group "myGroup2" has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group(v_groupName, FALSE)"
PL/pgSQL function "emaj_drop_group" line 12 at SQL statement
-----------------------------
-- emaj_force_drop_group() tests
-----------------------------
-- unknown group
select emaj.emaj_force_drop_group(NULL);
ERROR:  _drop_group: group "<NULL>" has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group(v_groupName, TRUE)"
PL/pgSQL function "emaj_force_drop_group" line 17 at SQL statement
select emaj.emaj_force_drop_group('unkownGroup');
ERROR:  _drop_group: group "unkownGroup" has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group(v_groupName, TRUE)"
PL/pgSQL function "emaj_force_drop_group" line 17 at SQL statement
-- already dropped
select emaj.emaj_force_drop_group('myGroup2');
ERROR:  _drop_group: group "myGroup2" has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group(v_groupName, TRUE)"
PL/pgSQL function "emaj_force_drop_group" line 17 at SQL statement
-- should be OK
select emaj.emaj_create_group('myGroup1',false);
WARNING:  _create_tbl: table "myschema1.mytbl2" has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(r_grpdef, v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 70 at PERFORM
 emaj_create_group 
-------------------
                 6
(1 row)

select emaj.emaj_start_group('myGroup1','');
 emaj_start_group 
------------------
                6
(1 row)

select emaj.emaj_force_drop_group('myGroup1');
 emaj_force_drop_group 
-----------------------
                     6
(1 row)

select emaj.emaj_create_group('myGroup2',true);
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups (array[v_groupName])"
PL/pgSQL function "emaj_create_group" line 90 at PERFORM
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups (array[v_groupName])"
PL/pgSQL function "emaj_create_group" line 90 at PERFORM
 emaj_create_group 
-------------------
                 8
(1 row)

select emaj.emaj_force_drop_group('myGroup2');
 emaj_force_drop_group 
-----------------------
                     8
(1 row)

-----------------------------
-- emaj_alter_group() tests
-----------------------------
select emaj.emaj_create_group('myGroup1');
WARNING:  _create_tbl: table "myschema1.mytbl2" has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(r_grpdef, v_isRollbackable)"
PL/pgSQL function "emaj_create_group" line 70 at PERFORM
 emaj_create_group 
-------------------
                 6
(1 row)

select emaj.emaj_create_group('myGroup2');
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups (array[v_groupName])"
PL/pgSQL function "emaj_create_group" line 90 at PERFORM
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups (array[v_groupName])"
PL/pgSQL function "emaj_create_group" line 90 at PERFORM
 emaj_create_group 
-------------------
                 8
(1 row)

select emaj.emaj_create_group('emptyGroup',true,true);
 emaj_create_group 
-------------------
                 0
(1 row)

-- unknown group
select emaj.emaj_alter_group(NULL);
ERROR:  _alter_groups: the group "<NULL>" has not been created.
CONTEXT:  PL/pgSQL function "emaj_alter_group" line 6 at RETURN
select emaj.emaj_alter_group('unknownGroup');
ERROR:  _alter_groups: the group "unknownGroup" has not been created.
CONTEXT:  PL/pgSQL function "emaj_alter_group" line 6 at RETURN
-- group in logging state
begin;
  select emaj.emaj_start_group('myGroup1','');
 emaj_start_group 
------------------
                6
(1 row)

  drop table emaj.myschema1_mytbl1_log;
  select emaj.emaj_alter_group('myGroup1');
ERROR:  _alter_plan: the groups "myGroup1" cannot be altered because they are in LOGGING state.
CONTEXT:  SQL statement "SELECT emaj._alter_plan(v_groupNames, v_timeId)"
PL/pgSQL function "_alter_groups" line 29 at PERFORM
PL/pgSQL function "emaj_alter_group" line 6 at RETURN
rollback;
-- alter a group with a table now already belonging to another group
begin;
  insert into emaj.emaj_group_def values ('myGroup1','myschema2','mytbl1');
  select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_groups_content: Error, the table or sequence myschema2.mytbl1 belongs to another group (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_group" line 6 at RETURN
WARNING:  _check_groups_content: Error, the emaj prefix "myschema2_mytbl1" is already used.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_group" line 6 at RETURN
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_group" line 6 at RETURN
rollback;
-- schema suffix cannot be changed for sequence
begin;
  update emaj.emaj_group_def set grpdef_log_schema_suffix = 'dummy' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the secondary log schema suffix is not NULL.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_group" line 6 at RETURN
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_group" line 6 at RETURN
rollback;
-- object names prefix cannot be changed for sequence
begin;
  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'dummy' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the emaj names prefix is not NULL.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_group" line 6 at RETURN
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_group" line 6 at RETURN
rollback;
-- log tablespace cannot be changed for sequence
begin;
  update emaj.emaj_group_def set grpdef_log_dat_tsp = 'b' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the data log tablespace is not NULL.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_group" line 6 at RETURN
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_group" line 6 at RETURN
rollback;
begin;
  update emaj.emaj_group_def set grpdef_log_idx_tsp = 'b' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the index log tablespace is not NULL.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_group" line 6 at RETURN
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_group" line 6 at RETURN
rollback;
-- dropped application table
begin;
  drop table myschema1.mytbl2b;
  select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_groups_content: Error, the table or sequence myschema1.mytbl2b does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_group" line 6 at RETURN
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_group" line 6 at RETURN
rollback;
-- should be OK
-- nothing to change
select group_name, group_is_logging, group_is_rlbk_protected, group_nb_table, group_nb_sequence, group_is_rollbackable,
       group_creation_time_id, group_last_alter_time_id, group_comment
 from emaj.emaj_group where group_name = 'myGroup1';
 group_name | group_is_logging | group_is_rlbk_protected | group_nb_table | group_nb_sequence | group_is_rollbackable | group_creation_time_id | group_last_alter_time_id | group_comment 
------------+------------------+-------------------------+----------------+-------------------+-----------------------+------------------------+--------------------------+---------------
 myGroup1   | f                | f                       |              5 |                 1 | t                     |                     16 |                          | 
(1 row)

select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

select group_name, group_is_logging, group_is_rlbk_protected, group_nb_table, group_nb_sequence, group_is_rollbackable,
       group_creation_time_id, group_last_alter_time_id, group_comment
 from emaj.emaj_group where group_name = 'myGroup1';
 group_name | group_is_logging | group_is_rlbk_protected | group_nb_table | group_nb_sequence | group_is_rollbackable | group_creation_time_id | group_last_alter_time_id | group_comment 
------------+------------------+-------------------------+----------------+-------------------+-----------------------+------------------------+--------------------------+---------------
 myGroup1   | f                | f                       |              5 |                 1 | t                     |                     16 |                       21 | 
(1 row)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname  
----------
 emaj
 emaj #'3
 emajC
 emajb
(4 rows)

-- only 3 tables to remove (+ log schemas emajb)
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl4';
select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_fk_groups: table "myschema1.mytbl2" is referenced by foreign key "mytbl4_col43_fkey" from table "myschema1.mytbl4" that is outside groups (myGroup1).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_group" line 6 at RETURN
WARNING:  _check_fk_groups: table "myschema1.mytbl1" is referenced by foreign key "mytbl4_col44_fkey" from table "myschema1.mytbl4" that is outside groups (myGroup1).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_group" line 6 at RETURN
 emaj_alter_group 
------------------
                3
(1 row)

select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence 
----------------+-------------------
              2 |                 1
(1 row)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname  
----------
 emaj
 emaj #'3
 emajC
(3 rows)

-- only 1 sequence to remove
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_fk_groups: table "myschema1.mytbl2" is referenced by foreign key "mytbl4_col43_fkey" from table "myschema1.mytbl4" that is outside groups (myGroup1).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_group" line 6 at RETURN
WARNING:  _check_fk_groups: table "myschema1.mytbl1" is referenced by foreign key "mytbl4_col44_fkey" from table "myschema1.mytbl4" that is outside groups (myGroup1).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_group" line 6 at RETURN
 emaj_alter_group 
------------------
                2
(1 row)

select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence 
----------------+-------------------
              2 |                 0
(1 row)

-- 3 tables to add (+ log schemas emajb)
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2b',NULL,'b',NULL,'tsp log''2','tsp log''2');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3',10,'C',NULL,'tsplog1');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl4',20,NULL,NULL,'tsplog1','tsp log''2');
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                5
(1 row)

select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence 
----------------+-------------------
              5 |                 0
(1 row)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname  
----------
 emaj
 emaj #'3
 emajC
 emajb
(4 rows)

-- only 1 sequence to add
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3_col31_seq',1);
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence 
----------------+-------------------
              5 |                 1
(1 row)

-- only change the log schema
update emaj.emaj_group_def set grpdef_log_schema_suffix = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

select nspname from pg_namespace, pg_class where relnamespace = pg_namespace.oid and relname = 'myschema1_myTbl3_log';
 nspname 
---------
 emaj
(1 row)

update emaj.emaj_group_def set grpdef_log_schema_suffix = 'C' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

select nspname from pg_namespace, pg_class where relnamespace = pg_namespace.oid and relname = 'myschema1_myTbl3_log';
 nspname 
---------
 emajC
(1 row)

-- only change the emaj_names_prefix for 1 table
update emaj.emaj_group_def set grpdef_emaj_names_prefix = 's1t3' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

select count(*) from "emajC".s1t3_log;
 count 
-------
     0
(1 row)

update emaj.emaj_group_def set grpdef_emaj_names_prefix = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

select count(*) from "emajC".myschema1_myTbl3_log;
ERROR:  relation "emajC.myschema1_mytbl3_log" does not exist
LINE 1: select count(*) from "emajC".myschema1_myTbl3_log;
                             ^
-- only change the log data tablespace for 1 table
update emaj.emaj_group_def set grpdef_log_dat_tsp = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema1_mytbl2b_log';
 spcname 
---------
(0 rows)

update emaj.emaj_group_def set grpdef_log_dat_tsp = 'tsp log''2' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema1_mytbl2b_log';
  spcname  
-----------
 tsp log'2
(1 row)

-- change the log data tablespace for all tables of a group
update emaj.emaj_group_def set grpdef_log_dat_tsp = case when grpdef_log_dat_tsp is NULL then 'tsplog1' when grpdef_log_dat_tsp = 'tsplog1' then 'tsp log''2' else NULL end where grpdef_schema = 'myschema1' and grpdef_tblseq not like '%seq';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

update emaj.emaj_group_def set grpdef_log_dat_tsp = case when grpdef_log_dat_tsp = 'tsplog1' then NULL when grpdef_log_dat_tsp = 'tsp log''2' then 'tsplog1' else 'tsp log''2' end where grpdef_schema = 'myschema1' and grpdef_tblseq not like '%seq';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

-- only change the log index tablespace, using a session default tablespace
update emaj.emaj_group_def set grpdef_log_idx_tsp = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
set default_tablespace = tspemaj_renamed;
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

reset default_tablespace;
select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema1_mytbl2b_log_idx';
     spcname     
-----------------
 tspemaj_renamed
(1 row)

update emaj.emaj_group_def set grpdef_log_idx_tsp = 'tsp log''2' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema1_mytbl2b_log_idx';
  spcname  
-----------
 tsp log'2
(1 row)

-- only change the priority
update emaj.emaj_group_def set grpdef_priority = 30 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1';
 rel_priority 
--------------
           30
(1 row)

update emaj.emaj_group_def set grpdef_priority = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1';
 rel_priority 
--------------
             
(1 row)

update emaj.emaj_group_def set grpdef_priority = 20 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1';
 rel_priority 
--------------
           20
(1 row)

-- change the table structure
alter table myschema1.mytbl1 add column newcol int;
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

alter table myschema1.mytbl1 rename newcol to newcol2;
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

alter table myschema1.mytbl1 alter column newcol2 type bigint;
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

alter table myschema1.mytbl1 alter column newcol2 set default 0;
-- NB: changing default has no impact on emaj component 
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

alter table myschema1.mytbl1 drop column newcol2;
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

-- rename a table and/or change its schema
alter table myschema1.mytbl1 rename to mytbl1_new_name;
update emaj.emaj_group_def set grpdef_tblseq = 'mytbl1_new_name' 
  where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

alter table myschema1.mytbl1_new_name set schema public;
update emaj.emaj_group_def set grpdef_schema = 'public'
  where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1_new_name';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

alter table public.mytbl1_new_name rename to mytbl1;
alter table public.mytbl1 set schema myschema1;
update emaj.emaj_group_def set grpdef_schema = 'myschema1', grpdef_tblseq = 'mytbl1'
  where grpdef_schema = 'public' and grpdef_tblseq = 'mytbl1_new_name';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

-- missing emaj components
drop trigger emaj_log_trg on myschema1.mytbl1;
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

drop function emaj.myschema1_mytbl1_log_fnct() cascade;
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

drop table emaj.myschema1_mytbl1_log;
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

-- the group is now empty
begin;
  delete from emaj.emaj_group_def where grpdef_group = 'myGroup1';
  select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                0
(1 row)

rollback;
-----------------------------
-- emaj_alter_groups() tests
-----------------------------
-- unknown groups
select emaj.emaj_alter_groups('{NULL,"unknownGroup"}');
ERROR:  _alter_groups: the group "<NULL>" has not been created.
CONTEXT:  PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
select emaj.emaj_alter_groups('{"myGroup1","unknownGroup"}');
ERROR:  _alter_groups: the group "unknownGroup" has not been created.
CONTEXT:  PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
-- groups in logging state
begin;
  select emaj.emaj_start_groups('{"myGroup1","myGroup2"}','');
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_start_groups" line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function "emaj_start_groups" line 16 at SQL statement
 emaj_start_groups 
-------------------
                14
(1 row)

  drop table emaj.myschema1_mytbl1_log;
  drop table emaj.myschema2_mytbl1_log;
  select emaj.emaj_alter_groups('{"myGroup2","myGroup1"}');
ERROR:  _alter_plan: the groups "myGroup2, myGroup1" cannot be altered because they are in LOGGING state.
CONTEXT:  SQL statement "SELECT emaj._alter_plan(v_groupNames, v_timeId)"
PL/pgSQL function "_alter_groups" line 29 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
rollback;
-- alter groups with a table now already belonging to another group
begin;
  insert into emaj.emaj_group_def values ('myGroup1','myschema2','mytbl1');
  select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_groups_content: Error, the emaj prefix "myschema2_mytbl1" is configured for several tables in the groups.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
rollback;
-- schema suffix cannot be changed for sequence (this covers other cases of forbidden changes for sequences)
begin;
  update emaj.emaj_group_def set grpdef_log_schema_suffix = 'dummy' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the secondary log schema suffix is not NULL.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
rollback;
-- a PRIMARY KEY is missing
begin;
  alter table myschema1.mytbl4 drop constraint mytbl4_pkey;
  select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_groups_content: Error, the table myschema1.mytbl4 has no PRIMARY KEY.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
ERROR:  _check_groups_content: one or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function "_alter_groups" line 22 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
rollback;
-- should be OK
-- 3 tables and 1 sequence to remove (+ log schemas emajb)
select group_name, group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1' or group_name = 'myGroup2';
 group_name | group_nb_table | group_nb_sequence 
------------+----------------+-------------------
 myGroup1   |              5 |                 1
 myGroup2   |              6 |                 2
(2 rows)

delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema2' and grpdef_tblseq = 'mytbl4';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
WARNING:  _check_fk_groups: table "myschema2.mytbl2" is referenced by foreign key "mytbl4_col43_fkey" from table "myschema2.mytbl4" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
WARNING:  _check_fk_groups: table "myschema2.mytbl1" is referenced by foreign key "mytbl4_col44_fkey" from table "myschema2.mytbl4" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
 emaj_alter_groups 
-------------------
                10
(1 row)

select group_name, group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1' or group_name = 'myGroup2';
 group_name | group_nb_table | group_nb_sequence 
------------+----------------+-------------------
 myGroup1   |              3 |                 0
 myGroup2   |              5 |                 2
(2 rows)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname  
----------
 emaj
 emaj #'3
 emajC
(3 rows)

-- 3 tables and 1 sequence to add (+ log schemas emajb)
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2b',NULL,'b',NULL,'tsp log''2','tsp log''2');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3',10,'C',NULL,'tsplog1');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl4',NULL,NULL,'myschema2_mytbl4');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3_col31_seq',1);
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
 emaj_alter_groups 
-------------------
                14
(1 row)

select group_name, group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1' or group_name = 'myGroup2';
 group_name | group_nb_table | group_nb_sequence 
------------+----------------+-------------------
 myGroup1   |              5 |                 1
 myGroup2   |              6 |                 2
(2 rows)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname  
----------
 emaj
 emaj #'3
 emajC
 emajb
(4 rows)

-- change a log schema and the emaj_names_prefix for 2 tables
update emaj.emaj_group_def set grpdef_log_schema_suffix = NULL where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3';
update emaj.emaj_group_def set grpdef_emaj_names_prefix = 's1t3' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
 emaj_alter_groups 
-------------------
                14
(1 row)

select nspname from pg_namespace, pg_class where relnamespace = pg_namespace.oid and relname = 'myschema2_myTbl3_log';
 nspname 
---------
 emaj
(1 row)

select count(*) from "emajC".s1t3_log;
 count 
-------
     0
(1 row)

--
update emaj.emaj_group_def set grpdef_log_schema_suffix = 'C' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3';
update emaj.emaj_group_def set grpdef_emaj_names_prefix = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
 emaj_alter_groups 
-------------------
                14
(1 row)

select nspname from pg_namespace, pg_class where relnamespace = pg_namespace.oid and relname = 'myschema2_myTbl3_log';
 nspname 
---------
 emajC
(1 row)

select count(*) from "emajC"."myschema1_myTbl3_log";
 count 
-------
     0
(1 row)

-- only change the log data tablespace for 1 table, the log index tablespace for another table and the priority for a third one
update emaj.emaj_group_def set grpdef_log_dat_tsp = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
update emaj.emaj_group_def set grpdef_log_idx_tsp = 'tsplog1' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'mytbl6';
update emaj.emaj_group_def set grpdef_priority = 30 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
set default_tablespace = tspemaj_renamed;
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
 emaj_alter_groups 
-------------------
                14
(1 row)

reset default_tablespace;
select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema1_mytbl2b_log';
     spcname     
-----------------
 tspemaj_renamed
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema2_mytbl6_log_idx';
 spcname 
---------
 tsplog1
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1';
 rel_priority 
--------------
           30
(1 row)

--
update emaj.emaj_group_def set grpdef_log_dat_tsp = 'tsp log''2' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
update emaj.emaj_group_def set grpdef_log_idx_tsp = NULL where grpdef_schema = 'myschema2' and grpdef_tblseq = 'mytbl6';
update emaj.emaj_group_def set grpdef_priority = 20 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
 emaj_alter_groups 
-------------------
                14
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema1_mytbl2b_log';
  spcname  
-----------
 tsp log'2
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema2_mytbl6_log_idx';
 spcname 
---------
(0 rows)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1';
 rel_priority 
--------------
           20
(1 row)

-- move 1 table and 1 sequence from a group to another
update emaj.emaj_group_def set grpdef_group = 'myGroup1' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3';
update emaj.emaj_group_def set grpdef_group = 'myGroup1' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3_col31_seq';
select rel_group, count(*) from emaj.emaj_relation where rel_group like 'myGroup%' group by 1 order by 1;
 rel_group | count 
-----------+-------
 myGroup1  |     6
 myGroup2  |     8
 myGroup4  |     3
(3 rows)

select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
 emaj_alter_groups 
-------------------
                14
(1 row)

select rel_group, count(*) from emaj.emaj_relation where rel_group like 'myGroup%' group by 1 order by 1;
 rel_group | count 
-----------+-------
 myGroup1  |     8
 myGroup2  |     6
 myGroup4  |     3
(3 rows)

update emaj.emaj_group_def set grpdef_group = 'myGroup2' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3';
update emaj.emaj_group_def set grpdef_group = 'myGroup2' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3_col31_seq';
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: Foreign key "mytbl6_col61_fkey", from table "myschema2.mytbl6", references "myschema2.mytbl7" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
WARNING:  _check_fk_groups: table "myschema2.mytbl6" is referenced by foreign key "mytbl8_col81_fkey" from table "myschema2.mytbl8" that is outside groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function "_alter_groups" line 41 at PERFORM
PL/pgSQL function "emaj_alter_groups" line 6 at RETURN
 emaj_alter_groups 
-------------------
                14
(1 row)

select rel_group, count(*) from emaj.emaj_relation where rel_group like 'myGroup%' group by 1 order by 1;
 rel_group | count 
-----------+-------
 myGroup1  |     6
 myGroup2  |     8
 myGroup4  |     3
(3 rows)

-- groups are now empty
begin;
  delete from emaj.emaj_group_def where grpdef_group = 'myGroup2';
  select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
 emaj_alter_groups 
-------------------
                 6
(1 row)

rollback;
-----------------------------
-- test end: check and force sequences id
-----------------------------
select emaj.emaj_force_drop_group('myGroup1');
 emaj_force_drop_group 
-----------------------
                     6
(1 row)

select emaj.emaj_force_drop_group('myGroup2');
 emaj_force_drop_group 
-----------------------
                     8
(1 row)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname  
----------
 emaj
 emaj #'3
(2 rows)

select hist_function, hist_event, hist_object, 
       regexp_replace(regexp_replace(hist_wording,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d','%','g'),E'\\[.+\\]','(timestamp)','g'), 
       hist_user 
  from emaj.emaj_hist order by hist_id;
   hist_function    |       hist_event        |    hist_object     |            regexp_replace             | hist_user 
--------------------+-------------------------+--------------------+---------------------------------------+-----------
 DISABLE_PROTECTION | EVENT TRIGGERS DISABLED |                    | <none>                                | postgres
 CREATE_GROUP       | BEGIN                   | myGroup1           | rollbackable                          | postgres
 CREATE_GROUP       | SCHEMA CREATED          | emajb              |                                       | postgres
 CREATE_GROUP       | SCHEMA CREATED          | "emajC"            |                                       | postgres
 CREATE_GROUP       | END                     | myGroup1           | 6 tables/sequences processed          | postgres
 CREATE_GROUP       | BEGIN                   | emptyGroup         | audit_only                            | postgres
 CREATE_GROUP       | END                     | emptyGroup         | 0 tables/sequences processed          | postgres
 CREATE_GROUP       | BEGIN                   | myGroup2           | rollbackable                          | postgres
 CREATE_GROUP       | END                     | myGroup2           | 8 tables/sequences processed          | postgres
 CREATE_GROUP       | BEGIN                   | phil's group#3",   | audit_only                            | postgres
 CREATE_GROUP       | SCHEMA CREATED          | "emaj #'3"         |                                       | postgres
 CREATE_GROUP       | END                     | phil's group#3",   | 4 tables/sequences processed          | postgres
 CREATE_GROUP       | BEGIN                   | myGroup4           | rollbackable                          | postgres
 CREATE_GROUP       | END                     | myGroup4           | 3 tables/sequences processed          | postgres
 COMMENT_GROUP      |                         | myGroup1           |                                       | postgres
 COMMENT_GROUP      |                         | myGroup1           |                                       | postgres
 COMMENT_GROUP      |                         | emptyGroup         |                                       | postgres
 COMMENT_GROUP      |                         | myGroup1           |                                       | postgres
 START_GROUP        | BEGIN                   | myGroup1           | With log reset                        | postgres
 LOCK_GROUP         | BEGIN                   | myGroup1           |                                       | postgres
 LOCK_GROUP         | END                     | myGroup1           | 5 tables locked, 0 deadlock(s)        | postgres
 SET_MARK_GROUP     | BEGIN                   | myGroup1           | START_%                               | postgres
 SET_MARK_GROUP     | END                     | myGroup1           | START_%                               | postgres
 START_GROUP        | END                     | myGroup1           | 6 tables/sequences processed          | postgres
 STOP_GROUP         | BEGIN                   | myGroup1           |                                       | postgres
 LOCK_GROUP         | BEGIN                   | myGroup1           |                                       | postgres
 LOCK_GROUP         | END                     | myGroup1           | 5 tables locked, 0 deadlock(s)        | postgres
 SET_MARK_GROUP     | BEGIN                   | myGroup1           | STOP_%                                | postgres
 SET_MARK_GROUP     | END                     | myGroup1           | STOP_%                                | postgres
 STOP_GROUP         | END                     | myGroup1           | 6 tables/sequences processed          | postgres
 DROP_GROUP         | BEGIN                   | myGroup1           |                                       | postgres
 DROP_GROUP         | SCHEMA DROPPED          | emajb              |                                       | postgres
 DROP_GROUP         | END                     | myGroup1           | 6 tables/sequences processed          | postgres
 DROP_GROUP         | BEGIN                   | myGroup2           |                                       | postgres
 DROP_GROUP         | SCHEMA DROPPED          | "emajC"            |                                       | postgres
 DROP_GROUP         | END                     | myGroup2           | 8 tables/sequences processed          | postgres
 DROP_GROUP         | BEGIN                   | emptyGroup         |                                       | postgres
 DROP_GROUP         | END                     | emptyGroup         | 0 tables/sequences processed          | postgres
 CREATE_GROUP       | BEGIN                   | myGroup1           | audit_only                            | postgres
 CREATE_GROUP       | SCHEMA CREATED          | emajb              |                                       | postgres
 CREATE_GROUP       | SCHEMA CREATED          | "emajC"            |                                       | postgres
 CREATE_GROUP       | END                     | myGroup1           | 6 tables/sequences processed          | postgres
 START_GROUP        | BEGIN                   | myGroup1           | With log reset                        | postgres
 LOCK_GROUP         | BEGIN                   | myGroup1           |                                       | postgres
 LOCK_GROUP         | END                     | myGroup1           | 5 tables locked, 0 deadlock(s)        | postgres
 SET_MARK_GROUP     | BEGIN                   | myGroup1           | START_%                               | postgres
 SET_MARK_GROUP     | END                     | myGroup1           | START_%                               | postgres
 START_GROUP        | END                     | myGroup1           | 6 tables/sequences processed          | postgres
 FORCE_DROP_GROUP   | BEGIN                   | myGroup1           |                                       | postgres
 FORCE_DROP_GROUP   | SCHEMA DROPPED          | emajb              |                                       | postgres
 FORCE_DROP_GROUP   | SCHEMA DROPPED          | "emajC"            |                                       | postgres
 FORCE_DROP_GROUP   | END                     | myGroup1           | 6 tables/sequences processed          | postgres
 CREATE_GROUP       | BEGIN                   | myGroup2           | rollbackable                          | postgres
 CREATE_GROUP       | SCHEMA CREATED          | "emajC"            |                                       | postgres
 CREATE_GROUP       | END                     | myGroup2           | 8 tables/sequences processed          | postgres
 FORCE_DROP_GROUP   | BEGIN                   | myGroup2           |                                       | postgres
 FORCE_DROP_GROUP   | SCHEMA DROPPED          | "emajC"            |                                       | postgres
 FORCE_DROP_GROUP   | END                     | myGroup2           | 8 tables/sequences processed          | postgres
 CREATE_GROUP       | BEGIN                   | myGroup1           | rollbackable                          | postgres
 CREATE_GROUP       | SCHEMA CREATED          | emajb              |                                       | postgres
 CREATE_GROUP       | SCHEMA CREATED          | "emajC"            |                                       | postgres
 CREATE_GROUP       | END                     | myGroup1           | 6 tables/sequences processed          | postgres
 CREATE_GROUP       | BEGIN                   | myGroup2           | rollbackable                          | postgres
 CREATE_GROUP       | END                     | myGroup2           | 8 tables/sequences processed          | postgres
 CREATE_GROUP       | BEGIN                   | emptyGroup         | rollbackable                          | postgres
 CREATE_GROUP       | END                     | emptyGroup         | 0 tables/sequences processed          | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 21                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | SCHEMA DROPPED          | emajb              |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 22                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 23                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | SCHEMA CREATED          | emajb              |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 24                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 25                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1."myTbl3" | Applied changes: log schema           | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 26                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1."myTbl3" | Applied changes: log schema           | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 27                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1."myTbl3" | Applied changes: emaj names prefix    | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 28                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1."myTbl3" | Applied changes: emaj names prefix    | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 29                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1.mytbl2b  | Applied changes: log data tablespace  | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 30                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1.mytbl2b  | Applied changes: log data tablespace  | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 31                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1."myTbl3" | Applied changes: log data tablespace  | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1.mytbl1   | Applied changes: log data tablespace  | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1.mytbl4   | Applied changes: log data tablespace  | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1.mytbl2   | Applied changes: log data tablespace  | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1.mytbl2b  | Applied changes: log data tablespace  | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 32                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1."myTbl3" | Applied changes: log data tablespace  | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1.mytbl1   | Applied changes: log data tablespace  | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1.mytbl4   | Applied changes: log data tablespace  | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1.mytbl2   | Applied changes: log data tablespace  | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1.mytbl2b  | Applied changes: log data tablespace  | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 33                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1.mytbl2b  | Applied changes: log index tablespace | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 34                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1.mytbl2b  | Applied changes: log index tablespace | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 35                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 36                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 37                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 38                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 39                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 40                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 41                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 42                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 43                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 44                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 45                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 46                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 47                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 48                     | postgres
 ALTER_GROUP        | BEGIN                   | myGroup1           |                                       | postgres
 ALTER_GROUP        | END                     | myGroup1           | Timestamp Id : 49                     | postgres
 ALTER_GROUPS       | BEGIN                   | myGroup1,myGroup2  |                                       | postgres
 ALTER_GROUP        | SCHEMA DROPPED          | emajb              |                                       | postgres
 ALTER_GROUPS       | END                     | myGroup1,myGroup2  | Timestamp Id : 53                     | postgres
 ALTER_GROUPS       | BEGIN                   | myGroup1,myGroup2  |                                       | postgres
 ALTER_GROUP        | SCHEMA CREATED          | emajb              |                                       | postgres
 ALTER_GROUPS       | END                     | myGroup1,myGroup2  | Timestamp Id : 54                     | postgres
 ALTER_GROUPS       | BEGIN                   | myGroup1,myGroup2  |                                       | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1."myTbl3" | Applied changes: emaj names prefix    | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema2."myTbl3" | Applied changes: log schema           | postgres
 ALTER_GROUPS       | END                     | myGroup1,myGroup2  | Timestamp Id : 55                     | postgres
 ALTER_GROUPS       | BEGIN                   | myGroup1,myGroup2  |                                       | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1."myTbl3" | Applied changes: emaj names prefix    | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema2."myTbl3" | Applied changes: log schema           | postgres
 ALTER_GROUPS       | END                     | myGroup1,myGroup2  | Timestamp Id : 56                     | postgres
 ALTER_GROUPS       | BEGIN                   | myGroup1,myGroup2  |                                       | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1.mytbl2b  | Applied changes: log data tablespace  | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema2.mytbl6   | Applied changes: log index tablespace | postgres
 ALTER_GROUPS       | END                     | myGroup1,myGroup2  | Timestamp Id : 57                     | postgres
 ALTER_GROUPS       | BEGIN                   | myGroup1,myGroup2  |                                       | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema1.mytbl2b  | Applied changes: log data tablespace  | postgres
 ALTER_GROUP        | TABLE ATTR CHANGED      | myschema2.mytbl6   | Applied changes: log index tablespace | postgres
 ALTER_GROUPS       | END                     | myGroup1,myGroup2  | Timestamp Id : 58                     | postgres
 ALTER_GROUPS       | BEGIN                   | myGroup1,myGroup2  |                                       | postgres
 ALTER_GROUPS       | END                     | myGroup1,myGroup2  | Timestamp Id : 59                     | postgres
 ALTER_GROUPS       | BEGIN                   | myGroup1,myGroup2  |                                       | postgres
 ALTER_GROUPS       | END                     | myGroup1,myGroup2  | Timestamp Id : 60                     | postgres
 FORCE_DROP_GROUP   | BEGIN                   | myGroup1           |                                       | postgres
 FORCE_DROP_GROUP   | SCHEMA DROPPED          | emajb              |                                       | postgres
 FORCE_DROP_GROUP   | END                     | myGroup1           | 6 tables/sequences processed          | postgres
 FORCE_DROP_GROUP   | BEGIN                   | myGroup2           |                                       | postgres
 FORCE_DROP_GROUP   | SCHEMA DROPPED          | "emajC"            |                                       | postgres
 FORCE_DROP_GROUP   | END                     | myGroup2           | 8 tables/sequences processed          | postgres
(176 rows)

select time_id, time_last_emaj_gid, time_event from emaj.emaj_time_stamp order by time_id;
 time_id | time_last_emaj_gid | time_event 
---------+--------------------+------------
       4 |                  0 | C
       5 |                  0 | C
       6 |                  0 | C
       9 |                  0 | C
      10 |                  0 | C
      11 |                  0 | M
      12 |                  0 | M
      13 |                  0 | C
      14 |                  0 | M
      15 |                  0 | C
      16 |                  0 | C
      17 |                  0 | C
      18 |                  0 | C
      21 |                  0 | A
      22 |                  0 | A
      23 |                  0 | A
      24 |                  0 | A
      25 |                  0 | A
      26 |                  0 | A
      27 |                  0 | A
      28 |                  0 | A
      29 |                  0 | A
      30 |                  0 | A
      31 |                  0 | A
      32 |                  0 | A
      33 |                  0 | A
      34 |                  0 | A
      35 |                  0 | A
      36 |                  0 | A
      37 |                  0 | A
      38 |                  0 | A
      39 |                  0 | A
      40 |                  0 | A
      41 |                  0 | A
      42 |                  0 | A
      43 |                  0 | A
      44 |                  0 | A
      45 |                  0 | A
      46 |                  0 | A
      47 |                  0 | A
      48 |                  0 | A
      49 |                  0 | A
      53 |                  0 | A
      54 |                  0 | A
      55 |                  0 | A
      56 |                  0 | A
      57 |                  0 | A
      58 |                  0 | A
      59 |                  0 | A
      60 |                  0 | A
(50 rows)

select * from emaj.emaj_alter_plan order by 1,2,3,4;
 altr_time_id |     altr_step     | altr_schema |   altr_tblseq    | altr_group | altr_priority | altr_group_is_logging | altr_new_group | altr_new_priority 
--------------+-------------------+-------------+------------------+------------+---------------+-----------------------+----------------+-------------------
           21 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           22 | REMOVE_TBL        | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                  
           22 | REMOVE_TBL        | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                  
           22 | REMOVE_TBL        | myschema1   | mytbl4           | myGroup1   |            20 | f                     |                |                  
           22 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           22 | DROP_LOG_SCHEMA   | emajb       |                  |            |               |                       |                |                  
           23 | REMOVE_SEQ        | myschema1   | myTbl3_col31_seq | myGroup1   |             1 | f                     |                |                  
           23 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           24 | CREATE_LOG_SCHEMA | emajb       |                  |            |               |                       |                |                  
           24 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           24 | ADD_TBL           | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                  
           24 | ADD_TBL           | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                  
           24 | ADD_TBL           | myschema1   | mytbl4           | myGroup1   |            20 | f                     |                |                  
           25 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           25 | ADD_SEQ           | myschema1   | myTbl3_col31_seq | myGroup1   |             1 | f                     |                |                  
           26 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           26 | ATTRIBUTE_TBL     | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                  
           27 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           27 | ATTRIBUTE_TBL     | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                  
           28 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           28 | ATTRIBUTE_TBL     | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                  
           29 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           29 | ATTRIBUTE_TBL     | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                  
           30 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           30 | ATTRIBUTE_TBL     | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                  
           31 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           31 | ATTRIBUTE_TBL     | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                  
           32 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           32 | ATTRIBUTE_TBL     | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                  
           32 | ATTRIBUTE_TBL     | myschema1   | mytbl2           | myGroup1   |               | f                     |                |                  
           32 | ATTRIBUTE_TBL     | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                  
           32 | ATTRIBUTE_TBL     | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                  
           32 | ATTRIBUTE_TBL     | myschema1   | mytbl4           | myGroup1   |            20 | f                     |                |                  
           33 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           33 | ATTRIBUTE_TBL     | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                  
           33 | ATTRIBUTE_TBL     | myschema1   | mytbl2           | myGroup1   |               | f                     |                |                  
           33 | ATTRIBUTE_TBL     | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                  
           33 | ATTRIBUTE_TBL     | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                  
           33 | ATTRIBUTE_TBL     | myschema1   | mytbl4           | myGroup1   |            20 | f                     |                |                  
           34 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           34 | ATTRIBUTE_TBL     | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                  
           35 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           35 | ATTRIBUTE_TBL     | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                  
           36 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           36 | PRIORITY_REL      | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                30
           37 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           37 | PRIORITY_REL      | myschema1   | mytbl1           | myGroup1   |            30 | f                     |                |                  
           38 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           38 | PRIORITY_REL      | myschema1   | mytbl1           | myGroup1   |               | f                     |                |                20
           39 | REPAIR_TBL        | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                  
           39 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           40 | REPAIR_TBL        | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                  
           40 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           41 | REPAIR_TBL        | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                  
           41 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           42 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           43 | REPAIR_TBL        | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                  
           43 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           44 | REMOVE_TBL        | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                  
           44 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           44 | ADD_TBL           | myschema1   | mytbl1_new_name  | myGroup1   |            20 | f                     |                |                  
           45 | REMOVE_TBL        | myschema1   | mytbl1_new_name  | myGroup1   |            20 | f                     |                |                  
           45 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           45 | ADD_TBL           | public      | mytbl1_new_name  | myGroup1   |            20 | f                     |                |                  
           46 | REMOVE_TBL        | public      | mytbl1_new_name  | myGroup1   |            20 | f                     |                |                  
           46 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           46 | ADD_TBL           | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                  
           47 | REPAIR_TBL        | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                  
           47 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           48 | REPAIR_TBL        | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                  
           48 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           49 | REPAIR_TBL        | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                  
           49 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           53 | REMOVE_TBL        | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                  
           53 | REMOVE_TBL        | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                  
           53 | REMOVE_TBL        | myschema2   | mytbl4           | myGroup2   |               | f                     |                |                  
           53 | REMOVE_SEQ        | myschema1   | myTbl3_col31_seq | myGroup1   |             1 | f                     |                |                  
           53 | RESET_GROUP       |             |                  | myGroup2   |               | f                     |                |                  
           53 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           53 | DROP_LOG_SCHEMA   | emajb       |                  |            |               |                       |                |                  
           54 | CREATE_LOG_SCHEMA | emajb       |                  |            |               |                       |                |                  
           54 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           54 | RESET_GROUP       |             |                  | myGroup2   |               | f                     |                |                  
           54 | ADD_TBL           | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                  
           54 | ADD_TBL           | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                  
           54 | ADD_TBL           | myschema2   | mytbl4           | myGroup2   |               | f                     |                |                  
           54 | ADD_SEQ           | myschema1   | myTbl3_col31_seq | myGroup1   |             1 | f                     |                |                  
           55 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           55 | RESET_GROUP       |             |                  | myGroup2   |               | f                     |                |                  
           55 | ATTRIBUTE_TBL     | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                  
           55 | ATTRIBUTE_TBL     | myschema2   | myTbl3           | myGroup2   |               | f                     |                |                  
           56 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           56 | RESET_GROUP       |             |                  | myGroup2   |               | f                     |                |                  
           56 | ATTRIBUTE_TBL     | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                  
           56 | ATTRIBUTE_TBL     | myschema2   | myTbl3           | myGroup2   |               | f                     |                |                  
           57 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           57 | RESET_GROUP       |             |                  | myGroup2   |               | f                     |                |                  
           57 | ATTRIBUTE_TBL     | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                  
           57 | ATTRIBUTE_TBL     | myschema2   | mytbl6           | myGroup2   |               | f                     |                |                  
           57 | PRIORITY_REL      | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                30
           58 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           58 | RESET_GROUP       |             |                  | myGroup2   |               | f                     |                |                  
           58 | ATTRIBUTE_TBL     | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                  
           58 | ATTRIBUTE_TBL     | myschema2   | mytbl6           | myGroup2   |               | f                     |                |                  
           58 | PRIORITY_REL      | myschema1   | mytbl1           | myGroup1   |            30 | f                     |                |                20
           59 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           59 | RESET_GROUP       |             |                  | myGroup2   |               | f                     |                |                  
           59 | ASSIGN_REL        | myschema2   | myTbl3           | myGroup2   |               | f                     | myGroup1       |                  
           59 | ASSIGN_REL        | myschema2   | myTbl3_col31_seq | myGroup2   |               | f                     | myGroup1       |                  
           60 | RESET_GROUP       |             |                  | myGroup1   |               | f                     |                |                  
           60 | RESET_GROUP       |             |                  | myGroup2   |               | f                     |                |                  
           60 | ASSIGN_REL        | myschema2   | myTbl3           | myGroup1   |               | f                     | myGroup2       |                  
           60 | ASSIGN_REL        | myschema2   | myTbl3_col31_seq | myGroup1   |               | f                     | myGroup2       |                  
(113 rows)

alter sequence emaj.emaj_hist_hist_id_seq restart 2000;
alter sequence emaj.emaj_time_stamp_time_id_seq restart 200;
alter sequence emaj.emaj_mark_mark_id_seq restart 200;
