-- createDrop.sql : prepare groups content and test emaj_create_group(), emaj_comment_group() 
-- emaj_drop_group(), emaj_force_drop_group() and emaj_alter_group() functions
--
SET client_min_messages TO WARNING;
-----------------------------
-- prepare groups
-----------------------------
delete from emaj.emaj_group_def;
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl1',20,NULL,NULL,NULL);
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2',NULL,NULL,'tsplog1','tsplog1');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2b',NULL,'b','tsp log''2','tsp log''2');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3_col31_seq',1,NULL);
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3',10,'C','tsplog1',NULL);
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl4',20,NULL,'tsplog1','tsp log''2');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl1');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl2');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','myTbl3_col31_seq');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','myTbl3',NULL,'C');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl4');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl5');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl6');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','myseq1');
-- The third group name contains space, comma # and '
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3','phil''s tbl1',NULL,' #''3');
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3',E'myTbl2\\');
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3',E'phil''s seq\\1');
-- Note myTbl4 from "phil's schema3" remains outside phil's group#3", group
insert into emaj.emaj_group_def values ('dummyGrp1','dummySchema','mytbl4');
insert into emaj.emaj_group_def values ('dummyGrp2','myschema1','dummyTable');
insert into emaj.emaj_group_def values ('dummyGrp3','myschema1','mytbl1');
insert into emaj.emaj_group_def values ('dummyGrp3','myschema2','mytbl2');
-----------------------------
-- emaj_create_group() tests
-----------------------------
-- invalid group names
select emaj.emaj_create_group(NULL);
ERROR:  emaj_create_group: group name can't be NULL.
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
select emaj.emaj_create_group('');
ERROR:  emaj_create_group: group name must at least contain 1 character.
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
select emaj.emaj_create_group(NULL,false);
ERROR:  emaj_create_group: group name can't be NULL.
select emaj.emaj_create_group('',false);
ERROR:  emaj_create_group: group name must at least contain 1 character.
-- group is unknown in emaj_group_def
select emaj.emaj_create_group('unknownGroup');
ERROR:  emaj_create_group: Group unknownGroup is unknown in emaj_group_def table.
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
select emaj.emaj_create_group('unknownGroup',false);
ERROR:  emaj_create_group: Group unknownGroup is unknown in emaj_group_def table.
-- unknown schema in emaj_group_def
select emaj.emaj_create_group('dummyGrp1');
ERROR:  _check_class: schema dummySchema doesn't exist.
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text,boolean) line 83 at assignment
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
select emaj.emaj_create_group('dummyGrp1',false);
ERROR:  _check_class: schema dummySchema doesn't exist.
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text,boolean) line 83 at assignment
-- unknown table in emaj_group_def
select emaj.emaj_create_group('dummyGrp2');
ERROR:  _check_class: table or sequence dummyTable doesn't exist.
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text,boolean) line 83 at assignment
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
select emaj.emaj_create_group('dummyGrp2',false);
ERROR:  _check_class: table or sequence dummyTable doesn't exist.
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text,boolean) line 83 at assignment
-- table without pkey for a rollbackable group
select emaj.emaj_create_group('phil''s group#3",',true);
ERROR:  _create_tbl: table myTbl2\ has no PRIMARY KEY.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 88 at PERFORM
-- sequence with a log schema suffix defined in the emaj_group_def table
begin;
  update emaj.emaj_group_def set grpdef_log_schema_suffix = 'something' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_create_group('myGroup1');
ERROR:  emaj_create_group: Defining a secondary log schema is not allowed for a sequence (myschema1.myTbl3_col31_seq).
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
rollback;
-- sequence with tablespace defined in the emaj_group_def table
begin;
  update emaj.emaj_group_def set grpdef_log_dat_tsp = 'something' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_create_group('myGroup1');
ERROR:  emaj_create_group: Defining log tablespaces is not allowed for a sequence (myschema1.myTbl3_col31_seq).
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
rollback;
-- table with invalid tablespace
begin;
  update emaj.emaj_group_def set grpdef_log_dat_tsp = 'dummyTablespace' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
  select emaj.emaj_create_group('myGroup1');
ERROR:  tablespace "dummyTablespace" does not exist
CONTEXT:  SQL statement "CREATE TABLE emaj.myschema1_mytbl1_log ( LIKE myschema1.mytbl1) TABLESPACE "dummyTablespace""
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 85 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 88 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
rollback;
-- already existing secondary schema
begin;
  create schema emajb;
  select emaj.emaj_create_group('myGroup1');
ERROR:  _create_log_schema: schema emajb should not exist. Drop it manually, or modify emaj_group_def table's content.
CONTEXT:  SQL statement "SELECT emaj._create_log_schema(r_schema.log_schema)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 68 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
rollback;
-- should be OK
select emaj.emaj_create_group('myGroup1');
WARNING:  _create_tbl: table myschema1.mytbl2 has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 88 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
 emaj_create_group 
-------------------
                 6
(1 row)

select emaj.emaj_create_group('myGroup2',true);
 emaj_create_group 
-------------------
                 8
(1 row)

select emaj.emaj_create_group('phil''s group#3",',false);
 emaj_create_group 
-------------------
                 3
(1 row)

-- create a group with a table already belonging to another group
select emaj.emaj_create_group('dummyGrp3');
ERROR:  emaj_create_group: one or several tables already belong to another group (myschema1.mytbl1 in myGroup1, myschema2.mytbl2 in myGroup2).
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
-- already created
select emaj.emaj_create_group('myGroup2');
ERROR:  emaj_create_group: group myGroup2 is already created.
CONTEXT:  PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
-- impact of created groups
select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname  
----------
 emaj
 emaj #'3
 emajC
 emajb
(4 rows)

select group_name, group_state, group_nb_table, group_nb_sequence, group_is_rollbackable, group_comment 
  from emaj.emaj_group order by group_name, group_state;
    group_name    | group_state | group_nb_table | group_nb_sequence | group_is_rollbackable | group_comment 
------------------+-------------+----------------+-------------------+-----------------------+---------------
 myGroup1         | IDLE        |              5 |                 1 | t                     | 
 myGroup2         | IDLE        |              6 |                 2 | t                     | 
 phil's group#3", | IDLE        |              2 |                 1 | f                     | 
(3 rows)

select * from emaj.emaj_relation order by rel_group, rel_priority, rel_schema, rel_tblseq;
   rel_schema   |    rel_tblseq    |    rel_group     | rel_priority | rel_log_schema | rel_log_dat_tsp | rel_log_idx_tsp | rel_kind | rel_session | rel_rows 
----------------+------------------+------------------+--------------+----------------+-----------------+-----------------+----------+-------------+----------
 myschema1      | myTbl3_col31_seq | myGroup1         |            1 |                |                 |                 | S        |             |         
 myschema1      | myTbl3           | myGroup1         |           10 | emajC          | tsplog1         | tspemaj         | r        |             |         
 myschema1      | mytbl1           | myGroup1         |           20 | emaj           | tspemaj         | tspemaj         | r        |             |         
 myschema1      | mytbl4           | myGroup1         |           20 | emaj           | tsplog1         | tsp log'2       | r        |             |         
 myschema1      | mytbl2           | myGroup1         |              | emaj           | tsplog1         | tsplog1         | r        |             |         
 myschema1      | mytbl2b          | myGroup1         |              | emajb          | tsp log'2       | tsp log'2       | r        |             |         
 myschema2      | myseq1           | myGroup2         |              |                |                 |                 | S        |             |         
 myschema2      | mytbl1           | myGroup2         |              | emaj           | tspemaj         | tspemaj         | r        |             |         
 myschema2      | mytbl2           | myGroup2         |              | emaj           | tspemaj         | tspemaj         | r        |             |         
 myschema2      | myTbl3           | myGroup2         |              | emajC          | tspemaj         | tspemaj         | r        |             |         
 myschema2      | myTbl3_col31_seq | myGroup2         |              |                |                 |                 | S        |             |         
 myschema2      | mytbl4           | myGroup2         |              | emaj           | tspemaj         | tspemaj         | r        |             |         
 myschema2      | mytbl5           | myGroup2         |              | emaj           | tspemaj         | tspemaj         | r        |             |         
 myschema2      | mytbl6           | myGroup2         |              | emaj           | tspemaj         | tspemaj         | r        |             |         
 phil's schema3 | myTbl2\          | phil's group#3", |              | emaj           | tspemaj         | tspemaj         | r        |             |         
 phil's schema3 | phil's seq\1     | phil's group#3", |              |                |                 |                 | S        |             |         
 phil's schema3 | phil's tbl1      | phil's group#3", |              | emaj #'3       | tspemaj         | tspemaj         | r        |             |         
(17 rows)

select * from pg_tables where schemaname like 'emaj%' order by tablename;
 schemaname |           tablename            | tableowner | tablespace | hasindexes | hasrules | hastriggers 
------------+--------------------------------+------------+------------+------------+----------+-------------
 emaj       | emaj_fk                        | postgres   | tspemaj    | t          | f        | f
 emaj       | emaj_group                     | postgres   | tspemaj    | t          | f        | t
 emaj       | emaj_group_def                 | postgres   | tspemaj    | t          | f        | f
 emaj       | emaj_hist                      | postgres   | tspemaj    | t          | f        | f
 emaj       | emaj_mark                      | postgres   | tspemaj    | t          | f        | t
 emaj       | emaj_param                     | postgres   | tspemaj    | t          | f        | f
 emaj       | emaj_relation                  | postgres   | tspemaj    | t          | f        | t
 emaj       | emaj_rlbk_stat                 | postgres   | tspemaj    | t          | f        | f
 emaj       | emaj_seq_hole                  | postgres   | tspemaj    | t          | f        | f
 emaj       | emaj_sequence                  | postgres   | tspemaj    | t          | f        | f
 emajC      | myschema1_myTbl3_log           | postgres   | tsplog1    | t          | f        | f
 emaj       | myschema1_mytbl1_log           | postgres   | tspemaj    | t          | f        | f
 emaj       | myschema1_mytbl2_log           | postgres   | tsplog1    | t          | f        | f
 emajb      | myschema1_mytbl2b_log          | postgres   | tsp log'2  | t          | f        | f
 emaj       | myschema1_mytbl4_log           | postgres   | tsplog1    | t          | f        | f
 emajC      | myschema2_myTbl3_log           | postgres   | tspemaj    | t          | f        | f
 emaj       | myschema2_mytbl1_log           | postgres   | tspemaj    | t          | f        | f
 emaj       | myschema2_mytbl2_log           | postgres   | tspemaj    | t          | f        | f
 emaj       | myschema2_mytbl4_log           | postgres   | tspemaj    | t          | f        | f
 emaj       | myschema2_mytbl5_log           | postgres   | tspemaj    | t          | f        | f
 emaj       | myschema2_mytbl6_log           | postgres   | tspemaj    | t          | f        | f
 emaj       | phil's schema3_myTbl2\_log     | postgres   | tspemaj    | t          | f        | f
 emaj #'3   | phil's schema3_phil's tbl1_log | postgres   | tspemaj    | t          | f        | f
(23 rows)

-----------------------------
-- emaj_comment_group() tests
-----------------------------
-- unknown group
select emaj.emaj_comment_group(NULL,NULL);
ERROR:  emaj_comment_group: group <NULL> has not been created.
select emaj.emaj_comment_group('unkownGroup',NULL);
ERROR:  emaj_comment_group: group unkownGroup has not been created.
-- should be OK
select emaj.emaj_comment_group('myGroup1','a first comment for group #1');
 emaj_comment_group 
--------------------
 
(1 row)

select emaj.emaj_comment_group('myGroup1','a better comment for group #1');
 emaj_comment_group 
--------------------
 
(1 row)

select group_name, group_comment from emaj.emaj_group where group_name = 'myGroup1';
 group_name |         group_comment         
------------+-------------------------------
 myGroup1   | a better comment for group #1
(1 row)

select emaj.emaj_comment_group('myGroup1',NULL);
 emaj_comment_group 
--------------------
 
(1 row)

select group_name, group_comment from emaj.emaj_group where group_name = 'myGroup1';
 group_name | group_comment 
------------+---------------
 myGroup1   | 
(1 row)

-----------------------------
-- emaj_drop_group() tests
-----------------------------
-- unknown group
select emaj.emaj_drop_group(NULL);
ERROR:  _drop_group: group <NULL> has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group(v_groupName, FALSE)"
PL/pgSQL function emaj.emaj_drop_group(text) line 12 at SQL statement
select emaj.emaj_drop_group('unkownGroup');
ERROR:  _drop_group: group unkownGroup has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group(v_groupName, FALSE)"
PL/pgSQL function emaj.emaj_drop_group(text) line 12 at SQL statement
-- group in logging state
select emaj.emaj_start_group('myGroup1','');
 emaj_start_group 
------------------
                6
(1 row)

select emaj.emaj_drop_group('myGroup1');
ERROR:  _drop_group: The group myGroup1 cannot be deleted because it is not in idle state.
CONTEXT:  SQL statement "SELECT emaj._drop_group(v_groupName, FALSE)"
PL/pgSQL function emaj.emaj_drop_group(text) line 12 at SQL statement
select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               6
(1 row)

-- secondary schema with an object blocking the schema drop
begin;
  create table emajb.dummy_log (col1 int);
  select emaj.emaj_drop_group('myGroup1');
ERROR:  _drop_log_schema: cannot drop schema emajb. It probably owns unattended objects. Use the emaj_verify_all() function to get details
CONTEXT:  SQL statement "SELECT emaj._drop_log_schema(r_schema.rel_log_schema, v_isForced)"
PL/pgSQL function emaj._drop_group(text,boolean) line 51 at PERFORM
SQL statement "SELECT emaj._drop_group(v_groupName, FALSE)"
PL/pgSQL function emaj.emaj_drop_group(text) line 12 at SQL statement
rollback;
-- should be OK
select emaj.emaj_drop_group('myGroup1');
 emaj_drop_group 
-----------------
               6
(1 row)

select emaj.emaj_drop_group('myGroup2');
 emaj_drop_group 
-----------------
               8
(1 row)

-- already dropped
select emaj.emaj_drop_group('myGroup2');
ERROR:  _drop_group: group myGroup2 has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group(v_groupName, FALSE)"
PL/pgSQL function emaj.emaj_drop_group(text) line 12 at SQL statement
-----------------------------
-- emaj_force_drop_group() tests
-----------------------------
-- unknown group
select emaj.emaj_force_drop_group(NULL);
ERROR:  _drop_group: group <NULL> has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group(v_groupName, TRUE)"
PL/pgSQL function emaj.emaj_force_drop_group(text) line 17 at SQL statement
select emaj.emaj_force_drop_group('unkownGroup');
ERROR:  _drop_group: group unkownGroup has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group(v_groupName, TRUE)"
PL/pgSQL function emaj.emaj_force_drop_group(text) line 17 at SQL statement
-- already dropped
select emaj.emaj_force_drop_group('myGroup2');
ERROR:  _drop_group: group myGroup2 has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group(v_groupName, TRUE)"
PL/pgSQL function emaj.emaj_force_drop_group(text) line 17 at SQL statement
-- should be OK
select emaj.emaj_create_group('myGroup1',false);
WARNING:  _create_tbl: table myschema1.mytbl2 has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 88 at PERFORM
 emaj_create_group 
-------------------
                 6
(1 row)

select emaj.emaj_start_group('myGroup1','');
 emaj_start_group 
------------------
                6
(1 row)

select emaj.emaj_force_drop_group('myGroup1');
 emaj_force_drop_group 
-----------------------
                     6
(1 row)

select emaj.emaj_create_group('myGroup2',true);
 emaj_create_group 
-------------------
                 8
(1 row)

select emaj.emaj_force_drop_group('myGroup2');
 emaj_force_drop_group 
-----------------------
                     8
(1 row)

-----------------------------
-- emaj_alter_group() tests
-----------------------------
-- unknown group
select emaj.emaj_alter_group(NULL);
ERROR:  emaj_alter_group: group <NULL> has not been created.
select emaj.emaj_alter_group('unkownGroup');
ERROR:  emaj_alter_group: group unkownGroup has not been created.
-- group in logging state
select emaj.emaj_create_group('myGroup1');
WARNING:  _create_tbl: table myschema1.mytbl2 has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 88 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
 emaj_create_group 
-------------------
                 6
(1 row)

select emaj.emaj_start_group('myGroup1','');
 emaj_start_group 
------------------
                6
(1 row)

select emaj.emaj_alter_group('myGroup1');
ERROR:  emaj_alter_group: The group myGroup1 cannot be altered because it is not in idle state.
select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               6
(1 row)

-- alter a group with a table now already belonging to another group
begin;
  select emaj.emaj_create_group('myGroup2');
 emaj_create_group 
-------------------
                 8
(1 row)

  insert into emaj.emaj_group_def values ('myGroup1','myschema2','mytbl1');
  select emaj.emaj_alter_group('myGroup1');
ERROR:  emaj_alter_group: one or several tables already belong to another group (myschema2.mytbl1 in myGroup2).
rollback;
-- the group is now empty
begin;
  delete from emaj.emaj_group_def where grpdef_group = 'myGroup1';
  select emaj.emaj_alter_group('myGroup1');
ERROR:  emaj_alter_group: Group myGroup1 is unknown in emaj_group_def table.
rollback;
-- log tablespace cannot be changed for sequence
begin;
  update emaj.emaj_group_def set grpdef_log_dat_tsp = 'b' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_alter_group('myGroup1');
ERROR:  emaj_alter_group: Defining log tablespaces is not allowed for a sequence (myschema1.myTbl3_col31_seq).
rollback;
begin;
  update emaj.emaj_group_def set grpdef_log_idx_tsp = 'b' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_alter_group('myGroup1');
ERROR:  emaj_alter_group: Defining log tablespaces is not allowed for a sequence (myschema1.myTbl3_col31_seq).
rollback;
-- should be OK
-- nothing to change
select group_nb_table, group_nb_sequence, case when group_last_alter_datetime is null then 'NULL' else 'NOT NULL' end as is_group_last_alter_datetime_null from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence | is_group_last_alter_datetime_null 
----------------+-------------------+-----------------------------------
              5 |                 1 | NULL
(1 row)

select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                0
(1 row)

select group_nb_table, group_nb_sequence, case when group_last_alter_datetime is null then 'NULL' else 'NOT NULL' end as is_group_last_alter_datetime_null from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence | is_group_last_alter_datetime_null 
----------------+-------------------+-----------------------------------
              5 |                 1 | NOT NULL
(1 row)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname  
----------
 emaj
 emaj #'3
 emajC
 emajb
(4 rows)

-- only 2 tables to remove (+ log schema emajC)
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl4';
select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_fk_groups: table myschema1.mytbl2 is referenced by foreign key mytbl4_col43_fkey from table myschema1.mytbl4 that is outside groups (myGroup1).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(array[v_groupName])"
PL/pgSQL function emaj.emaj_alter_group(text) line 227 at PERFORM
WARNING:  _check_fk_groups: table myschema1.mytbl1 is referenced by foreign key mytbl4_col44_fkey from table myschema1.mytbl4 that is outside groups (myGroup1).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(array[v_groupName])"
PL/pgSQL function emaj.emaj_alter_group(text) line 227 at PERFORM
 emaj_alter_group 
------------------
                2
(1 row)

select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence 
----------------+-------------------
              3 |                 1
(1 row)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname  
----------
 emaj
 emaj #'3
 emajb
(3 rows)

-- only 1 sequence to remove
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_fk_groups: table myschema1.mytbl2 is referenced by foreign key mytbl4_col43_fkey from table myschema1.mytbl4 that is outside groups (myGroup1).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(array[v_groupName])"
PL/pgSQL function emaj.emaj_alter_group(text) line 227 at PERFORM
WARNING:  _check_fk_groups: table myschema1.mytbl1 is referenced by foreign key mytbl4_col44_fkey from table myschema1.mytbl4 that is outside groups (myGroup1).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(array[v_groupName])"
PL/pgSQL function emaj.emaj_alter_group(text) line 227 at PERFORM
 emaj_alter_group 
------------------
                1
(1 row)

select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence 
----------------+-------------------
              3 |                 0
(1 row)

-- only 2 tables to add (+ log schema emajC)
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3',10,'C','tsplog1',NULL);
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl4',20,NULL,'tsplog1','tsp log''2');
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                2
(1 row)

select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence 
----------------+-------------------
              5 |                 0
(1 row)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname  
----------
 emaj
 emaj #'3
 emajC
 emajb
(4 rows)

-- only 1 sequence to add
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3_col31_seq',1,NULL);
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                1
(1 row)

select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence 
----------------+-------------------
              5 |                 1
(1 row)

-- only change the log schema
update emaj.emaj_group_def set grpdef_log_schema_suffix = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                1
(1 row)

select nspname from pg_namespace, pg_class where relnamespace = pg_namespace.oid and relname = 'myschema1_myTbl3_log';
 nspname 
---------
 emaj
(1 row)

update emaj.emaj_group_def set grpdef_log_schema_suffix = 'C' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                1
(1 row)

select nspname from pg_namespace, pg_class where relnamespace = pg_namespace.oid and relname = 'myschema1_myTbl3_log';
 nspname 
---------
 emajC
(1 row)

-- only change the log data tablespace for 1 table
update emaj.emaj_group_def set grpdef_log_dat_tsp = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                1
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema1_mytbl2b_log';
 spcname 
---------
 tspemaj
(1 row)

update emaj.emaj_group_def set grpdef_log_dat_tsp = 'tsp log''2' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                1
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema1_mytbl2b_log';
  spcname  
-----------
 tsp log'2
(1 row)

-- change the log data tablespace for all tables of a group
update emaj.emaj_group_def set grpdef_log_dat_tsp = case when grpdef_log_dat_tsp is NULL then 'tsplog1' when grpdef_log_dat_tsp = 'tsplog1' then 'tsp log''2' else NULL end where grpdef_schema = 'myschema1' and grpdef_tblseq not like '%seq';
select emaj.emaj_alter_group('myGroup1');
WARNING:  _create_tbl: table myschema1.mytbl2 has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_alter_group(text) line 199 at PERFORM
 emaj_alter_group 
------------------
                5
(1 row)

update emaj.emaj_group_def set grpdef_log_dat_tsp = case when grpdef_log_dat_tsp = 'tsplog1' then NULL when grpdef_log_dat_tsp = 'tsp log''2' then 'tsplog1' else 'tsp log''2' end where grpdef_schema = 'myschema1' and grpdef_tblseq not like '%seq';
select emaj.emaj_alter_group('myGroup1');
WARNING:  _create_tbl: table myschema1.mytbl2 has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_alter_group(text) line 199 at PERFORM
 emaj_alter_group 
------------------
                5
(1 row)

-- only change the log index tablespace
update emaj.emaj_group_def set grpdef_log_idx_tsp = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                1
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema1_mytbl2b_log_idx';
 spcname 
---------
 tspemaj
(1 row)

update emaj.emaj_group_def set grpdef_log_idx_tsp = 'tsp log''2' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                1
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema1_mytbl2b_log_idx';
  spcname  
-----------
 tsp log'2
(1 row)

-- only change the priority
update emaj.emaj_group_def set grpdef_priority = 30 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                1
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1';
 rel_priority 
--------------
           30
(1 row)

update emaj.emaj_group_def set grpdef_priority = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                1
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1';
 rel_priority 
--------------
             
(1 row)

update emaj.emaj_group_def set grpdef_priority = 20 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                1
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1';
 rel_priority 
--------------
           20
(1 row)

-- change the table structure
alter table myschema1.mytbl1 add column newcol int;
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                1
(1 row)

alter table myschema1.mytbl1 rename newcol to newcol2;
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                1
(1 row)

alter table myschema1.mytbl1 alter column newcol2 type bigint;
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                1
(1 row)

alter table myschema1.mytbl1 alter column newcol2 set default 0;
-- NB: changing default hos no impact on emaj component 
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                0
(1 row)

alter table myschema1.mytbl1 drop column newcol2;
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                1
(1 row)

-- missing emaj components
drop trigger myschema1_mytbl1_emaj_log_trg on myschema1.mytbl1;
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                1
(1 row)

drop function emaj.myschema1_mytbl1_log_fnct() cascade;
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                1
(1 row)

drop function emaj.myschema1_mytbl1_rlbk_fnct(bigint);
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                1
(1 row)

drop table emaj.myschema1_mytbl1_log;
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                1
(1 row)

-----------------------------
-- test end: check and force sequences id
-----------------------------
select emaj.emaj_force_drop_group('myGroup1');
 emaj_force_drop_group 
-----------------------
                     6
(1 row)

select emaj.emaj_force_drop_group('myGroup2');
ERROR:  _drop_group: group myGroup2 has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group(v_groupName, TRUE)"
PL/pgSQL function emaj.emaj_force_drop_group(text) line 17 at SQL statement
select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname  
----------
 emaj
 emaj #'3
(2 rows)

select hist_id, hist_function, hist_event, hist_object, regexp_replace(regexp_replace(hist_wording,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d','%','g'),E'\\[.+\\]','(timestamp)','g'), hist_user from 
  (select * from emaj.emaj_hist order by hist_id) as t;
 hist_id |  hist_function   |        hist_event        |   hist_object    |              regexp_replace              | hist_user 
---------+------------------+--------------------------+------------------+------------------------------------------+-----------
       1 | EMAJ_INSTALL     |                          | E-Maj 0.12.0     | Initialisation completed                 | postgres
      25 | CREATE_GROUP     | BEGIN                    | myGroup1         | rollbackable                             | postgres
      26 | CREATE_GROUP     | SECONDARY SCHEMA CREATED | emajb            |                                          | postgres
      27 | CREATE_GROUP     | SECONDARY SCHEMA CREATED | "emajC"          |                                          | postgres
      28 | CREATE_GROUP     | END                      | myGroup1         | 6 tables/sequences processed             | postgres
      29 | CREATE_GROUP     | BEGIN                    | myGroup2         | rollbackable                             | postgres
      30 | CREATE_GROUP     | END                      | myGroup2         | 8 tables/sequences processed             | postgres
      31 | CREATE_GROUP     | BEGIN                    | phil's group#3", | audit_only                               | postgres
      32 | CREATE_GROUP     | SECONDARY SCHEMA CREATED | "emaj #'3"       |                                          | postgres
      33 | CREATE_GROUP     | END                      | phil's group#3", | 3 tables/sequences processed             | postgres
      36 | COMMENT_GROUP    |                          | myGroup1         |                                          | postgres
      37 | COMMENT_GROUP    |                          | myGroup1         |                                          | postgres
      38 | COMMENT_GROUP    |                          | myGroup1         |                                          | postgres
      41 | START_GROUP      | BEGIN                    | myGroup1         | With log reset                           | postgres
      42 | LOCK_GROUP       | BEGIN                    | myGroup1         |                                          | postgres
      43 | LOCK_GROUP       | END                      | myGroup1         | 5 tables locked, 0 deadlock(s)           | postgres
      44 | SET_MARK_GROUP   | BEGIN                    | myGroup1         | MARK_%                                   | postgres
      45 | SET_MARK_GROUP   | END                      | myGroup1         | MARK_%                                   | postgres
      46 | START_GROUP      | END                      | myGroup1         | 6 tables/sequences processed             | postgres
      48 | STOP_GROUP       | BEGIN                    | myGroup1         |                                          | postgres
      49 | LOCK_GROUP       | BEGIN                    | myGroup1         |                                          | postgres
      50 | LOCK_GROUP       | END                      | myGroup1         | 5 tables locked, 0 deadlock(s)           | postgres
      51 | SET_MARK_GROUP   | BEGIN                    | myGroup1         | STOP_%                                   | postgres
      52 | SET_MARK_GROUP   | END                      | myGroup1         | STOP_%                                   | postgres
      53 | STOP_GROUP       | END                      | myGroup1         | 6 tables/sequences processed             | postgres
      55 | DROP_GROUP       | BEGIN                    | myGroup1         |                                          | postgres
      56 | DROP_GROUP       | SECONDARY SCHEMA DROPPED | emajb            |                                          | postgres
      57 | DROP_GROUP       | END                      | myGroup1         | 6 tables/sequences processed             | postgres
      58 | DROP_GROUP       | BEGIN                    | myGroup2         |                                          | postgres
      59 | DROP_GROUP       | SECONDARY SCHEMA DROPPED | "emajC"          |                                          | postgres
      60 | DROP_GROUP       | END                      | myGroup2         | 8 tables/sequences processed             | postgres
      65 | CREATE_GROUP     | BEGIN                    | myGroup1         | audit_only                               | postgres
      66 | CREATE_GROUP     | SECONDARY SCHEMA CREATED | emajb            |                                          | postgres
      67 | CREATE_GROUP     | SECONDARY SCHEMA CREATED | "emajC"          |                                          | postgres
      68 | CREATE_GROUP     | END                      | myGroup1         | 6 tables/sequences processed             | postgres
      69 | START_GROUP      | BEGIN                    | myGroup1         | With log reset                           | postgres
      70 | LOCK_GROUP       | BEGIN                    | myGroup1         |                                          | postgres
      71 | LOCK_GROUP       | END                      | myGroup1         | 5 tables locked, 0 deadlock(s)           | postgres
      72 | SET_MARK_GROUP   | BEGIN                    | myGroup1         | MARK_%                                   | postgres
      73 | SET_MARK_GROUP   | END                      | myGroup1         | MARK_%                                   | postgres
      74 | START_GROUP      | END                      | myGroup1         | 6 tables/sequences processed             | postgres
      75 | FORCE_DROP_GROUP | BEGIN                    | myGroup1         |                                          | postgres
      76 | FORCE_DROP_GROUP | SECONDARY SCHEMA DROPPED | emajb            |                                          | postgres
      77 | FORCE_DROP_GROUP | SECONDARY SCHEMA DROPPED | "emajC"          |                                          | postgres
      78 | FORCE_DROP_GROUP | END                      | myGroup1         | 6 tables/sequences processed             | postgres
      79 | CREATE_GROUP     | BEGIN                    | myGroup2         | rollbackable                             | postgres
      80 | CREATE_GROUP     | SECONDARY SCHEMA CREATED | "emajC"          |                                          | postgres
      81 | CREATE_GROUP     | END                      | myGroup2         | 8 tables/sequences processed             | postgres
      82 | FORCE_DROP_GROUP | BEGIN                    | myGroup2         |                                          | postgres
      83 | FORCE_DROP_GROUP | SECONDARY SCHEMA DROPPED | "emajC"          |                                          | postgres
      84 | FORCE_DROP_GROUP | END                      | myGroup2         | 8 tables/sequences processed             | postgres
      87 | CREATE_GROUP     | BEGIN                    | myGroup1         | rollbackable                             | postgres
      88 | CREATE_GROUP     | SECONDARY SCHEMA CREATED | emajb            |                                          | postgres
      89 | CREATE_GROUP     | SECONDARY SCHEMA CREATED | "emajC"          |                                          | postgres
      90 | CREATE_GROUP     | END                      | myGroup1         | 6 tables/sequences processed             | postgres
      91 | START_GROUP      | BEGIN                    | myGroup1         | With log reset                           | postgres
      92 | LOCK_GROUP       | BEGIN                    | myGroup1         |                                          | postgres
      93 | LOCK_GROUP       | END                      | myGroup1         | 5 tables locked, 0 deadlock(s)           | postgres
      94 | SET_MARK_GROUP   | BEGIN                    | myGroup1         | MARK_%                                   | postgres
      95 | SET_MARK_GROUP   | END                      | myGroup1         | MARK_%                                   | postgres
      96 | START_GROUP      | END                      | myGroup1         | 6 tables/sequences processed             | postgres
      98 | STOP_GROUP       | BEGIN                    | myGroup1         |                                          | postgres
      99 | LOCK_GROUP       | BEGIN                    | myGroup1         |                                          | postgres
     100 | LOCK_GROUP       | END                      | myGroup1         | 5 tables locked, 0 deadlock(s)           | postgres
     101 | SET_MARK_GROUP   | BEGIN                    | myGroup1         | STOP_%                                   | postgres
     102 | SET_MARK_GROUP   | END                      | myGroup1         | STOP_%                                   | postgres
     103 | STOP_GROUP       | END                      | myGroup1         | 6 tables/sequences processed             | postgres
     110 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     111 | ALTER_GROUP      | END                      | myGroup1         | 0 tables/sequences effectively processed | postgres
     112 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     113 | ALTER_GROUP      | SECONDARY SCHEMA DROPPED | "emajC"          |                                          | postgres
     114 | ALTER_GROUP      | END                      | myGroup1         | 2 tables/sequences effectively processed | postgres
     115 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     116 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     117 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     118 | ALTER_GROUP      | SECONDARY SCHEMA CREATED | "emajC"          |                                          | postgres
     119 | ALTER_GROUP      | END                      | myGroup1         | 2 tables/sequences effectively processed | postgres
     120 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     121 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     122 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     123 | ALTER_GROUP      | SECONDARY SCHEMA DROPPED | "emajC"          |                                          | postgres
     124 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     125 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     126 | ALTER_GROUP      | SECONDARY SCHEMA CREATED | "emajC"          |                                          | postgres
     127 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     128 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     129 | ALTER_GROUP      | SECONDARY SCHEMA DROPPED | emajb            |                                          | postgres
     130 | ALTER_GROUP      | SECONDARY SCHEMA CREATED | emajb            |                                          | postgres
     131 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     132 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     133 | ALTER_GROUP      | SECONDARY SCHEMA DROPPED | emajb            |                                          | postgres
     134 | ALTER_GROUP      | SECONDARY SCHEMA CREATED | emajb            |                                          | postgres
     135 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     136 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     137 | ALTER_GROUP      | SECONDARY SCHEMA DROPPED | "emajC"          |                                          | postgres
     138 | ALTER_GROUP      | SECONDARY SCHEMA DROPPED | emajb            |                                          | postgres
     139 | ALTER_GROUP      | SECONDARY SCHEMA CREATED | emajb            |                                          | postgres
     140 | ALTER_GROUP      | SECONDARY SCHEMA CREATED | "emajC"          |                                          | postgres
     141 | ALTER_GROUP      | END                      | myGroup1         | 5 tables/sequences effectively processed | postgres
     142 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     143 | ALTER_GROUP      | SECONDARY SCHEMA DROPPED | "emajC"          |                                          | postgres
     144 | ALTER_GROUP      | SECONDARY SCHEMA DROPPED | emajb            |                                          | postgres
     145 | ALTER_GROUP      | SECONDARY SCHEMA CREATED | emajb            |                                          | postgres
     146 | ALTER_GROUP      | SECONDARY SCHEMA CREATED | "emajC"          |                                          | postgres
     147 | ALTER_GROUP      | END                      | myGroup1         | 5 tables/sequences effectively processed | postgres
     148 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     149 | ALTER_GROUP      | SECONDARY SCHEMA DROPPED | emajb            |                                          | postgres
     150 | ALTER_GROUP      | SECONDARY SCHEMA CREATED | emajb            |                                          | postgres
     151 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     152 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     153 | ALTER_GROUP      | SECONDARY SCHEMA DROPPED | emajb            |                                          | postgres
     154 | ALTER_GROUP      | SECONDARY SCHEMA CREATED | emajb            |                                          | postgres
     155 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     156 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     157 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     158 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     159 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     160 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     161 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     162 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     163 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     164 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     165 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     166 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     167 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     168 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     169 | ALTER_GROUP      | END                      | myGroup1         | 0 tables/sequences effectively processed | postgres
     170 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     171 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     172 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     173 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     174 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     175 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     176 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     177 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     178 | ALTER_GROUP      | BEGIN                    | myGroup1         |                                          | postgres
     179 | ALTER_GROUP      | END                      | myGroup1         | 1 tables/sequences effectively processed | postgres
     180 | FORCE_DROP_GROUP | BEGIN                    | myGroup1         |                                          | postgres
     181 | FORCE_DROP_GROUP | SECONDARY SCHEMA DROPPED | emajb            |                                          | postgres
     182 | FORCE_DROP_GROUP | SECONDARY SCHEMA DROPPED | "emajC"          |                                          | postgres
     183 | FORCE_DROP_GROUP | END                      | myGroup1         | 6 tables/sequences processed             | postgres
(141 rows)

alter sequence emaj.emaj_hist_hist_id_seq restart 2000;
alter sequence emaj.emaj_mark_mark_id_seq restart 200;
alter sequence emaj.emaj_sequence_sequ_id_seq restart 200;
alter sequence emaj.emaj_seq_hole_sqhl_id_seq restart 200;
