-- beforeMigLoggingGroup.sql : complex scenario executed by an emaj_adm role
-- The E-Maj version is changed while groups are in logging state
-- This script is the part of operations performed before the migration
--
SET datestyle TO ymd;
-----------------------------
-- grant emaj_adm role 
-----------------------------
grant emaj_adm to emaj_regression_tests_adm_user;
set role emaj_regression_tests_adm_user;
-----------------------------
-- prepare groups
-----------------------------
delete from emaj.emaj_group_def;
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl1',20);
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2',NULL);
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2b',NULL);
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3_col31_seq',1);
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3',10);
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl4',20);
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl1');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl2');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','myTbl3_col31_seq');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','myTbl3');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl4');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','myseq1');
-- The third group name contains space, comma # and '
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3','phil''s tbl1');
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3',E'myTbl2\\');
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3',E'phil''s seq\\1');
insert into emaj.emaj_group_def values ('dummyGrp1','dummySchema','mytbl4');
insert into emaj.emaj_group_def values ('dummyGrp2','myschema1','dummyTable');
insert into emaj.emaj_group_def values ('dummyGrp3','myschema1','mytbl1');
insert into emaj.emaj_group_def values ('dummyGrp3','myschema2','mytbl2');
-----------------------------
-- create and start groups
-----------------------------
select emaj.emaj_create_group('myGroup1');
NOTICE:  table "myschema1_myTbl3_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj."myschema1_myTbl3_log""
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 77 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
NOTICE:  trigger "myschema1_myTbl3_emaj_log_trg" for table "myschema1.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS "myschema1_myTbl3_emaj_log_trg" ON myschema1."myTbl3""
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 138 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
NOTICE:  trigger "myschema1_myTbl3_emaj_trunc_trg" for table "myschema1.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS "myschema1_myTbl3_emaj_trunc_trg" ON myschema1."myTbl3""
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 146 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
NOTICE:  table "myschema1_mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl1_log"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 77 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
NOTICE:  trigger "myschema1_mytbl1_emaj_log_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS myschema1_mytbl1_emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 138 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
NOTICE:  trigger "myschema1_mytbl1_emaj_trunc_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS myschema1_mytbl1_emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 146 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
NOTICE:  table "myschema1_mytbl4_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl4_log"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 77 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
NOTICE:  trigger "myschema1_mytbl4_emaj_log_trg" for table "myschema1.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS myschema1_mytbl4_emaj_log_trg ON myschema1.mytbl4"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 138 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
NOTICE:  trigger "myschema1_mytbl4_emaj_trunc_trg" for table "myschema1.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS myschema1_mytbl4_emaj_trunc_trg ON myschema1.mytbl4"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 146 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
NOTICE:  table "myschema1_mytbl2_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl2_log"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 77 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
NOTICE:  trigger "myschema1_mytbl2_emaj_log_trg" for table "myschema1.mytbl2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS myschema1_mytbl2_emaj_log_trg ON myschema1.mytbl2"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 138 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
NOTICE:  trigger "myschema1_mytbl2_emaj_trunc_trg" for table "myschema1.mytbl2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS myschema1_mytbl2_emaj_trunc_trg ON myschema1.mytbl2"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 146 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
WARNING:  _create_tbl: table myschema1.mytbl2 has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
NOTICE:  table "myschema1_mytbl2b_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl2b_log"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 77 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
NOTICE:  trigger "myschema1_mytbl2b_emaj_log_trg" for table "myschema1.mytbl2b" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS myschema1_mytbl2b_emaj_log_trg ON myschema1.mytbl2b"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 138 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
NOTICE:  trigger "myschema1_mytbl2b_emaj_trunc_trg" for table "myschema1.mytbl2b" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS myschema1_mytbl2b_emaj_trunc_trg ON myschema1.mytbl2b"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 146 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
PL/pgSQL function emaj.emaj_create_group(text) line 7 at RETURN
 emaj_create_group 
-------------------
                 6
(1 row)

select emaj.emaj_create_group('myGroup2',true);
NOTICE:  table "myschema2_mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema2_mytbl1_log"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 77 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
NOTICE:  trigger "myschema2_mytbl1_emaj_log_trg" for table "myschema2.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS myschema2_mytbl1_emaj_log_trg ON myschema2.mytbl1"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 138 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
NOTICE:  trigger "myschema2_mytbl1_emaj_trunc_trg" for table "myschema2.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS myschema2_mytbl1_emaj_trunc_trg ON myschema2.mytbl1"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 146 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
NOTICE:  table "myschema2_mytbl2_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema2_mytbl2_log"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 77 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
NOTICE:  trigger "myschema2_mytbl2_emaj_log_trg" for table "myschema2.mytbl2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS myschema2_mytbl2_emaj_log_trg ON myschema2.mytbl2"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 138 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
NOTICE:  trigger "myschema2_mytbl2_emaj_trunc_trg" for table "myschema2.mytbl2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS myschema2_mytbl2_emaj_trunc_trg ON myschema2.mytbl2"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 146 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
NOTICE:  table "myschema2_myTbl3_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj."myschema2_myTbl3_log""
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 77 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
NOTICE:  trigger "myschema2_myTbl3_emaj_log_trg" for table "myschema2.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS "myschema2_myTbl3_emaj_log_trg" ON myschema2."myTbl3""
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 138 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
NOTICE:  trigger "myschema2_myTbl3_emaj_trunc_trg" for table "myschema2.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS "myschema2_myTbl3_emaj_trunc_trg" ON myschema2."myTbl3""
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 146 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
NOTICE:  table "myschema2_mytbl4_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema2_mytbl4_log"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 77 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
NOTICE:  trigger "myschema2_mytbl4_emaj_log_trg" for table "myschema2.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS myschema2_mytbl4_emaj_log_trg ON myschema2.mytbl4"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 138 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
NOTICE:  trigger "myschema2_mytbl4_emaj_trunc_trg" for table "myschema2.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS myschema2_mytbl4_emaj_trunc_trg ON myschema2.mytbl4"
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 146 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
 emaj_create_group 
-------------------
                 6
(1 row)

select emaj.emaj_create_group('phil''s group#3",',false);
NOTICE:  table "phil's schema3_myTbl2\_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj."phil's schema3_myTbl2\_log""
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 77 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
NOTICE:  trigger "phil's schema3_myTbl2\_emaj_log_trg" for table "phil's schema3.myTbl2\" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS "phil's schema3_myTbl2\_emaj_log_trg" ON "phil's schema3"."myTbl2\""
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 138 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
NOTICE:  trigger "phil's schema3_myTbl2\_emaj_trunc_trg" for table "phil's schema3.myTbl2\" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS "phil's schema3_myTbl2\_emaj_trunc_trg" ON "phil's schema3"."myTbl2\""
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 146 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
NOTICE:  table "phil's schema3_phil's tbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj."phil's schema3_phil's tbl1_log""
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 77 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
NOTICE:  trigger "phil's schema3_phil's tbl1_emaj_log_trg" for table "phil's schema3.phil's tbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS "phil's schema3_phil's tbl1_emaj_log_trg" ON "phil's schema3"."phil's tbl1""
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 138 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
NOTICE:  trigger "phil's schema3_phil's tbl1_emaj_trunc_trg" for table "phil's schema3.phil's tbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS "phil's schema3_phil's tbl1_emaj_trunc_trg" ON "phil's schema3"."phil's tbl1""
PL/pgSQL function emaj._create_tbl(text,text,text,text,text,boolean) line 146 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_tblsq.grpdef_schema, r_tblsq.grpdef_tblseq, v_logSchema, coalesce(r_tblsq.grpdef_log_dat_tsp, v_defTsp), coalesce(r_tblsq.grpdef_log_idx_tsp, v_defTsp), v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean) line 74 at PERFORM
 emaj_create_group 
-------------------
                 3
(1 row)

select emaj.emaj_start_group('myGroup1','M1');
 emaj_start_group 
------------------
                6
(1 row)

select emaj.emaj_start_group('myGroup2','M1');
 emaj_start_group 
------------------
                6
(1 row)

select emaj.emaj_start_group('phil''s group#3",','M1');
 emaj_start_group 
------------------
                3
(1 row)

-----------------------------
-- Step 1 : for myGroup1, update tables and set 2 marks
-----------------------------
-- 
set search_path=myschema1;
insert into myTbl1 select i, 'ABC', E'\\014'::bytea from generate_series (1,11) as i;
update myTbl1 set col13=E'\\034'::bytea where col11 <= 3;
insert into myTbl2 values (1,'ABC','2010-12-31');
delete from myTbl1 where col11 > 10;
insert into myTbl2 values (2,'DEF',NULL);
insert into "myTbl3" (col33) select generate_series(1000,1039,4)/100;
--
select emaj.emaj_set_mark_group('myGroup1','M2');
 emaj_set_mark_group 
---------------------
                   6
(1 row)

--
set search_path=myschema1;
insert into myTbl4 values (1,'FK...',1,1,'ABC');
insert into myTbl4 values (2,'FK...',1,1,'ABC');
update myTbl4 set col43 = 2;
insert into myTbl4 values (3,'FK...',1,10,'ABC');
delete from myTbl1 where col11 = 10;
update myTbl1 set col12='DEF' where col11 <= 2;
--
select emaj.emaj_set_mark_group('myGroup1','M3');
 emaj_set_mark_group 
---------------------
                   6
(1 row)

select emaj.emaj_comment_mark_group('myGroup1','M3','Third mark set');
 emaj_comment_mark_group 
-------------------------
 
(1 row)

-----------------------------
-- Step 2 : for myGroup2, start, update tables and set 2 marks 
-----------------------------
set search_path=myschema2;
insert into myTbl1 select i, 'ABC', E'\\014'::bytea from generate_series (1,11) as i;
update myTbl1 set col13=E'\\034'::bytea where col11 <= 3;
insert into myTbl2 values (1,'ABC','2010-01-01');
delete from myTbl1 where col11 > 10;
select nextval('myschema2.myseq1');
 nextval 
---------
    1000
(1 row)

insert into myTbl2 values (2,'DEF',NULL);
insert into "myTbl3" (col33) select generate_series(1000,1039,4)/100;
--
select emaj.emaj_set_mark_group('myGroup2','M2');
 emaj_set_mark_group 
---------------------
                   6
(1 row)

--
set search_path=myschema2;
select nextval('myschema2.myseq1');
 nextval 
---------
    1001
(1 row)

select nextval('myschema2.myseq1');
 nextval 
---------
    1002
(1 row)

select nextval('myschema2.myseq1');
 nextval 
---------
    1003
(1 row)

--
reset role;
alter sequence mySeq1 NO MAXVALUE NO CYCLE;
set role emaj_regression_tests_adm_user;
--
insert into myTbl4 values (1,'FK...',1,1,'ABC');
insert into myTbl4 values (2,'FK...',1,1,'ABC');
update myTbl4 set col43 = 2;
--
select emaj.emaj_set_mark_group('myGroup2','M3');
 emaj_set_mark_group 
---------------------
                   6
(1 row)

-----------------------------
-- Step 3 : for myGroup2, double logged rollback then delete first mark 
-----------------------------
select emaj.emaj_logged_rollback_group('myGroup2','M2');
 emaj_logged_rollback_group 
----------------------------
                          3
(1 row)

select emaj.emaj_logged_rollback_group('myGroup2','M3');
 emaj_logged_rollback_group 
----------------------------
                          3
(1 row)

-----------------------------
-- Checking steps 1 to 3
-----------------------------
-- emaj tables
select group_name, group_is_logging, group_nb_table, group_nb_sequence, group_is_rollbackable, group_comment 
  from emaj.emaj_group order by group_nb_table;
    group_name    | group_is_logging | group_nb_table | group_nb_sequence | group_is_rollbackable | group_comment 
------------------+------------------+----------------+-------------------+-----------------------+---------------
 phil's group#3", | t                |              2 |                 1 | f                     | 
 myGroup2         | t                |              4 |                 2 | t                     | 
 myGroup1         | t                |              5 |                 1 | t                     | 
(3 rows)

select mark_id, mark_group, regexp_replace(mark_name,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d','%','g'), mark_is_deleted, mark_comment, mark_last_seq_hole_id, mark_last_sequence_id from emaj.emaj_mark order by mark_id;
 mark_id |    mark_group    | regexp_replace  | mark_is_deleted |  mark_comment  | mark_last_seq_hole_id | mark_last_sequence_id 
---------+------------------+-----------------+-----------------+----------------+-----------------------+-----------------------
       1 | myGroup1         | M1              | f               |                |                     0 |                     6
       2 | myGroup2         | M1              | f               |                |                     0 |                    12
       3 | phil's group#3", | M1              | f               |                |                     0 |                    15
       4 | myGroup1         | M2              | f               |                |                     0 |                    21
       5 | myGroup1         | M3              | f               | Third mark set |                     0 |                    27
       6 | myGroup2         | M2              | f               |                |                     0 |                    33
       7 | myGroup2         | M3              | f               |                |                     0 |                    39
       8 | myGroup2         | RLBK_M2_%_START | f               |                |                     0 |                    45
       9 | myGroup2         | RLBK_M2_%_DONE  | f               |                |                     0 |                    51
      10 | myGroup2         | RLBK_M3_%_START | f               |                |                     0 |                    57
      11 | myGroup2         | RLBK_M3_%_DONE  | f               |                |                     0 |                    63
(11 rows)

-- log tables
select col11, col12, col13, emaj_verb, emaj_tuple, emaj_gid from emaj.mySchema1_myTbl1_log order by emaj_gid, emaj_tuple desc;
 col11 |   col12    | col13 | emaj_verb | emaj_tuple | emaj_gid 
-------+------------+-------+-----------+------------+----------
     1 | ABC        | \x0c  | INS       | NEW        |        1
     2 | ABC        | \x0c  | INS       | NEW        |        2
     3 | ABC        | \x0c  | INS       | NEW        |        3
     4 | ABC        | \x0c  | INS       | NEW        |        4
     5 | ABC        | \x0c  | INS       | NEW        |        5
     6 | ABC        | \x0c  | INS       | NEW        |        6
     7 | ABC        | \x0c  | INS       | NEW        |        7
     8 | ABC        | \x0c  | INS       | NEW        |        8
     9 | ABC        | \x0c  | INS       | NEW        |        9
    10 | ABC        | \x0c  | INS       | NEW        |       10
    11 | ABC        | \x0c  | INS       | NEW        |       11
     1 | ABC        | \x0c  | UPD       | OLD        |       12
     1 | ABC        | \x1c  | UPD       | NEW        |       12
     2 | ABC        | \x0c  | UPD       | OLD        |       13
     2 | ABC        | \x1c  | UPD       | NEW        |       13
     3 | ABC        | \x0c  | UPD       | OLD        |       14
     3 | ABC        | \x1c  | UPD       | NEW        |       14
    11 | ABC        | \x0c  | DEL       | OLD        |       17
    10 | ABC        | \x0c  | DEL       | OLD        |       35
     1 | ABC        | \x1c  | UPD       | OLD        |       37
     1 | DEF        | \x1c  | UPD       | NEW        |       37
     2 | ABC        | \x1c  | UPD       | OLD        |       38
     2 | DEF        | \x1c  | UPD       | NEW        |       38
(23 rows)

select col21, col22, col23, emaj_verb, emaj_tuple, emaj_gid from emaj.mySchema1_myTbl2_log order by emaj_gid, emaj_tuple desc;
 col21 | col22 |   col23    | emaj_verb | emaj_tuple | emaj_gid 
-------+-------+------------+-----------+------------+----------
     1 | ABC   | 12-31-2010 | INS       | NEW        |       15
     2 | DEF   |            | INS       | NEW        |       18
(2 rows)

select col20, col21, emaj_verb, emaj_tuple, emaj_gid from emaj.mySchema1_myTbl2b_log order by emaj_gid, emaj_tuple desc;
 col20 | col21 | emaj_verb | emaj_tuple | emaj_gid 
-------+-------+-----------+------------+----------
     1 |     1 | INS       | NEW        |       16
     2 |     2 | INS       | NEW        |       19
(2 rows)

select col31, col33, emaj_verb, emaj_tuple, emaj_gid from emaj."myschema1_myTbl3_log" order by emaj_gid, emaj_tuple desc;
 col31 | col33 | emaj_verb | emaj_tuple | emaj_gid 
-------+-------+-----------+------------+----------
     1 | 10.00 | INS       | NEW        |       20
     2 | 10.00 | INS       | NEW        |       21
     3 | 10.00 | INS       | NEW        |       22
     4 | 10.00 | INS       | NEW        |       23
     5 | 10.00 | INS       | NEW        |       24
     6 | 10.00 | INS       | NEW        |       25
     7 | 10.00 | INS       | NEW        |       26
     8 | 10.00 | INS       | NEW        |       27
     9 | 10.00 | INS       | NEW        |       28
    10 | 10.00 | INS       | NEW        |       29
(10 rows)

select col41, col42, col43, col44, col45, emaj_verb, emaj_tuple, emaj_gid from emaj.mySchema1_myTbl4_log order by emaj_gid, emaj_tuple desc;
 col41 | col42 | col43 | col44 |   col45    | emaj_verb | emaj_tuple | emaj_gid 
-------+-------+-------+-------+------------+-----------+------------+----------
     1 | FK... |     1 |     1 | ABC        | INS       | NEW        |       30
     2 | FK... |     1 |     1 | ABC        | INS       | NEW        |       31
     1 | FK... |     1 |     1 | ABC        | UPD       | OLD        |       32
     1 | FK... |     2 |     1 | ABC        | UPD       | NEW        |       32
     2 | FK... |     1 |     1 | ABC        | UPD       | OLD        |       33
     2 | FK... |     2 |     1 | ABC        | UPD       | NEW        |       33
     3 | FK... |     1 |    10 | ABC        | INS       | NEW        |       34
     3 | FK... |     1 |    10 | ABC        | DEL       | OLD        |       36
     1 | FK... |     2 |     1 | ABC        | UPD       | OLD        |       39
     1 | FK... |     2 |     1 |            | UPD       | NEW        |       39
     2 | FK... |     2 |     1 | ABC        | UPD       | OLD        |       40
     2 | FK... |     2 |     1 |            | UPD       | NEW        |       40
(12 rows)

--
select col11, col12, col13, emaj_verb, emaj_tuple, emaj_gid from emaj.mySchema2_myTbl1_log order by emaj_gid, emaj_tuple desc;
 col11 |   col12    | col13 | emaj_verb | emaj_tuple | emaj_gid 
-------+------------+-------+-----------+------------+----------
     1 | ABC        | \x0c  | INS       | NEW        |       41
     2 | ABC        | \x0c  | INS       | NEW        |       42
     3 | ABC        | \x0c  | INS       | NEW        |       43
     4 | ABC        | \x0c  | INS       | NEW        |       44
     5 | ABC        | \x0c  | INS       | NEW        |       45
     6 | ABC        | \x0c  | INS       | NEW        |       46
     7 | ABC        | \x0c  | INS       | NEW        |       47
     8 | ABC        | \x0c  | INS       | NEW        |       48
     9 | ABC        | \x0c  | INS       | NEW        |       49
    10 | ABC        | \x0c  | INS       | NEW        |       50
    11 | ABC        | \x0c  | INS       | NEW        |       51
     1 | ABC        | \x0c  | UPD       | OLD        |       52
     1 | ABC        | \x1c  | UPD       | NEW        |       52
     2 | ABC        | \x0c  | UPD       | OLD        |       53
     2 | ABC        | \x1c  | UPD       | NEW        |       53
     3 | ABC        | \x0c  | UPD       | OLD        |       54
     3 | ABC        | \x1c  | UPD       | NEW        |       54
    11 | ABC        | \x0c  | DEL       | OLD        |       56
(18 rows)

select col21, col22, col23, emaj_verb, emaj_tuple, emaj_gid from emaj.mySchema2_myTbl2_log order by emaj_gid, emaj_tuple desc;
 col21 | col22 |   col23    | emaj_verb | emaj_tuple | emaj_gid 
-------+-------+------------+-----------+------------+----------
     1 | ABC   | 01-01-2010 | INS       | NEW        |       55
     2 | DEF   |            | INS       | NEW        |       57
(2 rows)

select col31, col33, emaj_verb, emaj_tuple, emaj_gid from emaj."myschema2_myTbl3_log" order by emaj_gid, emaj_tuple desc;
 col31 | col33 | emaj_verb | emaj_tuple | emaj_gid 
-------+-------+-----------+------------+----------
     1 | 10.00 | INS       | NEW        |       58
     2 | 10.00 | INS       | NEW        |       59
     3 | 10.00 | INS       | NEW        |       60
     4 | 10.00 | INS       | NEW        |       61
     5 | 10.00 | INS       | NEW        |       62
     6 | 10.00 | INS       | NEW        |       63
     7 | 10.00 | INS       | NEW        |       64
     8 | 10.00 | INS       | NEW        |       65
     9 | 10.00 | INS       | NEW        |       66
    10 | 10.00 | INS       | NEW        |       67
(10 rows)

select col41, col42, col43, col44, col45, emaj_verb, emaj_tuple, emaj_gid from emaj.mySchema2_myTbl4_log order by emaj_gid, emaj_tuple desc;
 col41 | col42 | col43 | col44 |   col45    | emaj_verb | emaj_tuple | emaj_gid 
-------+-------+-------+-------+------------+-----------+------------+----------
     1 | FK... |     1 |     1 | ABC        | INS       | NEW        |       68
     2 | FK... |     1 |     1 | ABC        | INS       | NEW        |       69
     1 | FK... |     1 |     1 | ABC        | UPD       | OLD        |       70
     1 | FK... |     2 |     1 | ABC        | UPD       | NEW        |       70
     2 | FK... |     1 |     1 | ABC        | UPD       | OLD        |       71
     2 | FK... |     2 |     1 | ABC        | UPD       | NEW        |       71
     1 | FK... |     2 |     1 | ABC        | DEL       | OLD        |       72
     2 | FK... |     2 |     1 | ABC        | DEL       | OLD        |       73
     1 | FK... |     2 |     1 | ABC        | INS       | NEW        |       74
     2 | FK... |     2 |     1 | ABC        | INS       | NEW        |       75
(10 rows)

