-- alter.sql : test emaj_alter_group() and emaj_alter_groups() functions
--
-- set sequence restart value
alter sequence emaj.emaj_hist_hist_id_seq restart 6000;
alter sequence emaj.emaj_time_stamp_time_id_seq restart 6000;
alter sequence emaj.emaj_mark_mark_id_seq restart 6000;
alter sequence emaj.emaj_rlbk_rlbk_id_seq restart 6000;
-----------------------------
-- stop, reset and drop groups
-----------------------------
select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               7
(1 row)

select emaj.emaj_reset_group('myGroup1');
 emaj_reset_group 
------------------
                7
(1 row)

select emaj.emaj_drop_group('myGroup1');
 emaj_drop_group 
-----------------
               7
(1 row)

select emaj.emaj_force_drop_group('myGroup2');
 emaj_force_drop_group 
-----------------------
                     8
(1 row)

select emaj.emaj_stop_group('phil''s group#3",','Simple stop mark');
 emaj_stop_group 
-----------------
               4
(1 row)

select emaj.emaj_drop_group('phil''s group#3",');
 emaj_drop_group 
-----------------
               4
(1 row)

select emaj.emaj_force_stop_group('myGroup4');
 emaj_force_stop_group 
-----------------------
                     5
(1 row)

select emaj.emaj_drop_group('myGroup4');
 emaj_drop_group 
-----------------
               5
(1 row)

select emaj.emaj_force_stop_group('emptyGroup');
 emaj_force_stop_group 
-----------------------
                     0
(1 row)

select emaj.emaj_drop_group('emptyGroup');
 emaj_drop_group 
-----------------
               0
(1 row)

-----------------------------
-- emaj_alter_group() tests on IDLE groups
-----------------------------
select emaj.emaj_create_group('myGroup1');
NOTICE:  table "myschema1_myTbl3_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS "emajC"."myschema1_myTbl3_log""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_log_trg" for table "myschema1.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1."myTbl3""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for table "myschema1.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1."myTbl3""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  table "myschema1_mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl1_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_log_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  table "myschema1_mytbl4_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl4_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_log_trg" for table "myschema1.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl4"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for table "myschema1.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl4"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  table "myschema1_mytbl2_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl2_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_log_trg" for table "myschema1.mytbl2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl2"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for table "myschema1.mytbl2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl2"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
WARNING:  _create_tbl: The table "myschema1.mytbl2" has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  table "myschema1_mytbl2b_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emajb.myschema1_mytbl2b_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_log_trg" for table "myschema1.mytbl2b" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl2b"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for table "myschema1.mytbl2b" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl2b"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
 emaj_create_group 
-------------------
                 7
(1 row)

select emaj.emaj_create_group('myGroup2');
NOTICE:  table "myschema2_mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema2_mytbl1_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_log_trg" for table "myschema2.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for table "myschema2.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  table "myschema2_mytbl2_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema2_mytbl2_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_log_trg" for table "myschema2.mytbl2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2.mytbl2"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for table "myschema2.mytbl2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2.mytbl2"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  table "myschema2_myTbl3_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS "emajC"."myschema2_myTbl3_log""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_log_trg" for table "myschema2.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2."myTbl3""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for table "myschema2.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2."myTbl3""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  table "myschema2_mytbl4_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema2_mytbl4_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_log_trg" for table "myschema2.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2.mytbl4"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for table "myschema2.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2.mytbl4"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  table "otherPrefix4mytbl5_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj."otherPrefix4mytbl5_log""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_log_trg" for table "myschema2.mytbl5" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2.mytbl5"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for table "myschema2.mytbl5" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2.mytbl5"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  table "myschema2_mytbl6_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema2_mytbl6_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_log_trg" for table "myschema2.mytbl6" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2.mytbl6"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for table "myschema2.mytbl6" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2.mytbl6"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups (array[v_groupName])"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 90 at PERFORM
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups (array[v_groupName])"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 90 at PERFORM
 emaj_create_group 
-------------------
                 8
(1 row)

select emaj.emaj_create_group('emptyGroup',true,true);
 emaj_create_group 
-------------------
                 0
(1 row)

select emaj.emaj_create_group('myGroup4');
NOTICE:  table "myschema4_mypartp1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema4_mypartp1_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_log_trg" for table "myschema4.mypartp1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema4.mypartp1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for table "myschema4.mypartp1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema4.mypartp1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  table "myschema4_mypartp2_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema4_mypartp2_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_log_trg" for table "myschema4.mypartp2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema4.mypartp2"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for table "myschema4.mypartp2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema4.mypartp2"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  table "myschema4_mytblc1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema4_mytblc1_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_log_trg" for table "myschema4.mytblc1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema4.mytblc1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for table "myschema4.mytblc1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema4.mytblc1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  table "myschema4_mytblc2_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema4_mytblc2_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_log_trg" for table "myschema4.mytblc2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema4.mytblc2"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for table "myschema4.mytblc2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema4.mytblc2"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  table "myschema4_mytblm_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema4_mytblm_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_log_trg" for table "myschema4.mytblm" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema4.mytblm"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for table "myschema4.mytblm" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema4.mytblm"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
WARNING:  _create_tbl: The table "myschema4.mytblm" has triggers (mytblm_insert_trigger). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 70 at PERFORM
 emaj_create_group 
-------------------
                 5
(1 row)

-- unknown group
select emaj.emaj_alter_group(NULL);
ERROR:  _alter_groups: The group "<NULL>" does not exist.
CONTEXT:  PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
select emaj.emaj_alter_group('unknownGroup');
ERROR:  _alter_groups: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
-- group in logging state (2 tables need to be repaired)
begin;
  select emaj.emaj_start_group('myGroup1','');
 emaj_start_group 
------------------
                7
(1 row)

  select emaj.emaj_disable_protection_by_event_triggers();
 emaj_disable_protection_by_event_triggers 
-------------------------------------------
                                         2
(1 row)

  drop table emaj.myschema1_mytbl1_log;
  drop table emaj.myschema1_mytbl4_log;
  select emaj.emaj_enable_protection_by_event_triggers();
 emaj_enable_protection_by_event_triggers 
------------------------------------------
                                        2
(1 row)

  select emaj.emaj_alter_group('myGroup1');
ERROR:  _alter_plan: The groups "myGroup1" cannot be altered because they are in LOGGING state.
CONTEXT:  SQL statement "SELECT emaj._alter_plan(v_groupNames, v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 45 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
rollback;
-- alter a group with a table now already belonging to another group
begin;
  insert into emaj.emaj_group_def values ('myGroup1','myschema2','mytbl1');
  select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_groups_content: Error, the table or sequence myschema2.mytbl1 belongs to another group (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
WARNING:  _check_groups_content: Error, the emaj prefix "myschema2_mytbl1" is already used.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
rollback;
-- schema suffix cannot be changed for sequence
begin;
  update emaj.emaj_group_def set grpdef_log_schema_suffix = 'dummy' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the secondary log schema suffix is not NULL.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
rollback;
-- object names prefix cannot be changed for sequence
begin;
  update emaj.emaj_group_def set grpdef_emaj_names_prefix = 'dummy' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the emaj names prefix is not NULL.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
rollback;
-- log tablespace cannot be changed for sequence
begin;
  update emaj.emaj_group_def set grpdef_log_dat_tsp = 'b' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the data log tablespace is not NULL.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
rollback;
begin;
  update emaj.emaj_group_def set grpdef_log_idx_tsp = 'b' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the index log tablespace is not NULL.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
rollback;
-- dropped application table
begin;
  select emaj.emaj_disable_protection_by_event_triggers();
 emaj_disable_protection_by_event_triggers 
-------------------------------------------
                                         2
(1 row)

  drop table myschema1.mytbl2b;
  select emaj.emaj_enable_protection_by_event_triggers();
 emaj_enable_protection_by_event_triggers 
------------------------------------------
                                        2
(1 row)

  select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_groups_content: Error, the table or sequence myschema1.mytbl2b does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
WARNING:  _check_groups_content: Error, the table or sequence myschema1.mytbl2b_col20_seq does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
rollback;
-- should be OK
-- nothing to change
select emaj.emaj_alter_group('emptyGroup');
 emaj_alter_group 
------------------
                0
(1 row)

select group_name, group_is_logging, group_is_rlbk_protected, group_nb_table, group_nb_sequence, group_is_rollbackable,
       group_creation_time_id, group_last_alter_time_id, group_comment
 from emaj.emaj_group where group_name = 'myGroup1';
 group_name | group_is_logging | group_is_rlbk_protected | group_nb_table | group_nb_sequence | group_is_rollbackable | group_creation_time_id | group_last_alter_time_id | group_comment 
------------+------------------+-------------------------+----------------+-------------------+-----------------------+------------------------+--------------------------+---------------
 myGroup1   | f                | f                       |              5 |                 2 | t                     |                   6002 |                          | 
(1 row)

select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select group_name, group_is_logging, group_is_rlbk_protected, group_nb_table, group_nb_sequence, group_is_rollbackable,
       group_creation_time_id, group_last_alter_time_id, group_comment
 from emaj.emaj_group where group_name = 'myGroup1';
 group_name | group_is_logging | group_is_rlbk_protected | group_nb_table | group_nb_sequence | group_is_rollbackable | group_creation_time_id | group_last_alter_time_id | group_comment 
------------+------------------+-------------------------+----------------+-------------------+-----------------------+------------------------+--------------------------+---------------
 myGroup1   | f                | f                       |              5 |                 2 | t                     |                   6002 |                     6009 | 
(1 row)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname 
---------
 emaj
 emajC
 emajb
(3 rows)

-- only 3 tables to remove (+ log schemas emajb)
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl4';
select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_fk_groups: The table "myschema1.mytbl2" is referenced by the foreign key "mytbl4_col43_fkey" on the table "myschema1.mytbl4" that is outside the groups (myGroup1).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema1.mytbl1" is referenced by the foreign key "mytbl4_col44_fkey" on the table "myschema1.mytbl4" that is outside the groups (myGroup1).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                4
(1 row)

select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence 
----------------+-------------------
              2 |                 2
(1 row)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname 
---------
 emaj
 emajC
(2 rows)

-- only 1 sequence to remove
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_fk_groups: The table "myschema1.mytbl2" is referenced by the foreign key "mytbl4_col43_fkey" on the table "myschema1.mytbl4" that is outside the groups (myGroup1).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema1.mytbl1" is referenced by the foreign key "mytbl4_col44_fkey" on the table "myschema1.mytbl4" that is outside the groups (myGroup1).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                3
(1 row)

select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence 
----------------+-------------------
              2 |                 1
(1 row)

-- 3 tables to add (+ log schemas emajb)
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2b',NULL,'b',NULL,'tsp log''2','tsp log''2');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3',10,'C',NULL,'tsplog1');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl4',20,NULL,NULL,'tsplog1','tsp log''2');
select emaj.emaj_alter_group('myGroup1');
NOTICE:  table "myschema1_myTbl3_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS "emajC"."myschema1_myTbl3_log""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for table "myschema1.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1."myTbl3""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for table "myschema1.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1."myTbl3""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  table "myschema1_mytbl4_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl4_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for table "myschema1.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl4"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for table "myschema1.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl4"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  table "myschema1_mytbl2b_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emajb.myschema1_mytbl2b_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for table "myschema1.mytbl2b" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl2b"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for table "myschema1.mytbl2b" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl2b"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                6
(1 row)

select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence 
----------------+-------------------
              5 |                 1
(1 row)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname 
---------
 emaj
 emajC
 emajb
(3 rows)

-- only 1 sequence to add
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3_col31_seq',1);
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence 
----------------+-------------------
              5 |                 2
(1 row)

-- only change the log schema
update emaj.emaj_group_def set grpdef_log_schema_suffix = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select nspname from pg_namespace, pg_class where relnamespace = pg_namespace.oid and relname = 'myschema1_myTbl3_log';
 nspname 
---------
 emaj
(1 row)

update emaj.emaj_group_def set grpdef_log_schema_suffix = 'C' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select nspname from pg_namespace, pg_class where relnamespace = pg_namespace.oid and relname = 'myschema1_myTbl3_log';
 nspname 
---------
 emajC
(1 row)

-- only change the emaj_names_prefix for 1 table
update emaj.emaj_group_def set grpdef_emaj_names_prefix = 's1t3' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select count(*) from "emajC".s1t3_log;
 count 
-------
     0
(1 row)

update emaj.emaj_group_def set grpdef_emaj_names_prefix = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select count(*) from "emajC"."myschema1_myTbl3_log";
 count 
-------
     0
(1 row)

-- only change the log data tablespace for 1 table
update emaj.emaj_group_def set grpdef_log_dat_tsp = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema1_mytbl2b_log';
 spcname 
---------
(0 rows)

update emaj.emaj_group_def set grpdef_log_dat_tsp = 'tsp log''2' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema1_mytbl2b_log';
  spcname  
-----------
 tsp log'2
(1 row)

-- change the log data tablespace for all tables of a group
update emaj.emaj_group_def set grpdef_log_dat_tsp = case when grpdef_log_dat_tsp is NULL then 'tsplog1' when grpdef_log_dat_tsp = 'tsplog1' then 'tsp log''2' else NULL end where grpdef_schema = 'myschema1' and grpdef_tblseq not like '%seq';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

update emaj.emaj_group_def set grpdef_log_dat_tsp = case when grpdef_log_dat_tsp = 'tsplog1' then NULL when grpdef_log_dat_tsp = 'tsp log''2' then 'tsplog1' else 'tsp log''2' end where grpdef_schema = 'myschema1' and grpdef_tblseq not like '%seq';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

-- only change the log index tablespace, using a session default tablespace
update emaj.emaj_group_def set grpdef_log_idx_tsp = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
set default_tablespace = tspemaj_renamed;
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

reset default_tablespace;
select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema1_mytbl2b_log_idx';
     spcname     
-----------------
 tspemaj_renamed
(1 row)

update emaj.emaj_group_def set grpdef_log_idx_tsp = 'tsp log''2' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema1_mytbl2b_log_idx';
  spcname  
-----------
 tsp log'2
(1 row)

-- only change the priority
update emaj.emaj_group_def set grpdef_priority = 30 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1' and upper_inf(rel_time_range);
 rel_priority 
--------------
           30
(1 row)

update emaj.emaj_group_def set grpdef_priority = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1' and upper_inf(rel_time_range);
 rel_priority 
--------------
             
(1 row)

update emaj.emaj_group_def set grpdef_priority = 20 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1' and upper_inf(rel_time_range);
 rel_priority 
--------------
           20
(1 row)

-- change the table structure
alter table myschema1.mytbl1 add column newcol int;
select emaj.emaj_alter_group('myGroup1');
NOTICE:  table "myschema1_mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl1_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

alter table myschema1.mytbl1 rename newcol to newcol2;
select emaj.emaj_alter_group('myGroup1');
NOTICE:  table "myschema1_mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl1_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

alter table myschema1.mytbl1 alter column newcol2 type bigint;
select emaj.emaj_alter_group('myGroup1');
NOTICE:  table "myschema1_mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl1_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

alter table myschema1.mytbl1 alter column newcol2 set default 0;
-- NB: changing default has no impact on emaj component 
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

alter table myschema1.mytbl1 drop column newcol2;
select emaj.emaj_alter_group('myGroup1');
NOTICE:  table "myschema1_mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl1_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

-- rename a table and/or change its schema
alter table myschema1.mytbl1 rename to mytbl1_new_name;
update emaj.emaj_group_def set grpdef_tblseq = 'mytbl1_new_name' 
  where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
NOTICE:  drop cascades to trigger emaj_log_trg on table myschema1.mytbl1_new_name
CONTEXT:  SQL statement "DROP FUNCTION IF EXISTS emaj.myschema1_mytbl1_log_fnct() CASCADE"
PL/pgSQL function emaj._drop_tbl(emaj.emaj_relation) line 19 at EXECUTE statement
SQL statement "SELECT emaj._drop_tbl(emaj.emaj_relation.*) FROM emaj.emaj_relation
        WHERE rel_schema = r_plan.altr_schema AND rel_tblseq = r_plan.altr_tblseq AND upper_inf(rel_time_range)"
PL/pgSQL function emaj._remove_tbl(emaj.emaj_alter_plan,bigint) line 14 at PERFORM
SQL statement "SELECT emaj._remove_tbl(r_plan, v_timeId)"
PL/pgSQL function emaj._alter_exec(bigint) line 25 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  table "myschema1_mytbl1_new_name_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl1_new_name_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for table "myschema1.mytbl1_new_name" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1_new_name"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

alter table myschema1.mytbl1_new_name set schema public;
update emaj.emaj_group_def set grpdef_schema = 'public'
  where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1_new_name';
select emaj.emaj_alter_group('myGroup1');
NOTICE:  drop cascades to trigger emaj_log_trg on table mytbl1_new_name
CONTEXT:  SQL statement "DROP FUNCTION IF EXISTS emaj.myschema1_mytbl1_new_name_log_fnct() CASCADE"
PL/pgSQL function emaj._drop_tbl(emaj.emaj_relation) line 19 at EXECUTE statement
SQL statement "SELECT emaj._drop_tbl(emaj.emaj_relation.*) FROM emaj.emaj_relation
        WHERE rel_schema = r_plan.altr_schema AND rel_tblseq = r_plan.altr_tblseq AND upper_inf(rel_time_range)"
PL/pgSQL function emaj._remove_tbl(emaj.emaj_alter_plan,bigint) line 14 at PERFORM
SQL statement "SELECT emaj._remove_tbl(r_plan, v_timeId)"
PL/pgSQL function emaj._alter_exec(bigint) line 25 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  table "public_mytbl1_new_name_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.public_mytbl1_new_name_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for table "public.mytbl1_new_name" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON public.mytbl1_new_name"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

alter table public.mytbl1_new_name rename to mytbl1;
alter table public.mytbl1 set schema myschema1;
update emaj.emaj_group_def set grpdef_schema = 'myschema1', grpdef_tblseq = 'mytbl1'
  where grpdef_schema = 'public' and grpdef_tblseq = 'mytbl1_new_name';
-- the next call gives a useless mark name parameter (the group is in idle state)
select emaj.emaj_alter_group('myGroup1','useless_mark_name');
NOTICE:  drop cascades to trigger emaj_log_trg on table myschema1.mytbl1
CONTEXT:  SQL statement "DROP FUNCTION IF EXISTS emaj.public_mytbl1_new_name_log_fnct() CASCADE"
PL/pgSQL function emaj._drop_tbl(emaj.emaj_relation) line 19 at EXECUTE statement
SQL statement "SELECT emaj._drop_tbl(emaj.emaj_relation.*) FROM emaj.emaj_relation
        WHERE rel_schema = r_plan.altr_schema AND rel_tblseq = r_plan.altr_tblseq AND upper_inf(rel_time_range)"
PL/pgSQL function emaj._remove_tbl(emaj.emaj_alter_plan,bigint) line 14 at PERFORM
SQL statement "SELECT emaj._remove_tbl(r_plan, v_timeId)"
PL/pgSQL function emaj._alter_exec(bigint) line 25 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  table "myschema1_mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl1_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

-- missing emaj components
select emaj.emaj_disable_protection_by_event_triggers();
 emaj_disable_protection_by_event_triggers 
-------------------------------------------
                                         2
(1 row)

drop trigger emaj_log_trg on myschema1.mytbl1;
select emaj.emaj_alter_group('myGroup1');
NOTICE:  trigger "emaj_log_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._drop_tbl(emaj.emaj_relation) line 15 at EXECUTE statement
SQL statement "SELECT emaj._drop_tbl(emaj.emaj_relation.*) FROM emaj.emaj_relation
              WHERE rel_schema = r_plan.altr_schema AND rel_tblseq = r_plan.altr_tblseq AND upper_inf(rel_time_range)"
PL/pgSQL function emaj._alter_exec(bigint) line 54 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  table "myschema1_mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl1_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

drop function emaj.myschema1_mytbl1_log_fnct() cascade;
NOTICE:  drop cascades to trigger emaj_log_trg on table myschema1.mytbl1
select emaj.emaj_alter_group('myGroup1');
NOTICE:  trigger "emaj_log_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._drop_tbl(emaj.emaj_relation) line 15 at EXECUTE statement
SQL statement "SELECT emaj._drop_tbl(emaj.emaj_relation.*) FROM emaj.emaj_relation
              WHERE rel_schema = r_plan.altr_schema AND rel_tblseq = r_plan.altr_tblseq AND upper_inf(rel_time_range)"
PL/pgSQL function emaj._alter_exec(bigint) line 54 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  function emaj.myschema1_mytbl1_log_fnct() does not exist, skipping
CONTEXT:  SQL statement "DROP FUNCTION IF EXISTS emaj.myschema1_mytbl1_log_fnct() CASCADE"
PL/pgSQL function emaj._drop_tbl(emaj.emaj_relation) line 19 at EXECUTE statement
SQL statement "SELECT emaj._drop_tbl(emaj.emaj_relation.*) FROM emaj.emaj_relation
              WHERE rel_schema = r_plan.altr_schema AND rel_tblseq = r_plan.altr_tblseq AND upper_inf(rel_time_range)"
PL/pgSQL function emaj._alter_exec(bigint) line 54 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  table "myschema1_mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl1_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

drop table emaj.myschema1_mytbl1_log;
select emaj.emaj_alter_group('myGroup1');
NOTICE:  table "myschema1_mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl1_log CASCADE"
PL/pgSQL function emaj._drop_tbl(emaj.emaj_relation) line 23 at EXECUTE statement
SQL statement "SELECT emaj._drop_tbl(emaj.emaj_relation.*) FROM emaj.emaj_relation
              WHERE rel_schema = r_plan.altr_schema AND rel_tblseq = r_plan.altr_tblseq AND upper_inf(rel_time_range)"
PL/pgSQL function emaj._alter_exec(bigint) line 54 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  table "myschema1_mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema1_mytbl1_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for table "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 57 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

select emaj.emaj_enable_protection_by_event_triggers();
 emaj_enable_protection_by_event_triggers 
------------------------------------------
                                        2
(1 row)

-- multiple emaj_alter_group() on a logging group => fails
-- this test is commented because the generated error message differs from one run to another
--begin;
--  select emaj.emaj_start_group('myGroup4');
--  select emaj.emaj_alter_group('myGroup4');
--  select emaj.emaj_alter_group('myGroup4');
--rollback;
-----------------------------
-- emaj_alter_groups() tests on IDLE groups
-----------------------------
-- unknown groups
select emaj.emaj_alter_groups('{NULL,"unknownGroup"}');
ERROR:  _alter_groups: The group "<NULL>" does not exist.
CONTEXT:  PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
select emaj.emaj_alter_groups('{"myGroup1","unknownGroup"}');
ERROR:  _alter_groups: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
-- groups in logging state
begin;
  select emaj.emaj_start_groups('{"myGroup1","myGroup2"}','');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._start_groups(text[],text,boolean,boolean) line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function emaj.emaj_start_groups(text[],text,boolean) line 16 at SQL statement
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._start_groups(text[],text,boolean,boolean) line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function emaj.emaj_start_groups(text[],text,boolean) line 16 at SQL statement
 emaj_start_groups 
-------------------
                15
(1 row)

  select emaj.emaj_disable_protection_by_event_triggers();
 emaj_disable_protection_by_event_triggers 
-------------------------------------------
                                         2
(1 row)

  drop table emaj.myschema1_mytbl1_log;
  drop table emaj.myschema2_mytbl1_log;
  select emaj.emaj_enable_protection_by_event_triggers();
 emaj_enable_protection_by_event_triggers 
------------------------------------------
                                        2
(1 row)

  select emaj.emaj_alter_groups('{"myGroup2","myGroup1","myGroup4"}');
ERROR:  _alter_plan: The groups "myGroup1, myGroup2" cannot be altered because they are in LOGGING state.
CONTEXT:  SQL statement "SELECT emaj._alter_plan(v_groupNames, v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 45 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
rollback;
-- alter groups with a table now already belonging to another group
begin;
  insert into emaj.emaj_group_def values ('myGroup1','myschema2','mytbl1');
  select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_groups_content: Error, the emaj prefix "myschema2_mytbl1" is configured for several tables in the groups.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
rollback;
-- schema suffix cannot be changed for sequence (this covers other cases of forbidden changes for sequences)
begin;
  update emaj.emaj_group_def set grpdef_log_schema_suffix = 'dummy' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_groups_content: Error, for the sequence myschema1."myTbl3_col31_seq", the secondary log schema suffix is not NULL.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
rollback;
-- a PRIMARY KEY is missing
begin;
  alter table myschema1.mytbl4 drop constraint mytbl4_pkey;
  select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_groups_content: Error, the table myschema1.mytbl4 has no PRIMARY KEY.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
ERROR:  _check_groups_content: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  SQL statement "SELECT emaj._check_groups_content(v_groupNames, NULL)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 24 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
rollback;
-- should be OK
-- 3 tables and 1 sequence to remove (+ log schemas emajb)
select group_name, group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1' or group_name = 'myGroup2' order by 1;
 group_name | group_nb_table | group_nb_sequence 
------------+----------------+-------------------
 myGroup1   |              5 |                 2
 myGroup2   |              6 |                 2
(2 rows)

delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema2' and grpdef_tblseq = 'mytbl4';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl2" is referenced by the foreign key "mytbl4_col43_fkey" on the table "myschema2.mytbl4" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl1" is referenced by the foreign key "mytbl4_col44_fkey" on the table "myschema2.mytbl4" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                11
(1 row)

select group_name, group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1' or group_name = 'myGroup2' order by 1;
 group_name | group_nb_table | group_nb_sequence 
------------+----------------+-------------------
 myGroup1   |              3 |                 1
 myGroup2   |              5 |                 2
(2 rows)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname 
---------
 emaj
 emajC
(2 rows)

-- 3 tables and 1 sequence to add (+ log schemas emajb)
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2b',NULL,'b',NULL,'tsp log''2','tsp log''2');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3',10,'C',NULL,'tsplog1');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl4',NULL,NULL,'myschema2_mytbl4');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3_col31_seq',1);
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
NOTICE:  table "myschema1_myTbl3_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS "emajC"."myschema1_myTbl3_log""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for table "myschema1.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1."myTbl3""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for table "myschema1.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1."myTbl3""
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
NOTICE:  table "myschema1_mytbl2b_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emajb.myschema1_mytbl2b_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for table "myschema1.mytbl2b" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl2b"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for table "myschema1.mytbl2b" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl2b"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
NOTICE:  table "myschema2_mytbl4_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj.myschema2_mytbl4_log"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 66 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for table "myschema2.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2.mytbl4"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 120 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for table "myschema2.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2.mytbl4"
PL/pgSQL function emaj._create_tbl(emaj.emaj_group_def,bigint,boolean) line 127 at EXECUTE statement
SQL statement "SELECT emaj._create_tbl(r_grpdef, v_timeId, v_isRollbackable)"
PL/pgSQL function emaj._alter_exec(bigint) line 136 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 47 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                15
(1 row)

select group_name, group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1' or group_name = 'myGroup2' order by 1;
 group_name | group_nb_table | group_nb_sequence 
------------+----------------+-------------------
 myGroup1   |              5 |                 2
 myGroup2   |              6 |                 2
(2 rows)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname 
---------
 emaj
 emajC
 emajb
(3 rows)

-- change a log schema and the emaj_names_prefix for 2 tables
update emaj.emaj_group_def set grpdef_log_schema_suffix = NULL where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3';
update emaj.emaj_group_def set grpdef_emaj_names_prefix = 's1t3' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                15
(1 row)

select nspname from pg_namespace, pg_class where relnamespace = pg_namespace.oid and relname = 'myschema2_myTbl3_log';
 nspname 
---------
 emaj
(1 row)

select count(*) from "emajC".s1t3_log;
 count 
-------
     0
(1 row)

--
update emaj.emaj_group_def set grpdef_log_schema_suffix = 'C' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3';
update emaj.emaj_group_def set grpdef_emaj_names_prefix = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                15
(1 row)

select nspname from pg_namespace, pg_class where relnamespace = pg_namespace.oid and relname = 'myschema2_myTbl3_log';
 nspname 
---------
 emajC
(1 row)

select count(*) from "emajC"."myschema1_myTbl3_log";
 count 
-------
     0
(1 row)

-- only change the log data tablespace for 1 table, the log index tablespace for another table and the priority for a third one
update emaj.emaj_group_def set grpdef_log_dat_tsp = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
update emaj.emaj_group_def set grpdef_log_idx_tsp = 'tsplog1' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'mytbl6';
update emaj.emaj_group_def set grpdef_priority = 30 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
set default_tablespace = tspemaj_renamed;
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                15
(1 row)

reset default_tablespace;
select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema1_mytbl2b_log';
     spcname     
-----------------
 tspemaj_renamed
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema2_mytbl6_log_idx';
 spcname 
---------
 tsplog1
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1' and upper_inf(rel_time_range);
 rel_priority 
--------------
           30
(1 row)

--
update emaj.emaj_group_def set grpdef_log_dat_tsp = 'tsp log''2' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
update emaj.emaj_group_def set grpdef_log_idx_tsp = NULL where grpdef_schema = 'myschema2' and grpdef_tblseq = 'mytbl6';
update emaj.emaj_group_def set grpdef_priority = 20 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                15
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema1_mytbl2b_log';
  spcname  
-----------
 tsp log'2
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'myschema2_mytbl6_log_idx';
 spcname 
---------
(0 rows)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1' and upper_inf(rel_time_range);
 rel_priority 
--------------
           20
(1 row)

-- move 1 table and 1 sequence from a group to another
update emaj.emaj_group_def set grpdef_group = 'myGroup1' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3';
update emaj.emaj_group_def set grpdef_group = 'myGroup1' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3_col31_seq';
select rel_group, count(*) from emaj.emaj_relation where rel_group like 'myGroup%' and upper_inf(rel_time_range) group by 1 order by 1;
 rel_group | count 
-----------+-------
 myGroup1  |     7
 myGroup2  |     8
 myGroup4  |     5
(3 rows)

select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                15
(1 row)

select rel_group, count(*) from emaj.emaj_relation where rel_group like 'myGroup%' and upper_inf(rel_time_range) group by 1 order by 1;
 rel_group | count 
-----------+-------
 myGroup1  |     9
 myGroup2  |     6
 myGroup4  |     5
(3 rows)

update emaj.emaj_group_def set grpdef_group = 'myGroup2' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3';
update emaj.emaj_group_def set grpdef_group = 'myGroup2' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3_col31_seq';
-- the next call gives a useless mark name parameter (the group is in idle state)
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}','useless_mark_name_%');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                15
(1 row)

select rel_group, count(*) from emaj.emaj_relation where rel_group like 'myGroup%' and upper_inf(rel_time_range) group by 1 order by 1;
 rel_group | count 
-----------+-------
 myGroup1  |     7
 myGroup2  |     8
 myGroup4  |     5
(3 rows)

-- one group is now empty
begin;
  delete from emaj.emaj_group_def where grpdef_group = 'myGroup2';
  select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
 emaj_alter_groups 
-------------------
                 7
(1 row)

rollback;
-----------------------------
-- emaj_alter_group() and emaj_alter_groups() tests on LOGGING groups with rollbacks
-----------------------------
select emaj.emaj_start_groups('{"myGroup1","myGroup2"}','Mk1');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._start_groups(text[],text,boolean,boolean) line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function emaj.emaj_start_groups(text[],text,boolean) line 16 at SQL statement
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._start_groups(text[],text,boolean,boolean) line 36 at PERFORM
SQL statement "SELECT emaj._start_groups(emaj._check_names_array(v_groupNames,'group'), v_mark, true, v_resetLog)"
PL/pgSQL function emaj.emaj_start_groups(text[],text,boolean) line 16 at SQL statement
 emaj_start_groups 
-------------------
                15
(1 row)

-- change the priority
update emaj.emaj_group_def set grpdef_priority = 30 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1','Priority Changed');
 emaj_alter_group 
------------------
                7
(1 row)

-- change the emaj names prefix, the log schema, the log data tablespace and the log index tablespace for different tables
update emaj.emaj_group_def set grpdef_log_schema_suffix = NULL where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3';
update emaj.emaj_group_def set grpdef_emaj_names_prefix = 's1t3' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
update emaj.emaj_group_def set grpdef_log_dat_tsp = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
update emaj.emaj_group_def set grpdef_log_idx_tsp = 'tsplog1' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'mytbl6';
set default_tablespace = tspemaj_renamed;
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}','Attributes_changed');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                15
(1 row)

reset default_tablespace;
-- set an intermediate mark
select emaj.emaj_set_mark_groups('{"myGroup1","myGroup2"}','Mk2');
 emaj_set_mark_groups 
----------------------
                   15
(1 row)

-- change the priority back
update emaj.emaj_group_def set grpdef_priority = 20 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_groups(array['myGroup1','myGroup2']);
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                15
(1 row)

-- change the other attributes back
update emaj.emaj_group_def set grpdef_log_schema_suffix = 'C' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3';
update emaj.emaj_group_def set grpdef_emaj_names_prefix = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
update emaj.emaj_group_def set grpdef_log_dat_tsp = 'tsp log''2' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
update emaj.emaj_group_def set grpdef_log_idx_tsp = NULL where grpdef_schema = 'myschema2' and grpdef_tblseq = 'mytbl6';
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 57 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                15
(1 row)

-- remove a sequence
--TODO: remove the transaction when adding a sequence will be possible and move the rollbacks later
select emaj.emaj_set_mark_group('myGroup1','Mk2b');
 emaj_set_mark_group 
---------------------
                   7
(1 row)

begin;
  delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

  select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence 
----------------+-------------------
              5 |                 1
(1 row)

  select * from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'myTbl3_col31_seq';
 rel_schema |    rel_tblseq    | rel_time_range | rel_group | rel_kind | rel_priority | rel_log_schema | rel_log_table | rel_log_dat_tsp | rel_log_index | rel_log_idx_tsp | rel_log_sequence | rel_log_function | rel_sql_columns | rel_sql_pk_columns | rel_sql_pk_eq_conditions 
------------+------------------+----------------+-----------+----------+--------------+----------------+---------------+-----------------+---------------+-----------------+------------------+------------------+-----------------+--------------------+--------------------------
 myschema1  | myTbl3_col31_seq | [6041,6056)    | myGroup1  | S        |            1 |                |               |                 |               |                 |                  |                  |                 |                    | 
(1 row)

  select * from emaj.emaj_verify_all();
  emaj_verify_all  
-------------------
 No error detected
(1 row)

  --testing snap and sql generation
\! mkdir -p /tmp/emaj_test/alter
\! rm -R /tmp/emaj_test/alter
\! mkdir /tmp/emaj_test/alter
  select emaj.emaj_snap_group('myGroup1','/tmp/emaj_test/alter','');
 emaj_snap_group 
-----------------
               6
(1 row)

\! ls /tmp/emaj_test/alter
_INFO
myschema1_mytbl1.snap
myschema1_mytbl2b_col20_seq.snap
myschema1_mytbl2b.snap
myschema1_mytbl2.snap
myschema1_myTbl3.snap
myschema1_mytbl4.snap
\! rm -R /tmp/emaj_test/alter/*
  select emaj.emaj_snap_log_group('myGroup1','Mk1',NULL,'/tmp/emaj_test/alter',NULL);
 emaj_snap_log_group 
---------------------
                   6
(1 row)

\! cat /tmp/emaj_test/alter/myGroup1_sequences_at_Mk1
myschema1	mytbl2b_col20_seq	6049	3	1	1	9223372036854775807	1	1	f	f
\! rm -R /tmp/emaj_test/alter/*
  savepoint gen;
    select emaj.emaj_gen_sql_group('myGroup1', NULL, NULL, '/tmp/emaj_test/alter/myFile',array['myschema1.myTbl3_col31_seq']);
ERROR:  _gen_sql_groups: Some tables and/or sequences (myschema1.myTbl3_col31_seq) do not belong to any of the selected tables groups.
CONTEXT:  SQL statement "SELECT emaj._gen_sql_groups(CASE WHEN v_groupName IS NOT NULL THEN array[v_groupName] ELSE NULL END, v_firstMark, v_lastMark, v_location, v_tblseqs)"
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 22 at SQL statement
  rollback to gen;
\! rm -R /tmp/emaj_test
  -- testing rollback
--select * from emaj.emaj_alter_plan where altr_time_id = (select max(altr_time_id) from emaj.emaj_alter_plan);
  select * from emaj.emaj_logged_rollback_group('myGroup1','Mk2b',true) order by 1,2;
 rlbk_severity |                                       rlbk_message                                       
---------------+------------------------------------------------------------------------------------------
 Notice        | 0 / 5 tables effectively processed.
 Notice        | 1 sequences processed.
 Warning       | The sequence myschema1."myTbl3_col31_seq" has been left unchanged (not in group anymore)
(3 rows)

  select * from emaj.emaj_rollback_group('myGroup1','Mk2b',true) order by 1,2;
 rlbk_severity |                                       rlbk_message                                       
---------------+------------------------------------------------------------------------------------------
 Notice        | 0 / 5 tables effectively processed.
 Notice        | 1 sequences processed.
 Warning       | The sequence myschema1."myTbl3_col31_seq" has been left unchanged (not in group anymore)
(3 rows)

--select * from emaj.emaj_alter_plan where altr_time_id = (select max(altr_time_id) from emaj.emaj_alter_plan);
  savepoint svp1;
  -- testing group's reset
  select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               6
(1 row)

  select * from emaj.emaj_relation where rel_group = 'myGroup1' and not upper_inf(rel_time_range);
 rel_schema |    rel_tblseq    | rel_time_range | rel_group | rel_kind | rel_priority | rel_log_schema | rel_log_table | rel_log_dat_tsp | rel_log_index | rel_log_idx_tsp | rel_log_sequence | rel_log_function | rel_sql_columns | rel_sql_pk_columns | rel_sql_pk_eq_conditions 
------------+------------------+----------------+-----------+----------+--------------+----------------+---------------+-----------------+---------------+-----------------+------------------+------------------+-----------------+--------------------+--------------------------
 myschema1  | myTbl3_col31_seq | [6041,6056)    | myGroup1  | S        |            1 |                |               |                 |               |                 |                  |                  |                 |                    | 
(1 row)

  select emaj.emaj_reset_group('myGroup1');
 emaj_reset_group 
------------------
                6
(1 row)

  select * from emaj.emaj_relation where rel_group = 'myGroup1' and not upper_inf(rel_time_range);
 rel_schema | rel_tblseq | rel_time_range | rel_group | rel_kind | rel_priority | rel_log_schema | rel_log_table | rel_log_dat_tsp | rel_log_index | rel_log_idx_tsp | rel_log_sequence | rel_log_function | rel_sql_columns | rel_sql_pk_columns | rel_sql_pk_eq_conditions 
------------+------------+----------------+-----------+----------+--------------+----------------+---------------+-----------------+---------------+-----------------+------------------+------------------+-----------------+--------------------+--------------------------
(0 rows)

  rollback to svp1;
  -- testing marks deletion
  select emaj.emaj_set_mark_group('myGroup1','Mk2c');
 emaj_set_mark_group 
---------------------
                   6
(1 row)

  select emaj.emaj_delete_before_mark_group('myGroup1','Mk2b');
 emaj_delete_before_mark_group 
-------------------------------
                             6
(1 row)

  select * from emaj.emaj_relation where rel_group = 'myGroup1' and not upper_inf(rel_time_range);
 rel_schema |    rel_tblseq    | rel_time_range | rel_group | rel_kind | rel_priority | rel_log_schema | rel_log_table | rel_log_dat_tsp | rel_log_index | rel_log_idx_tsp | rel_log_sequence | rel_log_function | rel_sql_columns | rel_sql_pk_columns | rel_sql_pk_eq_conditions 
------------+------------------+----------------+-----------+----------+--------------+----------------+---------------+-----------------+---------------+-----------------+------------------+------------------+-----------------+--------------------+--------------------------
 myschema1  | myTbl3_col31_seq | [6041,6056)    | myGroup1  | S        |            1 |                |               |                 |               |                 |                  |                  |                 |                    | 
(1 row)

  select emaj.emaj_delete_before_mark_group('myGroup1','Mk2c');
 emaj_delete_before_mark_group 
-------------------------------
                             1
(1 row)

  select * from emaj.emaj_relation where rel_group = 'myGroup1' and not upper_inf(rel_time_range);
 rel_schema | rel_tblseq | rel_time_range | rel_group | rel_kind | rel_priority | rel_log_schema | rel_log_table | rel_log_dat_tsp | rel_log_index | rel_log_idx_tsp | rel_log_sequence | rel_log_function | rel_sql_columns | rel_sql_pk_columns | rel_sql_pk_eq_conditions 
------------+------------+----------------+-----------+----------+--------------+----------------+---------------+-----------------+---------------+-----------------+------------------+------------------+-----------------+--------------------+--------------------------
(0 rows)

  -- testing the sequence drop
  drop sequence mySchema1."myTbl3_col31_seq" cascade;
NOTICE:  drop cascades to default for table myschema1."myTbl3" column col31
--select * from emaj.emaj_hist order by hist_id desc limit 50;
rollback;
-- remove a table
--TODO: remove the transaction when adding a sequence will be possible and move the rollbacks later
begin;
  insert into myschema1."myTbl3" (col33) values (1.);
--select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
  delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
  select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                6
(1 row)

  select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence 
----------------+-------------------
              4 |                 2
(1 row)

  select * from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'myTbl3';
 rel_schema | rel_tblseq | rel_time_range | rel_group | rel_kind | rel_priority | rel_log_schema |    rel_log_table     | rel_log_dat_tsp |      rel_log_index       | rel_log_idx_tsp |     rel_log_sequence     |     rel_log_function      |        rel_sql_columns        | rel_sql_pk_columns | rel_sql_pk_eq_conditions 
------------+------------+----------------+-----------+----------+--------------+----------------+----------------------+-----------------+--------------------------+-----------------+--------------------------+---------------------------+-------------------------------+--------------------+--------------------------
 myschema1  | myTbl3     | [6041,6063)    | myGroup1  | r        |           10 | emajC          | myschema1_myTbl3_log | tsplog1         | myschema1_myTbl3_log_idx |                 | myschema1_myTbl3_log_seq | myschema1_myTbl3_log_fnct | tbl.col31,tbl.col32,tbl.col33 | col31              | tbl.col31 = keys.col31
(1 row)

  delete from myschema1."myTbl3" where col33 = 1.;
  select count(*) from "emajC"."myschema1_myTbl3_log";
 count 
-------
     1
(1 row)

  select * from emaj.emaj_verify_all();
  emaj_verify_all  
-------------------
 No error detected
(1 row)

  -- testing log stat
  select * from emaj.emaj_log_stat_group('myGroup1',NULL,NULL);
 stat_group | stat_schema | stat_table | stat_rows 
------------+-------------+------------+-----------
 myGroup1   | myschema1   | mytbl1     |         0
 myGroup1   | myschema1   | mytbl4     |         0
 myGroup1   | myschema1   | mytbl2     |         0
 myGroup1   | myschema1   | mytbl2b    |         0
(4 rows)

  select * from emaj.emaj_detailed_log_stat_group('myGroup1',NULL,NULL);
 stat_group | stat_schema | stat_table | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------+-----------+-----------
(0 rows)

  --testing snap and sql generation
\! mkdir -p /tmp/emaj_test/alter
\! rm -R /tmp/emaj_test/alter
\! mkdir /tmp/emaj_test/alter
  select emaj.emaj_snap_group('myGroup1','/tmp/emaj_test/alter','');
 emaj_snap_group 
-----------------
               6
(1 row)

\! ls /tmp/emaj_test/alter
_INFO
myschema1_mytbl1.snap
myschema1_mytbl2b_col20_seq.snap
myschema1_mytbl2b.snap
myschema1_mytbl2.snap
myschema1_myTbl3_col31_seq.snap
myschema1_mytbl4.snap
\! rm -R /tmp/emaj_test/alter/*
  select emaj.emaj_snap_log_group('myGroup1',NULL,NULL,'/tmp/emaj_test/alter',NULL);
 emaj_snap_log_group 
---------------------
                   6
(1 row)

\! ls /tmp/emaj_test/alter/myschema1*
/tmp/emaj_test/alter/myschema1_mytbl1_log.snap
/tmp/emaj_test/alter/myschema1_mytbl2b_log.snap
/tmp/emaj_test/alter/myschema1_mytbl2_log.snap
/tmp/emaj_test/alter/myschema1_mytbl4_log.snap
\! rm -R /tmp/emaj_test/alter/*
  savepoint gen;
    select emaj.emaj_gen_sql_group('myGroup1', NULL, NULL, '/tmp/emaj_test/alter/myFile',array['myschema1.myTbl3']);
ERROR:  _gen_sql_groups: Some tables and/or sequences (myschema1.myTbl3) do not belong to any of the selected tables groups.
CONTEXT:  SQL statement "SELECT emaj._gen_sql_groups(CASE WHEN v_groupName IS NOT NULL THEN array[v_groupName] ELSE NULL END, v_firstMark, v_lastMark, v_location, v_tblseqs)"
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 22 at SQL statement
  rollback to gen;
\! rm -R /tmp/emaj_test
  savepoint svp1;
  -- testing marks deletion (delete all marks before the alter_group)
  select emaj.emaj_delete_before_mark_group('myGroup1','EMAJ_LAST_MARK');
 emaj_delete_before_mark_group 
-------------------------------
                             7
(1 row)

  select 'found' from pg_class, pg_namespace where relnamespace = pg_namespace.oid and relname = 'myschema1_myTbl3_log' and nspname = 'emajC';
 ?column? 
----------
(0 rows)

  rollback to svp1;
  -- testing marks deletion (other cases)
  select emaj.emaj_set_mark_group('myGroup1','Mk2c');
 emaj_set_mark_group 
---------------------
                   6
(1 row)

  select emaj.emaj_delete_before_mark_group('myGroup1','Mk2b');
 emaj_delete_before_mark_group 
-------------------------------
                             6
(1 row)

  select * from emaj.emaj_relation where rel_group = 'myGroup1' and not upper_inf(rel_time_range);
 rel_schema | rel_tblseq | rel_time_range | rel_group | rel_kind | rel_priority | rel_log_schema |    rel_log_table     | rel_log_dat_tsp |      rel_log_index       | rel_log_idx_tsp |     rel_log_sequence     |     rel_log_function      |        rel_sql_columns        | rel_sql_pk_columns | rel_sql_pk_eq_conditions 
------------+------------+----------------+-----------+----------+--------------+----------------+----------------------+-----------------+--------------------------+-----------------+--------------------------+---------------------------+-------------------------------+--------------------+--------------------------
 myschema1  | myTbl3     | [6041,6063)    | myGroup1  | r        |           10 | emajC          | myschema1_myTbl3_log | tsplog1         | myschema1_myTbl3_log_idx |                 | myschema1_myTbl3_log_seq | myschema1_myTbl3_log_fnct | tbl.col31,tbl.col32,tbl.col33 | col31              | tbl.col31 = keys.col31
(1 row)

  select 'found' from pg_class, pg_namespace where relnamespace = pg_namespace.oid and relname = 'myschema1_myTbl3_log' and nspname = 'emajC';
 ?column? 
----------
 found
(1 row)

  select emaj.emaj_delete_before_mark_group('myGroup1','Mk2c');
 emaj_delete_before_mark_group 
-------------------------------
                             2
(1 row)

  select * from emaj.emaj_relation where rel_group = 'myGroup1' and not upper_inf(rel_time_range);
 rel_schema | rel_tblseq | rel_time_range | rel_group | rel_kind | rel_priority | rel_log_schema | rel_log_table | rel_log_dat_tsp | rel_log_index | rel_log_idx_tsp | rel_log_sequence | rel_log_function | rel_sql_columns | rel_sql_pk_columns | rel_sql_pk_eq_conditions 
------------+------------+----------------+-----------+----------+--------------+----------------+---------------+-----------------+---------------+-----------------+------------------+------------------+-----------------+--------------------+--------------------------
(0 rows)

  select 'found' from pg_class, pg_namespace where relnamespace = pg_namespace.oid and relname = 'myschema1_myTbl3_log' and nspname = 'emajC';
 ?column? 
----------
(0 rows)

  rollback to svp1;
  -- testing rollback
delete from emaj.emaj_param where param_key = 'dblink_user_password';
--select * from emaj.emaj_alter_plan where altr_time_id = (select max(altr_time_id) from emaj.emaj_alter_plan);
  select * from emaj.emaj_logged_rollback_group('myGroup1','Mk2b',true) order by 1,2;
 rlbk_severity |                                rlbk_message                                 
---------------+-----------------------------------------------------------------------------
 Notice        | 0 / 4 tables effectively processed.
 Notice        | 2 sequences processed.
 Warning       | The table myschema1."myTbl3" has been left unchanged (not in group anymore)
(3 rows)

  select * from emaj.emaj_rollback_group('myGroup1','Mk2b',true) order by 1,2;
 rlbk_severity |                                rlbk_message                                 
---------------+-----------------------------------------------------------------------------
 Notice        | 0 / 4 tables effectively processed.
 Notice        | 2 sequences processed.
 Warning       | The table myschema1."myTbl3" has been left unchanged (not in group anymore)
(3 rows)

--select * from emaj.emaj_alter_plan where altr_time_id = (select max(altr_time_id) from emaj.emaj_alter_plan);
  savepoint svp1;
  -- testing group's reset
  select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               6
(1 row)

--select * from emaj.emaj_relation where rel_group = 'myGroup1' and not upper_inf(rel_time_range);
  select emaj.emaj_reset_group('myGroup1');
 emaj_reset_group 
------------------
                6
(1 row)

  select * from emaj.emaj_relation where rel_group = 'myGroup1' and not upper_inf(rel_time_range);
 rel_schema | rel_tblseq | rel_time_range | rel_group | rel_kind | rel_priority | rel_log_schema | rel_log_table | rel_log_dat_tsp | rel_log_index | rel_log_idx_tsp | rel_log_sequence | rel_log_function | rel_sql_columns | rel_sql_pk_columns | rel_sql_pk_eq_conditions 
------------+------------+----------------+-----------+----------+--------------+----------------+---------------+-----------------+---------------+-----------------+------------------+------------------+-----------------+--------------------+--------------------------
(0 rows)

  select 'found' from pg_class, pg_namespace where relnamespace = pg_namespace.oid and relname = 'myschema1_myTbl3_log' and nspname = 'emajC';
 ?column? 
----------
(0 rows)

  rollback to svp1;
  -- testing the table drop (remove first the sequence linked to the table, otherwise an event triger fires)
  delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                5
(1 row)

  drop table mySchema1."myTbl3";
--select * from emaj.emaj_hist order by hist_id desc limit 50;
rollback;
select emaj.emaj_cleanup_rollback_state();
 emaj_cleanup_rollback_state 
-----------------------------
                           2
(1 row)

-- set an intermediate mark
select emaj.emaj_set_mark_groups('{"myGroup1","myGroup2"}','Mk3');
 emaj_set_mark_groups 
----------------------
                   15
(1 row)

select mark_id, mark_group, regexp_replace(mark_name,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d','%','g'), mark_time_id, mark_is_deleted, mark_is_rlbk_protected, mark_comment, mark_log_rows_before_next, mark_logged_rlbk_target_mark from emaj.emaj_mark where mark_id > 6000 order by mark_id;
 mark_id | mark_group |   regexp_replace   | mark_time_id | mark_is_deleted | mark_is_rlbk_protected | mark_comment | mark_log_rows_before_next | mark_logged_rlbk_target_mark 
---------+------------+--------------------+--------------+-----------------+------------------------+--------------+---------------------------+------------------------------
    6008 | myGroup1   | Mk1                |         6049 | f               | f                      |              |                         0 | 
    6009 | myGroup2   | Mk1                |         6049 | f               | f                      |              |                         0 | 
    6010 | myGroup1   | Priority Changed   |         6050 | f               | f                      |              |                         0 | 
    6011 | myGroup1   | Attributes_changed |         6051 | f               | f                      |              |                         0 | 
    6012 | myGroup2   | Attributes_changed |         6051 | f               | f                      |              |                         0 | 
    6013 | myGroup1   | Mk2                |         6052 | f               | f                      |              |                         0 | 
    6014 | myGroup2   | Mk2                |         6052 | f               | f                      |              |                         0 | 
    6015 | myGroup1   | ALTER_%            |         6053 | f               | f                      |              |                         0 | 
    6016 | myGroup2   | ALTER_%            |         6053 | f               | f                      |              |                         0 | 
    6017 | myGroup1   | ALTER_%            |         6054 | f               | f                      |              |                         0 | 
    6018 | myGroup2   | ALTER_%            |         6054 | f               | f                      |              |                         0 | 
    6019 | myGroup1   | Mk2b               |         6055 | f               | f                      |              |                         1 | 
    6033 | myGroup1   | Mk3                |         6071 | f               | f                      |              |                           | 
    6034 | myGroup2   | Mk3                |         6071 | f               | f                      |              |                           | 
(14 rows)

-- estimate a rollback crossing alter group operations
select emaj.emaj_estimate_rollback_groups('{"myGroup1","myGroup2"}','Mk1',false);
 emaj_estimate_rollback_groups 
-------------------------------
 @ 0.04111 secs
(1 row)

-- execute a rollback not crossing any alter group operation
select * from emaj.emaj_rollback_groups('{"myGroup1","myGroup2"}','Mk3',false) order by 1,2;
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._rlbk_init(text[],text,boolean,integer,boolean,boolean) line 68 at PERFORM
SQL statement "SELECT emaj._rlbk_init(v_groupNames, v_mark, v_isLoggedRlbk, 1, v_multiGroup, v_isAlterGroupAllowed)"
PL/pgSQL function emaj._rlbk_groups(text[],text,boolean,boolean,boolean) line 20 at SQL statement
PL/pgSQL function emaj.emaj_rollback_groups(text[],text,boolean) line 7 at RETURN QUERY
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._rlbk_init(text[],text,boolean,integer,boolean,boolean) line 68 at PERFORM
SQL statement "SELECT emaj._rlbk_init(v_groupNames, v_mark, v_isLoggedRlbk, 1, v_multiGroup, v_isAlterGroupAllowed)"
PL/pgSQL function emaj._rlbk_groups(text[],text,boolean,boolean,boolean) line 20 at SQL statement
PL/pgSQL function emaj.emaj_rollback_groups(text[],text,boolean) line 7 at RETURN QUERY
 rlbk_severity |             rlbk_message             
---------------+--------------------------------------
 Notice        | 0 / 11 tables effectively processed.
 Notice        | 4 sequences processed.
(2 rows)

-- execute rollbacks crossing alter group operations
select * from emaj.emaj_logged_rollback_groups('{"myGroup1","myGroup2"}','Mk2',false) order by 1,2;
ERROR:  _rlbk_check: This rollback operation would cross some previously executed alter group operations. You can remove this protection by using a less strict setting for this function.
CONTEXT:  SQL statement "SELECT emaj._rlbk_check(v_groupNames, v_mark, v_isAlterGroupAllowed, FALSE)"
PL/pgSQL function emaj._rlbk_init(text[],text,boolean,integer,boolean,boolean) line 24 at SQL statement
SQL statement "SELECT emaj._rlbk_init(v_groupNames, v_mark, v_isLoggedRlbk, 1, v_multiGroup, v_isAlterGroupAllowed)"
PL/pgSQL function emaj._rlbk_groups(text[],text,boolean,boolean,boolean) line 20 at SQL statement
PL/pgSQL function emaj.emaj_logged_rollback_groups(text[],text,boolean) line 11 at RETURN QUERY
select * from emaj.emaj_logged_rollback_groups('{"myGroup1","myGroup2"}','Mk2',true) order by 1,2;
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._rlbk_init(text[],text,boolean,integer,boolean,boolean) line 68 at PERFORM
SQL statement "SELECT emaj._rlbk_init(v_groupNames, v_mark, v_isLoggedRlbk, 1, v_multiGroup, v_isAlterGroupAllowed)"
PL/pgSQL function emaj._rlbk_groups(text[],text,boolean,boolean,boolean) line 20 at SQL statement
PL/pgSQL function emaj.emaj_logged_rollback_groups(text[],text,boolean) line 11 at RETURN QUERY
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._rlbk_init(text[],text,boolean,integer,boolean,boolean) line 68 at PERFORM
SQL statement "SELECT emaj._rlbk_init(v_groupNames, v_mark, v_isLoggedRlbk, 1, v_multiGroup, v_isAlterGroupAllowed)"
PL/pgSQL function emaj._rlbk_groups(text[],text,boolean,boolean,boolean) line 20 at SQL statement
PL/pgSQL function emaj.emaj_logged_rollback_groups(text[],text,boolean) line 11 at RETURN QUERY
 rlbk_severity |                                  rlbk_message                                  
---------------+--------------------------------------------------------------------------------
 Notice        | 1 / 11 tables effectively processed.
 Notice        | 4 sequences processed.
 Warning       | Tables group change not rolled back: E-Maj log schema for myschema2."myTbl3"
 Warning       | Tables group change not rolled back: E-Maj names prefix for myschema1."myTbl3"
 Warning       | Tables group change not rolled back: E-Maj priority for myschema1.mytbl1
 Warning       | Tables group change not rolled back: log data tablespace for myschema1.mytbl2b
 Warning       | Tables group change not rolled back: log index tablespace for myschema2.mytbl6
(7 rows)

select * from emaj.emaj_rollback_groups('{"myGroup1","myGroup2"}','Mk2',true) order by 1,2;
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._rlbk_init(text[],text,boolean,integer,boolean,boolean) line 68 at PERFORM
SQL statement "SELECT emaj._rlbk_init(v_groupNames, v_mark, v_isLoggedRlbk, 1, v_multiGroup, v_isAlterGroupAllowed)"
PL/pgSQL function emaj._rlbk_groups(text[],text,boolean,boolean,boolean) line 20 at SQL statement
PL/pgSQL function emaj.emaj_rollback_groups(text[],text,boolean) line 7 at RETURN QUERY
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._rlbk_init(text[],text,boolean,integer,boolean,boolean) line 68 at PERFORM
SQL statement "SELECT emaj._rlbk_init(v_groupNames, v_mark, v_isLoggedRlbk, 1, v_multiGroup, v_isAlterGroupAllowed)"
PL/pgSQL function emaj._rlbk_groups(text[],text,boolean,boolean,boolean) line 20 at SQL statement
PL/pgSQL function emaj.emaj_rollback_groups(text[],text,boolean) line 7 at RETURN QUERY
 rlbk_severity |                                  rlbk_message                                  
---------------+--------------------------------------------------------------------------------
 Notice        | 1 / 11 tables effectively processed.
 Notice        | 4 sequences processed.
 Warning       | Tables group change not rolled back: E-Maj log schema for myschema2."myTbl3"
 Warning       | Tables group change not rolled back: E-Maj names prefix for myschema1."myTbl3"
 Warning       | Tables group change not rolled back: E-Maj priority for myschema1.mytbl1
 Warning       | Tables group change not rolled back: log data tablespace for myschema1.mytbl2b
 Warning       | Tables group change not rolled back: log index tablespace for myschema2.mytbl6
(7 rows)

select * from emaj.emaj_rollback_groups('{"myGroup1","myGroup2"}','Mk1',true) order by 1,2;
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._rlbk_init(text[],text,boolean,integer,boolean,boolean) line 68 at PERFORM
SQL statement "SELECT emaj._rlbk_init(v_groupNames, v_mark, v_isLoggedRlbk, 1, v_multiGroup, v_isAlterGroupAllowed)"
PL/pgSQL function emaj._rlbk_groups(text[],text,boolean,boolean,boolean) line 20 at SQL statement
PL/pgSQL function emaj.emaj_rollback_groups(text[],text,boolean) line 7 at RETURN QUERY
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._rlbk_init(text[],text,boolean,integer,boolean,boolean) line 68 at PERFORM
SQL statement "SELECT emaj._rlbk_init(v_groupNames, v_mark, v_isLoggedRlbk, 1, v_multiGroup, v_isAlterGroupAllowed)"
PL/pgSQL function emaj._rlbk_groups(text[],text,boolean,boolean,boolean) line 20 at SQL statement
PL/pgSQL function emaj.emaj_rollback_groups(text[],text,boolean) line 7 at RETURN QUERY
 rlbk_severity |                                  rlbk_message                                  
---------------+--------------------------------------------------------------------------------
 Notice        | 0 / 11 tables effectively processed.
 Notice        | 4 sequences processed.
 Warning       | Tables group change not rolled back: E-Maj log schema for myschema2."myTbl3"
 Warning       | Tables group change not rolled back: E-Maj names prefix for myschema1."myTbl3"
 Warning       | Tables group change not rolled back: E-Maj priority for myschema1.mytbl1
 Warning       | Tables group change not rolled back: log data tablespace for myschema1.mytbl2b
 Warning       | Tables group change not rolled back: log index tablespace for myschema2.mytbl6
(7 rows)

-- execute additional rollback not crossing alter operations anymore
select * from emaj.emaj_logged_rollback_groups('{"myGroup1","myGroup2"}','Mk1',false) order by 1,2;
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._rlbk_init(text[],text,boolean,integer,boolean,boolean) line 68 at PERFORM
SQL statement "SELECT emaj._rlbk_init(v_groupNames, v_mark, v_isLoggedRlbk, 1, v_multiGroup, v_isAlterGroupAllowed)"
PL/pgSQL function emaj._rlbk_groups(text[],text,boolean,boolean,boolean) line 20 at SQL statement
PL/pgSQL function emaj.emaj_logged_rollback_groups(text[],text,boolean) line 11 at RETURN QUERY
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._rlbk_init(text[],text,boolean,integer,boolean,boolean) line 68 at PERFORM
SQL statement "SELECT emaj._rlbk_init(v_groupNames, v_mark, v_isLoggedRlbk, 1, v_multiGroup, v_isAlterGroupAllowed)"
PL/pgSQL function emaj._rlbk_groups(text[],text,boolean,boolean,boolean) line 20 at SQL statement
PL/pgSQL function emaj.emaj_logged_rollback_groups(text[],text,boolean) line 11 at RETURN QUERY
 rlbk_severity |             rlbk_message             
---------------+--------------------------------------
 Notice        | 0 / 11 tables effectively processed.
 Notice        | 4 sequences processed.
(2 rows)

select * from emaj.emaj_rollback_groups('{"myGroup1","myGroup2"}','Mk1',false) order by 1,2;
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._rlbk_init(text[],text,boolean,integer,boolean,boolean) line 68 at PERFORM
SQL statement "SELECT emaj._rlbk_init(v_groupNames, v_mark, v_isLoggedRlbk, 1, v_multiGroup, v_isAlterGroupAllowed)"
PL/pgSQL function emaj._rlbk_groups(text[],text,boolean,boolean,boolean) line 20 at SQL statement
PL/pgSQL function emaj.emaj_rollback_groups(text[],text,boolean) line 7 at RETURN QUERY
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._rlbk_init(text[],text,boolean,integer,boolean,boolean) line 68 at PERFORM
SQL statement "SELECT emaj._rlbk_init(v_groupNames, v_mark, v_isLoggedRlbk, 1, v_multiGroup, v_isAlterGroupAllowed)"
PL/pgSQL function emaj._rlbk_groups(text[],text,boolean,boolean,boolean) line 20 at SQL statement
PL/pgSQL function emaj.emaj_rollback_groups(text[],text,boolean) line 7 at RETURN QUERY
 rlbk_severity |             rlbk_message             
---------------+--------------------------------------
 Notice        | 0 / 11 tables effectively processed.
 Notice        | 4 sequences processed.
(2 rows)

-----------------------------
-- test end: check and force sequences id
-----------------------------
select emaj.emaj_force_drop_group('myGroup1');
 emaj_force_drop_group 
-----------------------
                     7
(1 row)

select emaj.emaj_force_drop_group('myGroup2');
 emaj_force_drop_group 
-----------------------
                     8
(1 row)

select emaj.emaj_force_drop_group('myGroup4');
 emaj_force_drop_group 
-----------------------
                     5
(1 row)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
 nspname 
---------
 emaj
(1 row)

select hist_function, hist_event, hist_object, 
       regexp_replace(regexp_replace(hist_wording,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d','%','g'),E'\\[.+\\]','(timestamp)','g'), 
       hist_user 
  from emaj.emaj_hist where hist_id > 6000 order by hist_id;
   hist_function    |          hist_event          |         hist_object          |                          regexp_replace                          | hist_user 
--------------------+------------------------------+------------------------------+------------------------------------------------------------------+-----------
 LOCK_GROUP         | BEGIN                        | myGroup1                     |                                                                  | postgres
 LOCK_GROUP         | END                          | myGroup1                     | 5 tables locked, 0 deadlock(s)                                   | postgres
 SET_MARK_GROUP     | BEGIN                        | myGroup1                     | STOP_%                                                           | postgres
 SET_MARK_GROUP     | END                          | myGroup1                     | STOP_%                                                           | postgres
 STOP_GROUP         | END                          | myGroup1                     | 7 tables/sequences processed                                     | postgres
 RESET_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 RESET_GROUP        | END                          | myGroup1                     | 7 tables/sequences processed                                     | postgres
 DROP_GROUP         | BEGIN                        | myGroup1                     |                                                                  | postgres
 DROP_GROUP         | SCHEMA DROPPED               | emajb                        |                                                                  | postgres
 DROP_GROUP         | END                          | myGroup1                     | 7 tables/sequences processed                                     | postgres
 FORCE_DROP_GROUP   | BEGIN                        | myGroup2                     |                                                                  | postgres
 FORCE_DROP_GROUP   | SCHEMA DROPPED               | "emajC"                      |                                                                  | postgres
 FORCE_DROP_GROUP   | END                          | myGroup2                     | 8 tables/sequences processed                                     | postgres
 STOP_GROUP         | BEGIN                        | phil's group#3",             |                                                                  | postgres
 LOCK_GROUP         | BEGIN                        | phil's group#3",             |                                                                  | postgres
 LOCK_GROUP         | END                          | phil's group#3",             | 2 tables locked, 0 deadlock(s)                                   | postgres
 SET_MARK_GROUP     | BEGIN                        | phil's group#3",             | Simple stop mark                                                 | postgres
 SET_MARK_GROUP     | END                          | phil's group#3",             | Simple stop mark                                                 | postgres
 STOP_GROUP         | END                          | phil's group#3",             | 4 tables/sequences processed                                     | postgres
 DROP_GROUP         | BEGIN                        | phil's group#3",             |                                                                  | postgres
 DROP_GROUP         | SCHEMA DROPPED               | "emaj #'3"                   |                                                                  | postgres
 DROP_GROUP         | END                          | phil's group#3",             | 4 tables/sequences processed                                     | postgres
 FORCE_STOP_GROUP   | BEGIN                        | myGroup4                     |                                                                  | postgres
 LOCK_GROUP         | BEGIN                        | myGroup4                     |                                                                  | postgres
 LOCK_GROUP         | END                          | myGroup4                     | 5 tables locked, 0 deadlock(s)                                   | postgres
 FORCE_STOP_GROUP   | END                          | myGroup4                     | 5 tables/sequences processed                                     | postgres
 DROP_GROUP         | BEGIN                        | myGroup4                     |                                                                  | postgres
 DROP_GROUP         | END                          | myGroup4                     | 5 tables/sequences processed                                     | postgres
 FORCE_STOP_GROUP   | BEGIN                        | emptyGroup                   |                                                                  | postgres
 LOCK_GROUP         | BEGIN                        | emptyGroup                   |                                                                  | postgres
 LOCK_GROUP         | END                          | emptyGroup                   | 0 tables locked, 0 deadlock(s)                                   | postgres
 FORCE_STOP_GROUP   | END                          | emptyGroup                   | 0 tables/sequences processed                                     | postgres
 DROP_GROUP         | BEGIN                        | emptyGroup                   |                                                                  | postgres
 DROP_GROUP         | END                          | emptyGroup                   | 0 tables/sequences processed                                     | postgres
 CREATE_GROUP       | BEGIN                        | myGroup1                     | rollbackable                                                     | postgres
 CREATE_GROUP       | SCHEMA CREATED               | emajb                        |                                                                  | postgres
 CREATE_GROUP       | SCHEMA CREATED               | "emajC"                      |                                                                  | postgres
 CREATE_GROUP       | END                          | myGroup1                     | 7 tables/sequences processed                                     | postgres
 CREATE_GROUP       | BEGIN                        | myGroup2                     | rollbackable                                                     | postgres
 CREATE_GROUP       | END                          | myGroup2                     | 8 tables/sequences processed                                     | postgres
 CREATE_GROUP       | BEGIN                        | emptyGroup                   | rollbackable                                                     | postgres
 CREATE_GROUP       | END                          | emptyGroup                   | 0 tables/sequences processed                                     | postgres
 CREATE_GROUP       | BEGIN                        | myGroup4                     | rollbackable                                                     | postgres
 CREATE_GROUP       | END                          | myGroup4                     | 5 tables/sequences processed                                     | postgres
 ALTER_GROUP        | BEGIN                        | emptyGroup                   |                                                                  | postgres
 ALTER_GROUP        | END                          | emptyGroup                   | Timestamp Id : 6008                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6009                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | SCHEMA DROPPED               | emajb                        |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6010                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6011                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | SCHEMA CREATED               | emajb                        |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6012                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6013                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | LOG SCHEMA CHANGED           | myschema1."myTbl3"           | emajC => emaj                                                    | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6014                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | LOG SCHEMA CHANGED           | myschema1."myTbl3"           | emaj => emajC                                                    | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6015                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | NAMES PREFIX CHANGED         | myschema1."myTbl3"           | myschema1_myTbl3 => s1t3                                         | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6016                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | NAMES PREFIX CHANGED         | myschema1."myTbl3"           | s1t3 => myschema1_myTbl3                                         | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6017                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | LOG DATA TABLESPACE CHANGED  | myschema1.mytbl2b            | tsp log'2 => Default tablespace                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6018                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | LOG DATA TABLESPACE CHANGED  | myschema1.mytbl2b            | Default tablespace => tsp log'2                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6019                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | LOG DATA TABLESPACE CHANGED  | myschema1."myTbl3"           | tsplog1 => tsp log'2                                             | postgres
 ALTER_GROUP        | LOG DATA TABLESPACE CHANGED  | myschema1.mytbl1             | Default tablespace => tsplog1                                    | postgres
 ALTER_GROUP        | LOG DATA TABLESPACE CHANGED  | myschema1.mytbl4             | tsplog1 => tsp log'2                                             | postgres
 ALTER_GROUP        | LOG DATA TABLESPACE CHANGED  | myschema1.mytbl2             | tsplog1 => tsp log'2                                             | postgres
 ALTER_GROUP        | LOG DATA TABLESPACE CHANGED  | myschema1.mytbl2b            | tsp log'2 => Default tablespace                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6020                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | LOG DATA TABLESPACE CHANGED  | myschema1."myTbl3"           | tsp log'2 => tsplog1                                             | postgres
 ALTER_GROUP        | LOG DATA TABLESPACE CHANGED  | myschema1.mytbl1             | tsplog1 => Default tablespace                                    | postgres
 ALTER_GROUP        | LOG DATA TABLESPACE CHANGED  | myschema1.mytbl4             | tsp log'2 => tsplog1                                             | postgres
 ALTER_GROUP        | LOG DATA TABLESPACE CHANGED  | myschema1.mytbl2             | tsp log'2 => tsplog1                                             | postgres
 ALTER_GROUP        | LOG DATA TABLESPACE CHANGED  | myschema1.mytbl2b            | Default tablespace => tsp log'2                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6021                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | LOG INDEX TABLESPACE CHANGED | myschema1.mytbl2b            | tsp log'2 => Default tablespace                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6022                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | LOG INDEX TABLESPACE CHANGED | myschema1.mytbl2b            | Default tablespace => tsp log'2                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6023                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6024                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6025                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6026                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6027                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6028                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6029                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6030                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6031                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6032                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6033                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6034                                              | postgres
 DISABLE_PROTECTION | EVENT TRIGGERS DISABLED      |                              | emaj_protection_trg, emaj_sql_drop_trg                           | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6035                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6036                                              | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6037                                              | postgres
 ENABLE_PROTECTION  | EVENT TRIGGERS ENABLED       |                              | emaj_protection_trg, emaj_sql_drop_trg                           | postgres
 ALTER_GROUPS       | BEGIN                        | myGroup1,myGroup2            |                                                                  | postgres
 ALTER_GROUP        | SCHEMA DROPPED               | emajb                        |                                                                  | postgres
 ALTER_GROUPS       | END                          | myGroup1,myGroup2            | Timestamp Id : 6040                                              | postgres
 ALTER_GROUPS       | BEGIN                        | myGroup1,myGroup2            |                                                                  | postgres
 ALTER_GROUP        | SCHEMA CREATED               | emajb                        |                                                                  | postgres
 ALTER_GROUPS       | END                          | myGroup1,myGroup2            | Timestamp Id : 6041                                              | postgres
 ALTER_GROUPS       | BEGIN                        | myGroup1,myGroup2            |                                                                  | postgres
 ALTER_GROUP        | LOG SCHEMA CHANGED           | myschema2."myTbl3"           | emajC => emaj                                                    | postgres
 ALTER_GROUP        | NAMES PREFIX CHANGED         | myschema1."myTbl3"           | myschema1_myTbl3 => s1t3                                         | postgres
 ALTER_GROUPS       | END                          | myGroup1,myGroup2            | Timestamp Id : 6042                                              | postgres
 ALTER_GROUPS       | BEGIN                        | myGroup1,myGroup2            |                                                                  | postgres
 ALTER_GROUP        | LOG SCHEMA CHANGED           | myschema2."myTbl3"           | emaj => emajC                                                    | postgres
 ALTER_GROUP        | NAMES PREFIX CHANGED         | myschema1."myTbl3"           | s1t3 => myschema1_myTbl3                                         | postgres
 ALTER_GROUPS       | END                          | myGroup1,myGroup2            | Timestamp Id : 6043                                              | postgres
 ALTER_GROUPS       | BEGIN                        | myGroup1,myGroup2            |                                                                  | postgres
 ALTER_GROUP        | LOG DATA TABLESPACE CHANGED  | myschema1.mytbl2b            | tsp log'2 => Default tablespace                                  | postgres
 ALTER_GROUP        | LOG INDEX TABLESPACE CHANGED | myschema2.mytbl6             | Default tablespace => tsplog1                                    | postgres
 ALTER_GROUPS       | END                          | myGroup1,myGroup2            | Timestamp Id : 6044                                              | postgres
 ALTER_GROUPS       | BEGIN                        | myGroup1,myGroup2            |                                                                  | postgres
 ALTER_GROUP        | LOG DATA TABLESPACE CHANGED  | myschema1.mytbl2b            | Default tablespace => tsp log'2                                  | postgres
 ALTER_GROUP        | LOG INDEX TABLESPACE CHANGED | myschema2.mytbl6             | tsplog1 => Default tablespace                                    | postgres
 ALTER_GROUPS       | END                          | myGroup1,myGroup2            | Timestamp Id : 6045                                              | postgres
 ALTER_GROUPS       | BEGIN                        | myGroup1,myGroup2            |                                                                  | postgres
 ALTER_GROUPS       | END                          | myGroup1,myGroup2            | Timestamp Id : 6046                                              | postgres
 ALTER_GROUPS       | BEGIN                        | myGroup1,myGroup2            |                                                                  | postgres
 ALTER_GROUPS       | END                          | myGroup1,myGroup2            | Timestamp Id : 6047                                              | postgres
 START_GROUPS       | BEGIN                        | myGroup1,myGroup2            | With log reset                                                   | postgres
 LOCK_GROUPS        | BEGIN                        | myGroup1,myGroup2            |                                                                  | postgres
 LOCK_GROUPS        | END                          | myGroup1,myGroup2            | 11 tables locked, 0 deadlock(s)                                  | postgres
 SET_MARK_GROUPS    | BEGIN                        | myGroup1,myGroup2            | Mk1                                                              | postgres
 SET_MARK_GROUPS    | END                          | myGroup1,myGroup2            | Mk1                                                              | postgres
 START_GROUPS       | END                          | myGroup1,myGroup2            | 15 tables/sequences processed                                    | postgres
 ALTER_GROUP        | BEGIN                        | myGroup1                     |                                                                  | postgres
 LOCK_GROUP         | BEGIN                        | myGroup1                     |                                                                  | postgres
 LOCK_GROUP         | END                          | myGroup1                     | 5 tables locked, 0 deadlock(s)                                   | postgres
 SET_MARK_GROUP     | BEGIN                        | myGroup1                     | Priority Changed                                                 | postgres
 SET_MARK_GROUP     | END                          | myGroup1                     | Priority Changed                                                 | postgres
 ALTER_GROUP        | END                          | myGroup1                     | Timestamp Id : 6050                                              | postgres
 ALTER_GROUPS       | BEGIN                        | myGroup1,myGroup2            |                                                                  | postgres
 LOCK_GROUPS        | BEGIN                        | myGroup1,myGroup2            |                                                                  | postgres
 LOCK_GROUPS        | END                          | myGroup1,myGroup2            | 11 tables locked, 0 deadlock(s)                                  | postgres
 SET_MARK_GROUPS    | BEGIN                        | myGroup1,myGroup2            | Attributes_changed                                               | postgres
 SET_MARK_GROUPS    | END                          | myGroup1,myGroup2            | Attributes_changed                                               | postgres
 ALTER_GROUP        | LOG SCHEMA CHANGED           | myschema2."myTbl3"           | emajC => emaj                                                    | postgres
 ALTER_GROUP        | NAMES PREFIX CHANGED         | myschema1."myTbl3"           | myschema1_myTbl3 => s1t3                                         | postgres
 ALTER_GROUP        | LOG DATA TABLESPACE CHANGED  | myschema1.mytbl2b            | tsp log'2 => Default tablespace                                  | postgres
 ALTER_GROUP        | LOG INDEX TABLESPACE CHANGED | myschema2.mytbl6             | Default tablespace => tsplog1                                    | postgres
 ALTER_GROUPS       | END                          | myGroup1,myGroup2            | Timestamp Id : 6051                                              | postgres
 SET_MARK_GROUPS    | BEGIN                        | myGroup1,myGroup2            | Mk2                                                              | postgres
 LOCK_GROUPS        | BEGIN                        | myGroup1,myGroup2            |                                                                  | postgres
 LOCK_GROUPS        | END                          | myGroup1,myGroup2            | 11 tables locked, 0 deadlock(s)                                  | postgres
 SET_MARK_GROUPS    | END                          | myGroup1,myGroup2            | Mk2                                                              | postgres
 ALTER_GROUPS       | BEGIN                        | myGroup1,myGroup2            |                                                                  | postgres
 LOCK_GROUPS        | BEGIN                        | myGroup1,myGroup2            |                                                                  | postgres
 LOCK_GROUPS        | END                          | myGroup1,myGroup2            | 11 tables locked, 0 deadlock(s)                                  | postgres
 SET_MARK_GROUPS    | BEGIN                        | myGroup1,myGroup2            | ALTER_%                                                          | postgres
 SET_MARK_GROUPS    | END                          | myGroup1,myGroup2            | ALTER_%                                                          | postgres
 ALTER_GROUPS       | END                          | myGroup1,myGroup2            | Timestamp Id : 6053                                              | postgres
 ALTER_GROUPS       | BEGIN                        | myGroup1,myGroup2            |                                                                  | postgres
 LOCK_GROUPS        | BEGIN                        | myGroup1,myGroup2            |                                                                  | postgres
 LOCK_GROUPS        | END                          | myGroup1,myGroup2            | 11 tables locked, 0 deadlock(s)                                  | postgres
 SET_MARK_GROUPS    | BEGIN                        | myGroup1,myGroup2            | ALTER_%                                                          | postgres
 SET_MARK_GROUPS    | END                          | myGroup1,myGroup2            | ALTER_%                                                          | postgres
 ALTER_GROUP        | LOG SCHEMA CHANGED           | myschema2."myTbl3"           | emaj => emajC                                                    | postgres
 ALTER_GROUP        | NAMES PREFIX CHANGED         | myschema1."myTbl3"           | s1t3 => myschema1_myTbl3                                         | postgres
 ALTER_GROUP        | LOG DATA TABLESPACE CHANGED  | myschema1.mytbl2b            | Default tablespace => tsp log'2                                  | postgres
 ALTER_GROUP        | LOG INDEX TABLESPACE CHANGED | myschema2.mytbl6             | tsplog1 => Default tablespace                                    | postgres
 ALTER_GROUPS       | END                          | myGroup1,myGroup2            | Timestamp Id : 6054                                              | postgres
 SET_MARK_GROUP     | BEGIN                        | myGroup1                     |                                                                  | postgres
 LOCK_GROUP         | BEGIN                        | myGroup1                     |                                                                  | postgres
 LOCK_GROUP         | END                          | myGroup1                     | 5 tables locked, 0 deadlock(s)                                   | postgres
 SET_MARK_GROUP     | END                          | myGroup1                     | Mk2b                                                             | postgres
 CLEANUP_RLBK_STATE |                              | rollback id 6000             | set to ABORTED                                                   | postgres
 CLEANUP_RLBK_STATE |                              | rollback id 6001             | set to ABORTED                                                   | postgres
 SET_MARK_GROUPS    | BEGIN                        | myGroup1,myGroup2            | Mk3                                                              | postgres
 LOCK_GROUPS        | BEGIN                        | myGroup1,myGroup2            |                                                                  | postgres
 LOCK_GROUPS        | END                          | myGroup1,myGroup2            | 11 tables locked, 0 deadlock(s)                                  | postgres
 SET_MARK_GROUPS    | END                          | myGroup1,myGroup2            | Mk3                                                              | postgres
 ROLLBACK_GROUPS    | BEGIN                        | myGroup1,myGroup2            | Unlogged rollback to mark Mk3 (timestamp)                        | postgres
 DBLINK_OPEN_CNX    |                              | rlbk#1                       | Status = 1                                                       | postgres
 LOCK_GROUP         | BEGIN                        | myGroup1,myGroup2            | Rollback session #1                                              | postgres
 LOCK_GROUP         | END                          | myGroup1,myGroup2            | Rollback session #1: 11 tables locked, 0 deadlock(s)             | postgres
 ROLLBACK_SEQUENCE  |                              | myschema1."myTbl3_col31_seq" |                                                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema1.mytbl2b_col20_seq  |                                                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema2.myseq1             |                                                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema2."myTbl3_col31_seq" |                                                                  | postgres
 ROLLBACK_GROUPS    | END                          | myGroup1,myGroup2            | Rollback_id 6004, 0 tables and 4 sequences effectively processed | postgres
 DBLINK_CLOSE_CNX   |                              | rlbk#1                       |                                                                  | postgres
 ROLLBACK_GROUPS    | BEGIN                        | myGroup1,myGroup2            | Logged rollback to mark Mk2 (timestamp)                          | postgres
 DBLINK_OPEN_CNX    |                              | rlbk#1                       | Status = 1                                                       | postgres
 LOCK_GROUP         | BEGIN                        | myGroup1,myGroup2            | Rollback session #1                                              | postgres
 LOCK_GROUP         | END                          | myGroup1,myGroup2            | Rollback session #1: 11 tables locked, 0 deadlock(s)             | postgres
 SET_MARK_GROUPS    | BEGIN                        | myGroup1,myGroup2            | RLBK_Mk2_%_START                                                 | postgres
 CLEANUP_RLBK_STATE |                              | rollback id 6004             | set to COMMITTED                                                 | postgres
 SET_MARK_GROUPS    | END                          | myGroup1,myGroup2            | RLBK_Mk2_%_START                                                 | postgres
 ROLLBACK_TABLE     | BEGIN                        | myschema1."myTbl3"           | All log rows with emaj_gid > 11861 and <= 11862                  | postgres
 ROLLBACK_TABLE     | END                          | myschema1."myTbl3"           | 0 rolled back primary keys                                       | postgres
 ROLLBACK_SEQUENCE  |                              | myschema1."myTbl3_col31_seq" |                                                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema1.mytbl2b_col20_seq  |                                                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema2.myseq1             |                                                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema2."myTbl3_col31_seq" |                                                                  | postgres
 SET_MARK_GROUPS    | BEGIN                        | myGroup1,myGroup2            | RLBK_Mk2_%_DONE                                                  | postgres
 SET_MARK_GROUPS    | END                          | myGroup1,myGroup2            | RLBK_Mk2_%_DONE                                                  | postgres
 ROLLBACK_GROUPS    | END                          | myGroup1,myGroup2            | Rollback_id 6005, 1 tables and 4 sequences effectively processed | postgres
 DBLINK_CLOSE_CNX   |                              | rlbk#1                       |                                                                  | postgres
 ROLLBACK_GROUPS    | BEGIN                        | myGroup1,myGroup2            | Unlogged rollback to mark Mk2 (timestamp)                        | postgres
 DBLINK_OPEN_CNX    |                              | rlbk#1                       | Status = 1                                                       | postgres
 LOCK_GROUP         | BEGIN                        | myGroup1,myGroup2            | Rollback session #1                                              | postgres
 LOCK_GROUP         | END                          | myGroup1,myGroup2            | Rollback session #1: 11 tables locked, 0 deadlock(s)             | postgres
 ROLLBACK_TABLE     | BEGIN                        | myschema1."myTbl3"           | All log rows with emaj_gid > 11861 and <= 11862                  | postgres
 ROLLBACK_TABLE     | END                          | myschema1."myTbl3"           | 0 rolled back primary keys                                       | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup1                     | mark ALTER_% is deleted                                          | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup2                     | mark ALTER_% is deleted                                          | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup1                     | mark ALTER_% is deleted                                          | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup2                     | mark ALTER_% is deleted                                          | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup1                     | mark Mk2b is deleted                                             | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup1                     | mark Mk3 is deleted                                              | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup2                     | mark Mk3 is deleted                                              | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup1                     | mark RLBK_Mk2_%_START is deleted                                 | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup2                     | mark RLBK_Mk2_%_START is deleted                                 | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup1                     | mark RLBK_Mk2_%_DONE is deleted                                  | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup2                     | mark RLBK_Mk2_%_DONE is deleted                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema1."myTbl3_col31_seq" |                                                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema1.mytbl2b_col20_seq  |                                                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema2.myseq1             |                                                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema2."myTbl3_col31_seq" |                                                                  | postgres
 ROLLBACK_GROUPS    | END                          | myGroup1,myGroup2            | Rollback_id 6006, 1 tables and 4 sequences effectively processed | postgres
 DBLINK_CLOSE_CNX   |                              | rlbk#1                       |                                                                  | postgres
 ROLLBACK_GROUPS    | BEGIN                        | myGroup1,myGroup2            | Unlogged rollback to mark Mk1 (timestamp)                        | postgres
 DBLINK_OPEN_CNX    |                              | rlbk#1                       | Status = 1                                                       | postgres
 LOCK_GROUP         | BEGIN                        | myGroup1,myGroup2            | Rollback session #1                                              | postgres
 LOCK_GROUP         | END                          | myGroup1,myGroup2            | Rollback session #1: 11 tables locked, 0 deadlock(s)             | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup1                     | mark Priority Changed is deleted                                 | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup1                     | mark Attributes_changed is deleted                               | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup2                     | mark Attributes_changed is deleted                               | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup1                     | mark Mk2 is deleted                                              | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup2                     | mark Mk2 is deleted                                              | postgres
 ROLLBACK_SEQUENCE  |                              | myschema1."myTbl3_col31_seq" |                                                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema1.mytbl2b_col20_seq  |                                                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema2.myseq1             |                                                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema2."myTbl3_col31_seq" |                                                                  | postgres
 ROLLBACK_GROUPS    | END                          | myGroup1,myGroup2            | Rollback_id 6007, 0 tables and 4 sequences effectively processed | postgres
 DBLINK_CLOSE_CNX   |                              | rlbk#1                       |                                                                  | postgres
 ROLLBACK_GROUPS    | BEGIN                        | myGroup1,myGroup2            | Logged rollback to mark Mk1 (timestamp)                          | postgres
 DBLINK_OPEN_CNX    |                              | rlbk#1                       | Status = 1                                                       | postgres
 LOCK_GROUP         | BEGIN                        | myGroup1,myGroup2            | Rollback session #1                                              | postgres
 LOCK_GROUP         | END                          | myGroup1,myGroup2            | Rollback session #1: 11 tables locked, 0 deadlock(s)             | postgres
 SET_MARK_GROUPS    | BEGIN                        | myGroup1,myGroup2            | RLBK_Mk1_%_START                                                 | postgres
 CLEANUP_RLBK_STATE |                              | rollback id 6005             | set to COMMITTED                                                 | postgres
 CLEANUP_RLBK_STATE |                              | rollback id 6006             | set to COMMITTED                                                 | postgres
 CLEANUP_RLBK_STATE |                              | rollback id 6007             | set to COMMITTED                                                 | postgres
 SET_MARK_GROUPS    | END                          | myGroup1,myGroup2            | RLBK_Mk1_%_START                                                 | postgres
 ROLLBACK_SEQUENCE  |                              | myschema1."myTbl3_col31_seq" |                                                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema1.mytbl2b_col20_seq  |                                                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema2.myseq1             |                                                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema2."myTbl3_col31_seq" |                                                                  | postgres
 SET_MARK_GROUPS    | BEGIN                        | myGroup1,myGroup2            | RLBK_Mk1_%_DONE                                                  | postgres
 SET_MARK_GROUPS    | END                          | myGroup1,myGroup2            | RLBK_Mk1_%_DONE                                                  | postgres
 ROLLBACK_GROUPS    | END                          | myGroup1,myGroup2            | Rollback_id 6008, 0 tables and 4 sequences effectively processed | postgres
 DBLINK_CLOSE_CNX   |                              | rlbk#1                       |                                                                  | postgres
 ROLLBACK_GROUPS    | BEGIN                        | myGroup1,myGroup2            | Unlogged rollback to mark Mk1 (timestamp)                        | postgres
 DBLINK_OPEN_CNX    |                              | rlbk#1                       | Status = 1                                                       | postgres
 LOCK_GROUP         | BEGIN                        | myGroup1,myGroup2            | Rollback session #1                                              | postgres
 LOCK_GROUP         | END                          | myGroup1,myGroup2            | Rollback session #1: 11 tables locked, 0 deadlock(s)             | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup1                     | mark RLBK_Mk1_%_START is deleted                                 | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup2                     | mark RLBK_Mk1_%_START is deleted                                 | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup1                     | mark RLBK_Mk1_%_DONE is deleted                                  | postgres
 ROLLBACK_GROUPS    | MARK DELETED                 | myGroup2                     | mark RLBK_Mk1_%_DONE is deleted                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema1."myTbl3_col31_seq" |                                                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema1.mytbl2b_col20_seq  |                                                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema2.myseq1             |                                                                  | postgres
 ROLLBACK_SEQUENCE  |                              | myschema2."myTbl3_col31_seq" |                                                                  | postgres
 ROLLBACK_GROUPS    | END                          | myGroup1,myGroup2            | Rollback_id 6009, 0 tables and 4 sequences effectively processed | postgres
 DBLINK_CLOSE_CNX   |                              | rlbk#1                       |                                                                  | postgres
 FORCE_DROP_GROUP   | BEGIN                        | myGroup1                     |                                                                  | postgres
 FORCE_DROP_GROUP   | SCHEMA DROPPED               | emajb                        |                                                                  | postgres
 FORCE_DROP_GROUP   | END                          | myGroup1                     | 7 tables/sequences processed                                     | postgres
 FORCE_DROP_GROUP   | BEGIN                        | myGroup2                     |                                                                  | postgres
 FORCE_DROP_GROUP   | SCHEMA DROPPED               | "emajC"                      |                                                                  | postgres
 FORCE_DROP_GROUP   | END                          | myGroup2                     | 8 tables/sequences processed                                     | postgres
 FORCE_DROP_GROUP   | BEGIN                        | myGroup4                     |                                                                  | postgres
 FORCE_DROP_GROUP   | END                          | myGroup4                     | 5 tables/sequences processed                                     | postgres
(308 rows)

select time_id, time_last_emaj_gid, time_event from emaj.emaj_time_stamp where time_id > 6000 order by time_id;
 time_id | time_last_emaj_gid | time_event 
---------+--------------------+------------
    6001 |              11861 | M
    6002 |              11861 | C
    6003 |              11861 | C
    6004 |              11861 | C
    6005 |              11861 | C
    6008 |              11861 | A
    6009 |              11861 | A
    6010 |              11861 | A
    6011 |              11861 | A
    6012 |              11861 | A
    6013 |              11861 | A
    6014 |              11861 | A
    6015 |              11861 | A
    6016 |              11861 | A
    6017 |              11861 | A
    6018 |              11861 | A
    6019 |              11861 | A
    6020 |              11861 | A
    6021 |              11861 | A
    6022 |              11861 | A
    6023 |              11861 | A
    6024 |              11861 | A
    6025 |              11861 | A
    6026 |              11861 | A
    6027 |              11861 | A
    6028 |              11861 | A
    6029 |              11861 | A
    6030 |              11861 | A
    6031 |              11861 | A
    6032 |              11861 | A
    6033 |              11861 | A
    6034 |              11861 | A
    6035 |              11861 | A
    6036 |              11861 | A
    6037 |              11861 | A
    6040 |              11861 | A
    6041 |              11861 | A
    6042 |              11861 | A
    6043 |              11861 | A
    6044 |              11861 | A
    6045 |              11861 | A
    6046 |              11861 | A
    6047 |              11861 | A
    6049 |              11861 | M
    6050 |              11861 | A
    6051 |              11861 | A
    6052 |              11861 | M
    6053 |              11861 | A
    6054 |              11861 | A
    6055 |              11861 | M
    6058 |              11861 | R
    6060 |              11861 | R
    6071 |              11862 | M
    6072 |              11862 | R
    6073 |              11862 | R
    6074 |              11862 | M
    6075 |              11862 | R
    6076 |              11862 | R
    6077 |              11862 | R
    6078 |              11862 | M
    6079 |              11862 | R
(61 rows)

select * from emaj.emaj_alter_plan order by 1,2,3,4,5;
 altr_time_id |        altr_step         | altr_schema |   altr_tblseq    | altr_group | altr_priority | altr_group_is_logging | altr_new_group | altr_new_priority | altr_new_group_is_logging 
--------------+--------------------------+-------------+------------------+------------+---------------+-----------------------+----------------+-------------------+---------------------------
         6008 | RESET_GROUP              |             |                  | emptyGroup |               | f                     |                |                   | 
         6009 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6010 | REMOVE_TBL               | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                   | 
         6010 | REMOVE_TBL               | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                   | 
         6010 | REMOVE_TBL               | myschema1   | mytbl4           | myGroup1   |            20 | f                     |                |                   | 
         6010 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6010 | DROP_LOG_SCHEMA          | emajb       |                  |            |               |                       |                |                   | 
         6011 | REMOVE_SEQ               | myschema1   | myTbl3_col31_seq | myGroup1   |             1 | f                     |                |                   | 
         6011 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6012 | CREATE_LOG_SCHEMA        | emajb       |                  |            |               |                       |                |                   | 
         6012 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6012 | ADD_TBL                  | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                   | 
         6012 | ADD_TBL                  | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                   | 
         6012 | ADD_TBL                  | myschema1   | mytbl4           | myGroup1   |            20 | f                     |                |                   | 
         6013 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6013 | ADD_SEQ                  | myschema1   | myTbl3_col31_seq | myGroup1   |             1 | f                     |                |                   | 
         6014 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6014 | CHANGE_TBL_LOG_SCHEMA    | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                   | 
         6015 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6015 | CHANGE_TBL_LOG_SCHEMA    | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                   | 
         6016 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6016 | CHANGE_TBL_NAMES_PREFIX  | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                   | 
         6017 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6017 | CHANGE_TBL_NAMES_PREFIX  | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                   | 
         6018 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6018 | CHANGE_TBL_LOG_DATA_TSP  | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                   | 
         6019 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6019 | CHANGE_TBL_LOG_DATA_TSP  | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                   | 
         6020 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6020 | CHANGE_TBL_LOG_DATA_TSP  | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                   | 
         6020 | CHANGE_TBL_LOG_DATA_TSP  | myschema1   | mytbl2           | myGroup1   |               | f                     |                |                   | 
         6020 | CHANGE_TBL_LOG_DATA_TSP  | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                   | 
         6020 | CHANGE_TBL_LOG_DATA_TSP  | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                   | 
         6020 | CHANGE_TBL_LOG_DATA_TSP  | myschema1   | mytbl4           | myGroup1   |            20 | f                     |                |                   | 
         6021 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6021 | CHANGE_TBL_LOG_DATA_TSP  | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                   | 
         6021 | CHANGE_TBL_LOG_DATA_TSP  | myschema1   | mytbl2           | myGroup1   |               | f                     |                |                   | 
         6021 | CHANGE_TBL_LOG_DATA_TSP  | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                   | 
         6021 | CHANGE_TBL_LOG_DATA_TSP  | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                   | 
         6021 | CHANGE_TBL_LOG_DATA_TSP  | myschema1   | mytbl4           | myGroup1   |            20 | f                     |                |                   | 
         6022 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6022 | CHANGE_TBL_LOG_INDEX_TSP | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                   | 
         6023 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6023 | CHANGE_TBL_LOG_INDEX_TSP | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                   | 
         6024 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6024 | CHANGE_REL_PRIORITY      | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                30 | 
         6025 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6025 | CHANGE_REL_PRIORITY      | myschema1   | mytbl1           | myGroup1   |            30 | f                     |                |                   | 
         6026 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6026 | CHANGE_REL_PRIORITY      | myschema1   | mytbl1           | myGroup1   |               | f                     |                |                20 | 
         6027 | REPAIR_TBL               | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                   | 
         6027 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6028 | REPAIR_TBL               | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                   | 
         6028 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6029 | REPAIR_TBL               | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                   | 
         6029 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6030 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6031 | REPAIR_TBL               | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                   | 
         6031 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6032 | REMOVE_TBL               | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                   | 
         6032 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6032 | ADD_TBL                  | myschema1   | mytbl1_new_name  | myGroup1   |            20 | f                     |                |                   | 
         6033 | REMOVE_TBL               | myschema1   | mytbl1_new_name  | myGroup1   |            20 | f                     |                |                   | 
         6033 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6033 | ADD_TBL                  | public      | mytbl1_new_name  | myGroup1   |            20 | f                     |                |                   | 
         6034 | REMOVE_TBL               | public      | mytbl1_new_name  | myGroup1   |            20 | f                     |                |                   | 
         6034 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6034 | ADD_TBL                  | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                   | 
         6035 | REPAIR_TBL               | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                   | 
         6035 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6036 | REPAIR_TBL               | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                   | 
         6036 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6037 | REPAIR_TBL               | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                   | 
         6037 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6040 | REMOVE_TBL               | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                   | 
         6040 | REMOVE_TBL               | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                   | 
         6040 | REMOVE_TBL               | myschema2   | mytbl4           | myGroup2   |               | f                     |                |                   | 
         6040 | REMOVE_SEQ               | myschema1   | myTbl3_col31_seq | myGroup1   |             1 | f                     |                |                   | 
         6040 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6040 | RESET_GROUP              |             |                  | myGroup2   |               | f                     |                |                   | 
         6040 | DROP_LOG_SCHEMA          | emajb       |                  |            |               |                       |                |                   | 
         6041 | CREATE_LOG_SCHEMA        | emajb       |                  |            |               |                       |                |                   | 
         6041 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6041 | RESET_GROUP              |             |                  | myGroup2   |               | f                     |                |                   | 
         6041 | ADD_TBL                  | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                   | 
         6041 | ADD_TBL                  | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                   | 
         6041 | ADD_TBL                  | myschema2   | mytbl4           | myGroup2   |               | f                     |                |                   | 
         6041 | ADD_SEQ                  | myschema1   | myTbl3_col31_seq | myGroup1   |             1 | f                     |                |                   | 
         6042 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6042 | RESET_GROUP              |             |                  | myGroup2   |               | f                     |                |                   | 
         6042 | CHANGE_TBL_LOG_SCHEMA    | myschema2   | myTbl3           | myGroup2   |               | f                     |                |                   | 
         6042 | CHANGE_TBL_NAMES_PREFIX  | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                   | 
         6043 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6043 | RESET_GROUP              |             |                  | myGroup2   |               | f                     |                |                   | 
         6043 | CHANGE_TBL_LOG_SCHEMA    | myschema2   | myTbl3           | myGroup2   |               | f                     |                |                   | 
         6043 | CHANGE_TBL_NAMES_PREFIX  | myschema1   | myTbl3           | myGroup1   |            10 | f                     |                |                   | 
         6044 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6044 | RESET_GROUP              |             |                  | myGroup2   |               | f                     |                |                   | 
         6044 | CHANGE_TBL_LOG_DATA_TSP  | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                   | 
         6044 | CHANGE_TBL_LOG_INDEX_TSP | myschema2   | mytbl6           | myGroup2   |               | f                     |                |                   | 
         6044 | CHANGE_REL_PRIORITY      | myschema1   | mytbl1           | myGroup1   |            20 | f                     |                |                30 | 
         6045 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6045 | RESET_GROUP              |             |                  | myGroup2   |               | f                     |                |                   | 
         6045 | CHANGE_TBL_LOG_DATA_TSP  | myschema1   | mytbl2b          | myGroup1   |               | f                     |                |                   | 
         6045 | CHANGE_TBL_LOG_INDEX_TSP | myschema2   | mytbl6           | myGroup2   |               | f                     |                |                   | 
         6045 | CHANGE_REL_PRIORITY      | myschema1   | mytbl1           | myGroup1   |            30 | f                     |                |                20 | 
         6046 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6046 | RESET_GROUP              |             |                  | myGroup2   |               | f                     |                |                   | 
         6046 | ASSIGN_REL               | myschema2   | myTbl3           | myGroup2   |               | f                     | myGroup1       |                   | f
         6046 | ASSIGN_REL               | myschema2   | myTbl3_col31_seq | myGroup2   |               | f                     | myGroup1       |                   | f
         6047 | RESET_GROUP              |             |                  | myGroup1   |               | f                     |                |                   | 
         6047 | RESET_GROUP              |             |                  | myGroup2   |               | f                     |                |                   | 
         6047 | ASSIGN_REL               | myschema2   | myTbl3           | myGroup1   |               | f                     | myGroup2       |                   | f
         6047 | ASSIGN_REL               | myschema2   | myTbl3_col31_seq | myGroup1   |               | f                     | myGroup2       |                   | f
(114 rows)

truncate emaj.emaj_hist;
