-- alter.sql : test emaj_alter_group() and emaj_alter_groups() functions
--
-- set sequence restart value
alter sequence emaj.emaj_hist_hist_id_seq restart 6000;
alter sequence emaj.emaj_time_stamp_time_id_seq restart 6000;
alter sequence emaj.emaj_rlbk_rlbk_id_seq restart 6000;
-----------------------------
-- stop, reset and drop groups
-----------------------------
select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               7
(1 row)

select emaj.emaj_reset_group('myGroup1');
 emaj_reset_group 
------------------
                7
(1 row)

select emaj.emaj_drop_group('myGroup1');
 emaj_drop_group 
-----------------
               7
(1 row)

select emaj.emaj_force_drop_group('myGroup2');
 emaj_force_drop_group 
-----------------------
                     8
(1 row)

select emaj.emaj_stop_group('phil''s group#3",','Simple stop mark');
 emaj_stop_group 
-----------------
               4
(1 row)

select emaj.emaj_drop_group('phil''s group#3",');
 emaj_drop_group 
-----------------
               4
(1 row)

select emaj.emaj_force_stop_group('myGroup4');
 emaj_force_stop_group 
-----------------------
                     5
(1 row)

select emaj.emaj_drop_group('myGroup4');
 emaj_drop_group 
-----------------
               5
(1 row)

select emaj.emaj_force_stop_group('emptyGroup');
 emaj_force_stop_group 
-----------------------
                     0
(1 row)

select emaj.emaj_drop_group('emptyGroup');
 emaj_drop_group 
-----------------
               0
(1 row)

-----------------------------
-- emaj_alter_group() tests on IDLE groups
-----------------------------
select emaj.emaj_create_group('myGroup1');
NOTICE:  table "myTbl3_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.myTbl3" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.myTbl3" does not exist, skipping
NOTICE:  table "mytbl1_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
NOTICE:  table "mytbl4_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl4" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl4" does not exist, skipping
NOTICE:  table "mytbl2_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl2" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl2" does not exist, skipping
WARNING:  _create_tbl: The table "myschema1.mytbl2" has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
NOTICE:  table "mytbl2b_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl2b" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl2b" does not exist, skipping
 emaj_create_group 
-------------------
                 7
(1 row)

select emaj.emaj_create_group('myGroup2');
NOTICE:  table "myTbl3_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.myTbl3" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.myTbl3" does not exist, skipping
NOTICE:  table "mytbl1_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.mytbl1" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.mytbl1" does not exist, skipping
NOTICE:  table "mytbl2_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.mytbl2" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.mytbl2" does not exist, skipping
NOTICE:  table "mytbl4_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.mytbl4" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.mytbl4" does not exist, skipping
NOTICE:  table "mytbl5_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.mytbl5" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.mytbl5" does not exist, skipping
NOTICE:  table "mytbl6_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.mytbl6" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.mytbl6" does not exist, skipping
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup2).
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup2).
 emaj_create_group 
-------------------
                 8
(1 row)

select emaj.emaj_create_group('emptyGroup',true,true);
 emaj_create_group 
-------------------
                 0
(1 row)

select emaj.emaj_create_group('myGroup4');
NOTICE:  table "mypartp1_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema4.mypartp1" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema4.mypartp1" does not exist, skipping
NOTICE:  table "mypartp2_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema4.mypartp2" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema4.mypartp2" does not exist, skipping
NOTICE:  table "mytblc1_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema4.mytblc1" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema4.mytblc1" does not exist, skipping
NOTICE:  table "mytblc2_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema4.mytblc2" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema4.mytblc2" does not exist, skipping
NOTICE:  table "mytblm_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema4.mytblm" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema4.mytblm" does not exist, skipping
WARNING:  _create_tbl: The table "myschema4.mytblm" has triggers (mytblm_insert_trigger). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
 emaj_create_group 
-------------------
                 5
(1 row)

-- unknown group
select emaj.emaj_alter_group(NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 28 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 17 at SQL statement
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
select emaj.emaj_alter_group('unknownGroup');
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 17 at SQL statement
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
-- group in logging state (2 tables need to be repaired)
begin;
  select emaj.emaj_start_group('myGroup1','');
 emaj_start_group 
------------------
                7
(1 row)

  select emaj.emaj_disable_protection_by_event_triggers();
 emaj_disable_protection_by_event_triggers 
-------------------------------------------
                                         3
(1 row)

  drop table emaj_myschema1.mytbl1_log;
  drop table emaj_myschema1.mytbl4_log;
  select emaj.emaj_enable_protection_by_event_triggers();
 emaj_enable_protection_by_event_triggers 
------------------------------------------
                                        3
(1 row)

  select emaj.emaj_alter_group('myGroup1');
ERROR:  alter_exec: Cannot repair the table myschema1.mytbl1. Its group myGroup1 is in LOGGING state.
CONTEXT:  PL/pgSQL function emaj._alter_exec(bigint,boolean) line 35 at RAISE
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 56 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
rollback;
-- alter a group with a table now already belonging to another group
begin;
  insert into emaj.emaj_group_def values ('myGroup1','myschema2','mytbl1');
  select emaj.emaj_alter_group('myGroup1');
WARNING:  _alter_groups: in the group "myGroup1", the table or sequence myschema2.mytbl1 already belongs to the group "myGroup2".
ERROR:  _alter_groups: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 30 at RAISE
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
rollback;
-- log tablespace cannot be changed for sequence
begin;
  update emaj.emaj_group_def set grpdef_log_dat_tsp = 'b' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_alter_group('myGroup1');
WARNING:  _alter_groups: in the group "myGroup1", for the sequence myschema1."myTbl3_col31_seq", the data log tablespace is not NULL.
ERROR:  _alter_groups: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 30 at RAISE
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
rollback;
begin;
  update emaj.emaj_group_def set grpdef_log_idx_tsp = 'b' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_alter_group('myGroup1');
WARNING:  _alter_groups: in the group "myGroup1", for the sequence myschema1."myTbl3_col31_seq", the index log tablespace is not NULL.
ERROR:  _alter_groups: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 30 at RAISE
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
rollback;
-- dropped application table
begin;
  select emaj.emaj_disable_protection_by_event_triggers();
 emaj_disable_protection_by_event_triggers 
-------------------------------------------
                                         3
(1 row)

  drop table myschema1.mytbl2b;
  select emaj.emaj_enable_protection_by_event_triggers();
 emaj_enable_protection_by_event_triggers 
------------------------------------------
                                        3
(1 row)

  select emaj.emaj_alter_group('myGroup1');
WARNING:  _alter_groups: in the group "myGroup1", the table or sequence myschema1.mytbl2b does not exist.
WARNING:  _alter_groups: in the group "myGroup1", the table or sequence myschema1.mytbl2b_col20_seq does not exist.
ERROR:  _alter_groups: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 30 at RAISE
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
rollback;
-- should be OK
-- nothing to change
select emaj.emaj_alter_group('emptyGroup');
 emaj_alter_group 
------------------
                0
(1 row)

select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
    nspname     
----------------
 emaj
 emaj_myschema1
 emaj_myschema2
 emaj_myschema4
(4 rows)

-- only 3 tables to remove (+ log schemas emajb)
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl4';
select group_name, group_last_alter_time_id, group_has_waiting_changes, group_nb_table, group_nb_sequence
  from emaj.emaj_group where group_name = 'myGroup1';
 group_name | group_last_alter_time_id | group_has_waiting_changes | group_nb_table | group_nb_sequence 
------------+--------------------------+---------------------------+----------------+-------------------
 myGroup1   |                     6009 | t                         |              5 |                 2
(1 row)

select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_fk_groups: The table "myschema1.mytbl2" is referenced by the foreign key "mytbl4_col43_fkey" on the table "myschema1.mytbl4" that is outside the groups (myGroup1).
WARNING:  _check_fk_groups: The table "myschema1.mytbl1" is referenced by the foreign key "mytbl4_col44_fkey" on the table "myschema1.mytbl4" that is outside the groups (myGroup1).
 emaj_alter_group 
------------------
                4
(1 row)

select group_name, group_last_alter_time_id, group_has_waiting_changes, group_nb_table, group_nb_sequence
  from emaj.emaj_group where group_name = 'myGroup1';
 group_name | group_last_alter_time_id | group_has_waiting_changes | group_nb_table | group_nb_sequence 
------------+--------------------------+---------------------------+----------------+-------------------
 myGroup1   |                     6010 | f                         |              2 |                 2
(1 row)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
    nspname     
----------------
 emaj
 emaj_myschema1
 emaj_myschema2
 emaj_myschema4
(4 rows)

-- only 1 sequence to remove
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_fk_groups: The table "myschema1.mytbl2" is referenced by the foreign key "mytbl4_col43_fkey" on the table "myschema1.mytbl4" that is outside the groups (myGroup1).
WARNING:  _check_fk_groups: The table "myschema1.mytbl1" is referenced by the foreign key "mytbl4_col44_fkey" on the table "myschema1.mytbl4" that is outside the groups (myGroup1).
 emaj_alter_group 
------------------
                3
(1 row)

select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence 
----------------+-------------------
              2 |                 1
(1 row)

-- 3 tables to add
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2b',NULL,NULL,NULL,'tsp log''2','tsp log''2');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3',10,NULL,NULL,'tsplog1');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl4',20,NULL,NULL,'tsplog1','tsp log''2');
select group_name, group_last_alter_time_id, group_has_waiting_changes, group_nb_table, group_nb_sequence
  from emaj.emaj_group where group_name = 'myGroup1';
 group_name | group_last_alter_time_id | group_has_waiting_changes | group_nb_table | group_nb_sequence 
------------+--------------------------+---------------------------+----------------+-------------------
 myGroup1   |                     6011 | t                         |              2 |                 1
(1 row)

select emaj.emaj_alter_group('myGroup1');
NOTICE:  table "myTbl3_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.myTbl3" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.myTbl3" does not exist, skipping
NOTICE:  table "mytbl4_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl4" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl4" does not exist, skipping
NOTICE:  table "mytbl2b_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl2b" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl2b" does not exist, skipping
 emaj_alter_group 
------------------
                6
(1 row)

select group_name, group_last_alter_time_id, group_has_waiting_changes, group_nb_table, group_nb_sequence
  from emaj.emaj_group where group_name = 'myGroup1';
 group_name | group_last_alter_time_id | group_has_waiting_changes | group_nb_table | group_nb_sequence 
------------+--------------------------+---------------------------+----------------+-------------------
 myGroup1   |                     6012 | f                         |              5 |                 1
(1 row)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
    nspname     
----------------
 emaj
 emaj_myschema1
 emaj_myschema2
 emaj_myschema4
(4 rows)

-- only 1 sequence to add
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3_col31_seq',1);
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence 
----------------+-------------------
              5 |                 2
(1 row)

-- only change the log data tablespace for 1 table
update emaj.emaj_group_def set grpdef_log_dat_tsp = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'mytbl2b_log';
 spcname 
---------
(0 rows)

update emaj.emaj_group_def set grpdef_log_dat_tsp = 'tsp log''2' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'mytbl2b_log';
  spcname  
-----------
 tsp log'2
(1 row)

-- change the log data tablespace for all tables of a group
update emaj.emaj_group_def set grpdef_log_dat_tsp = case when grpdef_log_dat_tsp is NULL then 'tsplog1' when grpdef_log_dat_tsp = 'tsplog1' then 'tsp log''2' else NULL end where grpdef_schema = 'myschema1' and grpdef_tblseq not like '%seq';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

update emaj.emaj_group_def set grpdef_log_dat_tsp = case when grpdef_log_dat_tsp = 'tsplog1' then NULL when grpdef_log_dat_tsp = 'tsp log''2' then 'tsplog1' else 'tsp log''2' end where grpdef_schema = 'myschema1' and grpdef_tblseq not like '%seq';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

-- only change the log index tablespace, using a session default tablespace
update emaj.emaj_group_def set grpdef_log_idx_tsp = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
set default_tablespace = tspemaj_renamed;
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

reset default_tablespace;
select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'mytbl2b_log_idx';
     spcname     
-----------------
 tspemaj_renamed
(1 row)

update emaj.emaj_group_def set grpdef_log_idx_tsp = 'tsp log''2' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'mytbl2b_log_idx';
  spcname  
-----------
 tsp log'2
(1 row)

-- only change the priority
update emaj.emaj_group_def set grpdef_priority = 30 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1' and upper_inf(rel_time_range);
 rel_priority 
--------------
           30
(1 row)

update emaj.emaj_group_def set grpdef_priority = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1' and upper_inf(rel_time_range);
 rel_priority 
--------------
             
(1 row)

update emaj.emaj_group_def set grpdef_priority = 20 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1' and upper_inf(rel_time_range);
 rel_priority 
--------------
           20
(1 row)

-- change the table structure
alter table myschema1.mytbl1 add column newcol int;
select emaj.emaj_alter_group('myGroup1');
NOTICE:  table "mytbl1_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
 emaj_alter_group 
------------------
                7
(1 row)

alter table myschema1.mytbl1 rename newcol to newcol2;
select emaj.emaj_alter_group('myGroup1');
NOTICE:  table "mytbl1_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
 emaj_alter_group 
------------------
                7
(1 row)

alter table myschema1.mytbl1 alter column newcol2 type bigint;
select emaj.emaj_alter_group('myGroup1');
NOTICE:  table "mytbl1_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
 emaj_alter_group 
------------------
                7
(1 row)

alter table myschema1.mytbl1 alter column newcol2 set default 0;
-- NB: changing default has no impact on emaj component 
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

alter table myschema1.mytbl1 drop column newcol2;
select emaj.emaj_alter_group('myGroup1');
NOTICE:  table "mytbl1_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
 emaj_alter_group 
------------------
                7
(1 row)

-- rename a table and/or change its schema
alter table myschema1.mytbl1 rename to mytbl1_new_name;
update emaj.emaj_group_def set grpdef_tblseq = 'mytbl1_new_name' 
  where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
NOTICE:  drop cascades to trigger emaj_log_trg on table myschema1.mytbl1_new_name
NOTICE:  table "mytbl1_new_name_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1_new_name" does not exist, skipping
 emaj_alter_group 
------------------
                7
(1 row)

alter table myschema1.mytbl1_new_name set schema public;
update emaj.emaj_group_def set grpdef_schema = 'public'
  where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1_new_name';
select emaj.emaj_alter_group('myGroup1');
NOTICE:  drop cascades to trigger emaj_log_trg on table mytbl1_new_name
NOTICE:  table "mytbl1_new_name_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "public.mytbl1_new_name" does not exist, skipping
 emaj_alter_group 
------------------
                7
(1 row)

alter table public.mytbl1_new_name rename to mytbl1;
alter table public.mytbl1 set schema myschema1;
update emaj.emaj_group_def set grpdef_schema = 'myschema1', grpdef_tblseq = 'mytbl1'
  where grpdef_schema = 'public' and grpdef_tblseq = 'mytbl1_new_name';
-- the next call gives a useless mark name parameter (the group is in idle state)
select emaj.emaj_alter_group('myGroup1','useless_mark_name');
NOTICE:  drop cascades to trigger emaj_log_trg on table myschema1.mytbl1
NOTICE:  table "mytbl1_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
 emaj_alter_group 
------------------
                7
(1 row)

-- missing emaj components
select emaj.emaj_disable_protection_by_event_triggers();
 emaj_disable_protection_by_event_triggers 
-------------------------------------------
                                         3
(1 row)

drop trigger emaj_log_trg on myschema1.mytbl1;
select emaj.emaj_alter_group('myGroup1');
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
NOTICE:  table "mytbl1_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
 emaj_alter_group 
------------------
                7
(1 row)

drop function emaj_myschema1.mytbl1_log_fnct() cascade;
NOTICE:  drop cascades to trigger emaj_log_trg on table myschema1.mytbl1
select emaj.emaj_alter_group('myGroup1');
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
NOTICE:  function emaj_myschema1.mytbl1_log_fnct() does not exist, skipping
NOTICE:  table "mytbl1_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
 emaj_alter_group 
------------------
                7
(1 row)

drop table emaj_myschema1.mytbl1_log;
select emaj.emaj_alter_group('myGroup1');
NOTICE:  table "mytbl1_log" does not exist, skipping
NOTICE:  table "mytbl1_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
 emaj_alter_group 
------------------
                7
(1 row)

select emaj.emaj_enable_protection_by_event_triggers();
 emaj_enable_protection_by_event_triggers 
------------------------------------------
                                        3
(1 row)

-- multiple emaj_alter_group() on a logging group => fails
-- this test is commented because the generated error message differs from one run to another
--begin;
--  select emaj.emaj_start_group('myGroup4');
--  select emaj.emaj_alter_group('myGroup4');
--  select emaj.emaj_alter_group('myGroup4');
--rollback;
-----------------------------
-- emaj_alter_groups() tests on IDLE groups
-----------------------------
-- unknown groups
select emaj.emaj_alter_groups('{"myGroup1","unknownGroup"}');
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 17 at SQL statement
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
-- no group at all
select emaj.emaj_alter_groups('{NULL,""}');
WARNING:  _check_group_names: No group to process.
 emaj_alter_groups 
-------------------
                  
(1 row)

-- groups in logging state
begin;
  select emaj.emaj_start_groups('{"myGroup1","myGroup2"}','');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
 emaj_start_groups 
-------------------
                15
(1 row)

  select emaj.emaj_disable_protection_by_event_triggers();
 emaj_disable_protection_by_event_triggers 
-------------------------------------------
                                         3
(1 row)

  drop table emaj_myschema1.mytbl1_log;
  drop table emaj_myschema2.mytbl1_log;
  select emaj.emaj_enable_protection_by_event_triggers();
 emaj_enable_protection_by_event_triggers 
------------------------------------------
                                        3
(1 row)

  select emaj.emaj_alter_groups('{"myGroup2","myGroup1","myGroup4"}');
ERROR:  alter_exec: Cannot repair the table myschema1.mytbl1. Its group myGroup1 is in LOGGING state.
CONTEXT:  PL/pgSQL function emaj._alter_exec(bigint,boolean) line 35 at RAISE
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 56 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
rollback;
-- alter groups with a table now already belonging to another group
begin;
  insert into emaj.emaj_group_def values ('myGroup1','myschema2','mytbl1');
  select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _alter_groups: the table myschema2.mytbl1 is assigned several times.
ERROR:  _alter_groups: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 30 at RAISE
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
rollback;
-- a PRIMARY KEY is missing
begin;
  alter table myschema1.mytbl4 drop constraint mytbl4_pkey;
  select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _alter_groups: in the group "myGroup1", the table myschema1.mytbl4 has no PRIMARY KEY.
ERROR:  _alter_groups: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 30 at RAISE
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
rollback;
-- should be OK
-- 3 tables and 1 sequence to remove
select group_name, group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1' or group_name = 'myGroup2' order by 1;
 group_name | group_nb_table | group_nb_sequence 
------------+----------------+-------------------
 myGroup1   |              5 |                 2
 myGroup2   |              6 |                 2
(2 rows)

delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema2' and grpdef_tblseq = 'mytbl4';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
WARNING:  _check_fk_groups: The table "myschema2.mytbl2" is referenced by the foreign key "mytbl4_col43_fkey" on the table "myschema2.mytbl4" that is outside the groups (myGroup1,myGroup2).
WARNING:  _check_fk_groups: The table "myschema2.mytbl1" is referenced by the foreign key "mytbl4_col44_fkey" on the table "myschema2.mytbl4" that is outside the groups (myGroup1,myGroup2).
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
 emaj_alter_groups 
-------------------
                11
(1 row)

select group_name, group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1' or group_name = 'myGroup2' order by 1;
 group_name | group_nb_table | group_nb_sequence 
------------+----------------+-------------------
 myGroup1   |              3 |                 1
 myGroup2   |              5 |                 2
(2 rows)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
    nspname     
----------------
 emaj
 emaj_myschema1
 emaj_myschema2
 emaj_myschema4
(4 rows)

-- 3 tables and 1 sequence to add
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2b',NULL,NULL,NULL,'tsp log''2','tsp log''2');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3',10,NULL,NULL,'tsplog1');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl4',NULL,NULL,'myschema2_mytbl4');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3_col31_seq',1);
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
NOTICE:  table "myTbl3_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.myTbl3" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.myTbl3" does not exist, skipping
NOTICE:  table "mytbl2b_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl2b" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl2b" does not exist, skipping
NOTICE:  table "mytbl4_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.mytbl4" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.mytbl4" does not exist, skipping
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
 emaj_alter_groups 
-------------------
                15
(1 row)

select group_name, group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1' or group_name = 'myGroup2' order by 1;
 group_name | group_nb_table | group_nb_sequence 
------------+----------------+-------------------
 myGroup1   |              5 |                 2
 myGroup2   |              6 |                 2
(2 rows)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
    nspname     
----------------
 emaj
 emaj_myschema1
 emaj_myschema2
 emaj_myschema4
(4 rows)

-- only change the log data tablespace for 1 table, the log index tablespace for another table and the priority for a third one
update emaj.emaj_group_def set grpdef_log_dat_tsp = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
update emaj.emaj_group_def set grpdef_log_idx_tsp = 'tsplog1' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'mytbl6';
update emaj.emaj_group_def set grpdef_priority = 30 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
set default_tablespace = tspemaj_renamed;
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
 emaj_alter_groups 
-------------------
                15
(1 row)

reset default_tablespace;
select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'mytbl2b_log';
     spcname     
-----------------
 tspemaj_renamed
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'mytbl6_log_idx';
 spcname 
---------
 tsplog1
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1' and upper_inf(rel_time_range);
 rel_priority 
--------------
           30
(1 row)

--
update emaj.emaj_group_def set grpdef_log_dat_tsp = 'tsp log''2' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
update emaj.emaj_group_def set grpdef_log_idx_tsp = NULL where grpdef_schema = 'myschema2' and grpdef_tblseq = 'mytbl6';
update emaj.emaj_group_def set grpdef_priority = 20 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
 emaj_alter_groups 
-------------------
                15
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'mytbl2b_log';
  spcname  
-----------
 tsp log'2
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'mytbl6_log_idx';
 spcname 
---------
(0 rows)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1' and upper_inf(rel_time_range);
 rel_priority 
--------------
           20
(1 row)

-- move 1 table and 1 sequence from a group to another
update emaj.emaj_group_def set grpdef_group = 'myGroup1' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3';
update emaj.emaj_group_def set grpdef_group = 'myGroup1' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3_col31_seq';
select rel_group, count(*) from emaj.emaj_relation where rel_group like 'myGroup%' and upper_inf(rel_time_range) group by 1 order by 1;
 rel_group | count 
-----------+-------
 myGroup1  |     7
 myGroup2  |     8
 myGroup4  |     5
(3 rows)

select group_name, group_last_alter_time_id, group_has_waiting_changes, group_nb_table, group_nb_sequence
  from emaj.emaj_group where group_name IN ('myGroup1','myGroup2') order by group_name;
 group_name | group_last_alter_time_id | group_has_waiting_changes | group_nb_table | group_nb_sequence 
------------+--------------------------+---------------------------+----------------+-------------------
 myGroup1   |                     6039 | t                         |              5 |                 2
 myGroup2   |                     6039 | t                         |              6 |                 2
(2 rows)

select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
 emaj_alter_groups 
-------------------
                15
(1 row)

select group_name, group_last_alter_time_id, group_has_waiting_changes, group_nb_table, group_nb_sequence
  from emaj.emaj_group where group_name IN ('myGroup1','myGroup2') order by group_name;
 group_name | group_last_alter_time_id | group_has_waiting_changes | group_nb_table | group_nb_sequence 
------------+--------------------------+---------------------------+----------------+-------------------
 myGroup1   |                     6040 | f                         |              6 |                 3
 myGroup2   |                     6040 | f                         |              5 |                 1
(2 rows)

select rel_group, count(*) from emaj.emaj_relation where rel_group like 'myGroup%' and upper_inf(rel_time_range) group by 1 order by 1;
 rel_group | count 
-----------+-------
 myGroup1  |     9
 myGroup2  |     6
 myGroup4  |     5
(3 rows)

update emaj.emaj_group_def set grpdef_group = 'myGroup2' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3';
update emaj.emaj_group_def set grpdef_group = 'myGroup2' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3_col31_seq';
-- the next call gives a useless mark name parameter (the group is in idle state)
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}','useless_mark_name_%');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
 emaj_alter_groups 
-------------------
                15
(1 row)

select rel_group, count(*) from emaj.emaj_relation where rel_group like 'myGroup%' and upper_inf(rel_time_range) group by 1 order by 1;
 rel_group | count 
-----------+-------
 myGroup1  |     7
 myGroup2  |     8
 myGroup4  |     5
(3 rows)

-- empty idle groups
begin;
  delete from emaj.emaj_group_def where grpdef_group IN ('myGroup1','myGroup2');
  select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
 emaj_alter_groups 
-------------------
                 0
(1 row)

-- add one table or sequence to the empty groups
  insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl1',20);
  insert into emaj.emaj_group_def values ('myGroup2','myschema2','myseq1');
  select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
NOTICE:  table "mytbl1_log" does not exist, skipping
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
WARNING:  _check_fk_groups: The table "myschema1.mytbl1" is referenced by the foreign key "mytbl4_col44_fkey" on the table "myschema1.mytbl4" that is outside the groups (myGroup1,myGroup2).
 emaj_alter_groups 
-------------------
                 2
(1 row)

rollback;
-- checks are performed by the alterLogging.sql script
