-- misc.sql : test miscellaneous functions
--
-- set sequence restart value
alter sequence emaj.emaj_hist_hist_id_seq restart 5000;
alter sequence emaj.emaj_time_stamp_time_id_seq restart 5000;
alter sequence emaj.emaj_rlbk_rlbk_id_seq restart 5000;
alter sequence emaj.emaj_global_seq restart 50000;
-----------------------------
-- emaj_reset_group() test
-----------------------------
-- group is unknown in emaj_group_def
select emaj.emaj_reset_group(NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 28 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := 'IDLE')"
PL/pgSQL function emaj.emaj_reset_group(text) line 15 at PERFORM
select emaj.emaj_reset_group('unknownGroup');
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := 'IDLE')"
PL/pgSQL function emaj.emaj_reset_group(text) line 15 at PERFORM
-- group not in logging state
select emaj.emaj_reset_group('myGroup1');
ERROR:  _check_group_names: The group "myGroup1" is not in IDLE state.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 61 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := 'IDLE')"
PL/pgSQL function emaj.emaj_reset_group(text) line 15 at PERFORM
-- stop group
select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               7
(1 row)

-- log tables are not yet empty
select count(*) from emaj_myschema1.mytbl1_log;
 count 
-------
    18
(1 row)

select count(*) from emaj_myschema1.mytbl2_log;
 count 
-------
     2
(1 row)

select count(*) from emaj_myschema1.mytbl2b_log;
 count 
-------
     2
(1 row)

select count(*) from emaj_myschema1."myTbl3_log";
 count 
-------
    10
(1 row)

select count(*) from emaj_myschema1.mytbl4_log;
 count 
-------
     1
(1 row)

-- should be OK
select emaj.emaj_reset_group('myGroup1');
 emaj_reset_group 
------------------
                7
(1 row)

begin;
  select emaj.emaj_stop_group('emptyGroup');
 emaj_stop_group 
-----------------
               0
(1 row)

  select emaj.emaj_reset_group('emptyGroup');
 emaj_reset_group 
------------------
                0
(1 row)

rollback;
select count(*) from emaj_myschema1.mytbl1_log;
 count 
-------
     0
(1 row)

select count(*) from emaj_myschema1.mytbl2_log;
 count 
-------
     0
(1 row)

select count(*) from emaj_myschema1.mytbl2b_log;
 count 
-------
     0
(1 row)

select count(*) from emaj_myschema1."myTbl3_log";
 count 
-------
     0
(1 row)

select count(*) from emaj_myschema1.mytbl4_log;
 count 
-------
     0
(1 row)

-- test the "no initial mark" error message for the emaj_gen_sql_group()
--   this test has been moved here because, the emaj_reset_group() function cannot be used into a transaction
select emaj.emaj_gen_sql_group('myGroup1', NULL, NULL, NULL);
NOTICE:  table "emaj_temp_script" does not exist, skipping
WARNING:  _gen_sql_groups: No mark exists for the group(s) "myGroup1".
 emaj_gen_sql_group 
--------------------
                  0
(1 row)

-- start myGroup1
select emaj.emaj_start_group('myGroup1','Mark21');
 emaj_start_group 
------------------
                7
(1 row)

-----------------------------
-- log updates on myschema2 between 3 mono-group and multi-groups marks 
-----------------------------
set search_path=public,myschema2;
-- set a multi-groups mark
select emaj.emaj_set_mark_groups(array['myGroup1','myGroup2'],'Multi-1');
 emaj_set_mark_groups 
----------------------
                   15
(1 row)

-- inserts/updates/deletes in myTbl1, myTbl2 and myTbl2b (via trigger)
insert into myTbl1 select i, 'ABC', E'\\014'::bytea from generate_series (1,10100) as i;
update myTbl1 set col13=E'\\034'::bytea where col11 <= 500;
delete from myTbl1 where col11 > 10000;
insert into myTbl2 select i, 'DEF', current_date from generate_series (1,900) as i;
-- set marks
select emaj.emaj_set_mark_group('myGroup2','Mark22');
 emaj_set_mark_group 
---------------------
                   8
(1 row)

select emaj.emaj_set_mark_groups(array['myGroup1','myGroup2'],'Multi-2');
 emaj_set_mark_groups 
----------------------
                   15
(1 row)

-- inserts/updates/deletes in myTbl3 and myTbl4
insert into "myTbl3" (col33) select generate_series(1000,1039,4)/100;
insert into myTbl4 select i,'FK...',i,1,'ABC' from generate_series (1,100) as i;
-- set marks
select emaj.emaj_set_mark_group('myGroup2','Mark23');
 emaj_set_mark_group 
---------------------
                   8
(1 row)

select emaj.emaj_set_mark_groups(array['myGroup1','myGroup2'],'Multi-3');
 emaj_set_mark_groups 
----------------------
                   15
(1 row)

-----------------------------
-- emaj_log_stat_group(), emaj_log_stat_groups(), emaj_detailled_log_stat_group() and emaj_detailled_log_stat_groups() test
-----------------------------
-- group is unknown in emaj_group_def
select * from emaj.emaj_log_stat_group(NULL,NULL,NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 28 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj._log_stat_groups(text[],boolean,text,text) line 24 at SQL statement
PL/pgSQL function emaj.emaj_log_stat_group(text,text,text) line 7 at RETURN QUERY
select * from emaj.emaj_log_stat_groups(array['unknownGroup'],NULL,NULL);
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj._log_stat_groups(text[],boolean,text,text) line 24 at SQL statement
PL/pgSQL function emaj.emaj_log_stat_groups(text[],text,text) line 7 at RETURN QUERY
select * from emaj.emaj_detailed_log_stat_group(NULL,NULL,NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 28 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj._detailed_log_stat_groups(text[],boolean,text,text) line 32 at PERFORM
PL/pgSQL function emaj.emaj_detailed_log_stat_group(text,text,text) line 8 at RETURN QUERY
select * from emaj.emaj_detailed_log_stat_groups(array['unknownGroup'],NULL,NULL);
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj._detailed_log_stat_groups(text[],boolean,text,text) line 32 at PERFORM
PL/pgSQL function emaj.emaj_detailed_log_stat_groups(text[],text,text) line 8 at RETURN QUERY
-- invalid marks
select * from emaj.emaj_log_stat_group('myGroup2','dummyStartMark',NULL);
ERROR:  _check_mark_name: The mark "dummyStartMark" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,text) line 41 at RAISE
SQL statement "SELECT emaj._check_mark_name (v_groupNames := v_groupNames, v_mark := v_firstMark, v_checkList := '')"
PL/pgSQL function emaj._check_marks_range(text[],text,text) line 56 at SQL statement
SQL statement "SELECT * FROM emaj._check_marks_range(v_groupNames, v_firstMark, v_lastMark)"
PL/pgSQL function emaj._log_stat_groups(text[],boolean,text,text) line 28 at SQL statement
PL/pgSQL function emaj.emaj_log_stat_group(text,text,text) line 7 at RETURN QUERY
select * from emaj.emaj_log_stat_group('myGroup2',NULL,'dummyEndMark');
ERROR:  _check_mark_name: The mark "dummyEndMark" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,text) line 41 at RAISE
SQL statement "SELECT emaj._check_mark_name (v_groupNames := v_groupNames, v_mark := v_lastMark, v_checkList := '')"
PL/pgSQL function emaj._check_marks_range(text[],text,text) line 65 at SQL statement
SQL statement "SELECT * FROM emaj._check_marks_range(v_groupNames, v_firstMark, v_lastMark)"
PL/pgSQL function emaj._log_stat_groups(text[],boolean,text,text) line 28 at SQL statement
PL/pgSQL function emaj.emaj_log_stat_group(text,text,text) line 7 at RETURN QUERY
select * from emaj.emaj_detailed_log_stat_group('myGroup2','dummyStartMark',NULL);
ERROR:  _check_mark_name: The mark "dummyStartMark" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,text) line 41 at RAISE
SQL statement "SELECT emaj._check_mark_name (v_groupNames := v_groupNames, v_mark := v_firstMark, v_checkList := '')"
PL/pgSQL function emaj._check_marks_range(text[],text,text) line 56 at SQL statement
SQL statement "SELECT * FROM emaj._check_marks_range(v_groupNames, v_firstMark, v_lastMark)"
PL/pgSQL function emaj._detailed_log_stat_groups(text[],boolean,text,text) line 35 at SQL statement
PL/pgSQL function emaj.emaj_detailed_log_stat_group(text,text,text) line 8 at RETURN QUERY
select * from emaj.emaj_detailed_log_stat_group('myGroup2',NULL,'dummyEndMark');
ERROR:  _check_mark_name: The mark "dummyEndMark" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,text) line 41 at RAISE
SQL statement "SELECT emaj._check_mark_name (v_groupNames := v_groupNames, v_mark := v_lastMark, v_checkList := '')"
PL/pgSQL function emaj._check_marks_range(text[],text,text) line 65 at SQL statement
SQL statement "SELECT * FROM emaj._check_marks_range(v_groupNames, v_firstMark, v_lastMark)"
PL/pgSQL function emaj._detailed_log_stat_groups(text[],boolean,text,text) line 35 at SQL statement
PL/pgSQL function emaj.emaj_detailed_log_stat_group(text,text,text) line 8 at RETURN QUERY
select * from emaj.emaj_log_stat_groups(array['myGroup1','myGroup2'],NULL,NULL);
ERROR:  _check_marks_range: The oldest marks of each group do not represent the same point in time.
CONTEXT:  PL/pgSQL function emaj._check_marks_range(text[],text,text) line 40 at RAISE
SQL statement "SELECT * FROM emaj._check_marks_range(v_groupNames, v_firstMark, v_lastMark)"
PL/pgSQL function emaj._log_stat_groups(text[],boolean,text,text) line 28 at SQL statement
PL/pgSQL function emaj.emaj_log_stat_groups(text[],text,text) line 7 at RETURN QUERY
select * from emaj.emaj_log_stat_groups(array['myGroup1','myGroup2'],'Multi-1','dummyEndMark');
ERROR:  _check_mark_name: The mark "dummyEndMark" does not exist for the groups "myGroup1, myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,text) line 43 at RAISE
SQL statement "SELECT emaj._check_mark_name (v_groupNames := v_groupNames, v_mark := v_lastMark, v_checkList := '')"
PL/pgSQL function emaj._check_marks_range(text[],text,text) line 65 at SQL statement
SQL statement "SELECT * FROM emaj._check_marks_range(v_groupNames, v_firstMark, v_lastMark)"
PL/pgSQL function emaj._log_stat_groups(text[],boolean,text,text) line 28 at SQL statement
PL/pgSQL function emaj.emaj_log_stat_groups(text[],text,text) line 7 at RETURN QUERY
select * from emaj.emaj_detailed_log_stat_groups(array['myGroup1','myGroup2'],NULL,NULL);
ERROR:  _check_marks_range: The oldest marks of each group do not represent the same point in time.
CONTEXT:  PL/pgSQL function emaj._check_marks_range(text[],text,text) line 40 at RAISE
SQL statement "SELECT * FROM emaj._check_marks_range(v_groupNames, v_firstMark, v_lastMark)"
PL/pgSQL function emaj._detailed_log_stat_groups(text[],boolean,text,text) line 35 at SQL statement
PL/pgSQL function emaj.emaj_detailed_log_stat_groups(text[],text,text) line 8 at RETURN QUERY
select * from emaj.emaj_detailed_log_stat_groups(array['myGroup1','myGroup2'],'Multi-1','dummyEndMark');
ERROR:  _check_mark_name: The mark "dummyEndMark" does not exist for the groups "myGroup1, myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,text) line 43 at RAISE
SQL statement "SELECT emaj._check_mark_name (v_groupNames := v_groupNames, v_mark := v_lastMark, v_checkList := '')"
PL/pgSQL function emaj._check_marks_range(text[],text,text) line 65 at SQL statement
SQL statement "SELECT * FROM emaj._check_marks_range(v_groupNames, v_firstMark, v_lastMark)"
PL/pgSQL function emaj._detailed_log_stat_groups(text[],boolean,text,text) line 35 at SQL statement
PL/pgSQL function emaj.emaj_detailed_log_stat_groups(text[],text,text) line 8 at RETURN QUERY
-- start mark > end mark
-- original test (uncomment for unit test)
--  select * from emaj.emaj_log_stat_group('myGroup2','Mark23','Mark22');
--  select * from emaj.emaj_detailed_log_stat_group('myGroup2','Mark23','Mark22');
-- just check the error is trapped, because the error message contains timestamps
create function test_log(v_groupName TEXT, v_firstMark TEXT, v_lastMark TEXT) returns void language plpgsql as 
$$
begin
  begin
    perform count(*) from emaj.emaj_log_stat_group(v_groupName,v_firstMark,v_lastMark);
    return;
  exception when raise_exception then
    raise notice 'Error trapped on emaj_log_stat_group() call';
  end;
  begin
    perform count(*) from emaj.emaj_detailed_log_stat_group(v_groupName,v_firstMark,v_lastMark);
    return;
  exception when raise_exception then
    raise notice 'Error trapped on emaj_detailed_log_stat_group() call';
  end;
  return;
end;
$$;
select test_log('myGroup2','Mark23','Mark22');
NOTICE:  Error trapped on emaj_log_stat_group() call
NOTICE:  Error trapped on emaj_detailed_log_stat_group() call
 test_log 
----------
 
(1 row)

select test_log('myGroup2','EMAJ_LAST_MARK','Mark22');
NOTICE:  Error trapped on emaj_log_stat_group() call
NOTICE:  Error trapped on emaj_detailed_log_stat_group() call
 test_log 
----------
 
(1 row)

drop function test_log(text,text,text);
-- should be ok
select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows from emaj.emaj_log_stat_group('myGroup2',NULL,NULL)
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark21          |                |        10
 myGroup2   | myschema2   | mytbl1     | Mark21          |                |     10700
 myGroup2   | myschema2   | mytbl2     | Mark21          |                |       900
 myGroup2   | myschema2   | mytbl4     | Mark21          |                |       100
 myGroup2   | myschema2   | mytbl5     | Mark21          |                |         0
 myGroup2   | myschema2   | mytbl6     | Mark21          |                |         0
(6 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows from emaj.emaj_log_stat_group('myGroup2','','')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark21          |                |        10
 myGroup2   | myschema2   | mytbl1     | Mark21          |                |     10700
 myGroup2   | myschema2   | mytbl2     | Mark21          |                |       900
 myGroup2   | myschema2   | mytbl4     | Mark21          |                |       100
 myGroup2   | myschema2   | mytbl5     | Mark21          |                |         0
 myGroup2   | myschema2   | mytbl6     | Mark21          |                |         0
(6 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows from emaj.emaj_log_stat_group('myGroup2','Mark21',NULL)
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark21          |                |        10
 myGroup2   | myschema2   | mytbl1     | Mark21          |                |     10700
 myGroup2   | myschema2   | mytbl2     | Mark21          |                |       900
 myGroup2   | myschema2   | mytbl4     | Mark21          |                |       100
 myGroup2   | myschema2   | mytbl5     | Mark21          |                |         0
 myGroup2   | myschema2   | mytbl6     | Mark21          |                |         0
(6 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows from emaj.emaj_log_stat_group('myGroup2','Mark21','EMAJ_LAST_MARK')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark21          | Multi-3        |        10
 myGroup2   | myschema2   | mytbl1     | Mark21          | Multi-3        |     10700
 myGroup2   | myschema2   | mytbl2     | Mark21          | Multi-3        |       900
 myGroup2   | myschema2   | mytbl4     | Mark21          | Multi-3        |       100
 myGroup2   | myschema2   | mytbl5     | Mark21          | Multi-3        |         0
 myGroup2   | myschema2   | mytbl6     | Mark21          | Multi-3        |         0
(6 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows from emaj.emaj_log_stat_group('myGroup2',NULL,'Mark22')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark21          | Mark22         |         0
 myGroup2   | myschema2   | mytbl1     | Mark21          | Mark22         |     10700
 myGroup2   | myschema2   | mytbl2     | Mark21          | Mark22         |       900
 myGroup2   | myschema2   | mytbl4     | Mark21          | Mark22         |         0
 myGroup2   | myschema2   | mytbl5     | Mark21          | Mark22         |         0
 myGroup2   | myschema2   | mytbl6     | Mark21          | Mark22         |         0
(6 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows from emaj.emaj_log_stat_group('myGroup2','Mark22','Mark22')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark22          | Mark22         |         0
 myGroup2   | myschema2   | mytbl1     | Mark22          | Mark22         |         0
 myGroup2   | myschema2   | mytbl2     | Mark22          | Mark22         |         0
 myGroup2   | myschema2   | mytbl4     | Mark22          | Mark22         |         0
 myGroup2   | myschema2   | mytbl5     | Mark22          | Mark22         |         0
 myGroup2   | myschema2   | mytbl6     | Mark22          | Mark22         |         0
(6 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows from emaj.emaj_log_stat_group('myGroup2','Mark22','Mark23')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark22          | Mark23         |        10
 myGroup2   | myschema2   | mytbl1     | Mark22          | Mark23         |         0
 myGroup2   | myschema2   | mytbl2     | Mark22          | Mark23         |         0
 myGroup2   | myschema2   | mytbl4     | Mark22          | Mark23         |       100
 myGroup2   | myschema2   | mytbl5     | Mark22          | Mark23         |         0
 myGroup2   | myschema2   | mytbl6     | Mark22          | Mark23         |         0
(6 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows from emaj.emaj_log_stat_group('myGroup2','EMAJ_LAST_MARK','')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------
 myGroup2   | myschema2   | myTbl3     | Multi-3         |                |         0
 myGroup2   | myschema2   | mytbl1     | Multi-3         |                |         0
 myGroup2   | myschema2   | mytbl2     | Multi-3         |                |         0
 myGroup2   | myschema2   | mytbl4     | Multi-3         |                |         0
 myGroup2   | myschema2   | mytbl5     | Multi-3         |                |         0
 myGroup2   | myschema2   | mytbl6     | Multi-3         |                |         0
(6 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows
  from emaj.emaj_log_stat_groups(array['myGroup1','myGroup2'],'Multi-1',NULL)
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------
 myGroup1   | myschema1   | myTbl3     | Multi-1         |                |         0
 myGroup1   | myschema1   | mytbl1     | Multi-1         |                |         0
 myGroup1   | myschema1   | mytbl2     | Multi-1         |                |         0
 myGroup1   | myschema1   | mytbl2b    | Multi-1         |                |         0
 myGroup1   | myschema1   | mytbl4     | Multi-1         |                |         0
 myGroup2   | myschema2   | myTbl3     | Multi-1         |                |        10
 myGroup2   | myschema2   | mytbl1     | Multi-1         |                |     10700
 myGroup2   | myschema2   | mytbl2     | Multi-1         |                |       900
 myGroup2   | myschema2   | mytbl4     | Multi-1         |                |       100
 myGroup2   | myschema2   | mytbl5     | Multi-1         |                |         0
 myGroup2   | myschema2   | mytbl6     | Multi-1         |                |         0
(11 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_rows
  from emaj.emaj_log_stat_groups(array['myGroup1','myGroup2'],'Multi-1','Multi-3')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------
 myGroup1   | myschema1   | myTbl3     | Multi-1         | Multi-3        |         0
 myGroup1   | myschema1   | mytbl1     | Multi-1         | Multi-3        |         0
 myGroup1   | myschema1   | mytbl2     | Multi-1         | Multi-3        |         0
 myGroup1   | myschema1   | mytbl2b    | Multi-1         | Multi-3        |         0
 myGroup1   | myschema1   | mytbl4     | Multi-1         | Multi-3        |         0
 myGroup2   | myschema2   | myTbl3     | Multi-1         | Multi-3        |        10
 myGroup2   | myschema2   | mytbl1     | Multi-1         | Multi-3        |     10700
 myGroup2   | myschema2   | mytbl2     | Multi-1         | Multi-3        |       900
 myGroup2   | myschema2   | mytbl4     | Multi-1         | Multi-3        |       100
 myGroup2   | myschema2   | mytbl5     | Multi-1         | Multi-3        |         0
 myGroup2   | myschema2   | mytbl6     | Multi-1         | Multi-3        |         0
(11 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_group('myGroup2',NULL,NULL)
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------+-----------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark21          |                | postgres  | INSERT    |        10
 myGroup2   | myschema2   | mytbl1     | Mark21          |                | postgres  | DELETE    |       100
 myGroup2   | myschema2   | mytbl1     | Mark21          |                | postgres  | INSERT    |     10100
 myGroup2   | myschema2   | mytbl1     | Mark21          |                | postgres  | UPDATE    |       500
 myGroup2   | myschema2   | mytbl2     | Mark21          |                | postgres  | INSERT    |       900
 myGroup2   | myschema2   | mytbl4     | Mark21          |                | postgres  | INSERT    |       100
(6 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_group('myGroup2','','')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------+-----------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark21          |                | postgres  | INSERT    |        10
 myGroup2   | myschema2   | mytbl1     | Mark21          |                | postgres  | DELETE    |       100
 myGroup2   | myschema2   | mytbl1     | Mark21          |                | postgres  | INSERT    |     10100
 myGroup2   | myschema2   | mytbl1     | Mark21          |                | postgres  | UPDATE    |       500
 myGroup2   | myschema2   | mytbl2     | Mark21          |                | postgres  | INSERT    |       900
 myGroup2   | myschema2   | mytbl4     | Mark21          |                | postgres  | INSERT    |       100
(6 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_group('myGroup2','Mark21',NULL)
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------+-----------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark21          |                | postgres  | INSERT    |        10
 myGroup2   | myschema2   | mytbl1     | Mark21          |                | postgres  | DELETE    |       100
 myGroup2   | myschema2   | mytbl1     | Mark21          |                | postgres  | INSERT    |     10100
 myGroup2   | myschema2   | mytbl1     | Mark21          |                | postgres  | UPDATE    |       500
 myGroup2   | myschema2   | mytbl2     | Mark21          |                | postgres  | INSERT    |       900
 myGroup2   | myschema2   | mytbl4     | Mark21          |                | postgres  | INSERT    |       100
(6 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_group('myGroup2','Mark21','EMAJ_LAST_MARK')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------+-----------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark21          | Multi-3        | postgres  | INSERT    |        10
 myGroup2   | myschema2   | mytbl1     | Mark21          | Multi-3        | postgres  | DELETE    |       100
 myGroup2   | myschema2   | mytbl1     | Mark21          | Multi-3        | postgres  | INSERT    |     10100
 myGroup2   | myschema2   | mytbl1     | Mark21          | Multi-3        | postgres  | UPDATE    |       500
 myGroup2   | myschema2   | mytbl2     | Mark21          | Multi-3        | postgres  | INSERT    |       900
 myGroup2   | myschema2   | mytbl4     | Mark21          | Multi-3        | postgres  | INSERT    |       100
(6 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_group('myGroup2',NULL,'Mark22')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------+-----------+-----------
 myGroup2   | myschema2   | mytbl1     | Mark21          | Mark22         | postgres  | DELETE    |       100
 myGroup2   | myschema2   | mytbl1     | Mark21          | Mark22         | postgres  | INSERT    |     10100
 myGroup2   | myschema2   | mytbl1     | Mark21          | Mark22         | postgres  | UPDATE    |       500
 myGroup2   | myschema2   | mytbl2     | Mark21          | Mark22         | postgres  | INSERT    |       900
(4 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_group('myGroup2','Mark22','Mark22')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------+-----------+-----------
(0 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_group('myGroup2','Mark22','Mark23')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------+-----------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark22          | Mark23         | postgres  | INSERT    |        10
 myGroup2   | myschema2   | mytbl4     | Mark22          | Mark23         | postgres  | INSERT    |       100
(2 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_group('myGroup2','EMAJ_LAST_MARK','')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------+-----------+-----------
(0 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_groups(array['myGroup1','myGroup2'],'Multi-1',NULL)
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------+-----------+-----------
 myGroup2   | myschema2   | myTbl3     | Multi-1         |                | postgres  | INSERT    |        10
 myGroup2   | myschema2   | mytbl1     | Multi-1         |                | postgres  | DELETE    |       100
 myGroup2   | myschema2   | mytbl1     | Multi-1         |                | postgres  | INSERT    |     10100
 myGroup2   | myschema2   | mytbl1     | Multi-1         |                | postgres  | UPDATE    |       500
 myGroup2   | myschema2   | mytbl2     | Multi-1         |                | postgres  | INSERT    |       900
 myGroup2   | myschema2   | mytbl4     | Multi-1         |                | postgres  | INSERT    |       100
(6 rows)

select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_groups(array['myGroup1','myGroup2'],'Multi-1','Multi-3')
  order by stat_group, stat_schema, stat_table;
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------+-----------+-----------
 myGroup2   | myschema2   | myTbl3     | Multi-1         | Multi-3        | postgres  | INSERT    |        10
 myGroup2   | myschema2   | mytbl1     | Multi-1         | Multi-3        | postgres  | DELETE    |       100
 myGroup2   | myschema2   | mytbl1     | Multi-1         | Multi-3        | postgres  | INSERT    |     10100
 myGroup2   | myschema2   | mytbl1     | Multi-1         | Multi-3        | postgres  | UPDATE    |       500
 myGroup2   | myschema2   | mytbl2     | Multi-1         | Multi-3        | postgres  | INSERT    |       900
 myGroup2   | myschema2   | mytbl4     | Multi-1         | Multi-3        | postgres  | INSERT    |       100
(6 rows)

-- empty group
select * from emaj.emaj_log_stat_group('emptyGroup',NULL,NULL);
 stat_group | stat_schema | stat_table | stat_first_mark | stat_first_mark_datetime | stat_last_mark | stat_last_mark_datetime | stat_rows 
------------+-------------+------------+-----------------+--------------------------+----------------+-------------------------+-----------
(0 rows)

select * from emaj.emaj_detailed_log_stat_group('emptyGroup',NULL,NULL);
 stat_group | stat_schema | stat_table | stat_first_mark | stat_first_mark_datetime | stat_last_mark | stat_last_mark_datetime | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+--------------------------+----------------+-------------------------+-----------+-----------+-----------
(0 rows)

-- groups without any mark
begin;
  select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               7
(1 row)

  select emaj.emaj_reset_group('myGroup1');
 emaj_reset_group 
------------------
                7
(1 row)

  select * from emaj.emaj_log_stat_groups(array['myGroup1'],NULL,NULL);
 stat_group | stat_schema | stat_table | stat_first_mark | stat_first_mark_datetime | stat_last_mark | stat_last_mark_datetime | stat_rows 
------------+-------------+------------+-----------------+--------------------------+----------------+-------------------------+-----------
 myGroup1   | myschema1   | myTbl3     |                 |                          |                |                         |         0
 myGroup1   | myschema1   | mytbl1     |                 |                          |                |                         |         0
 myGroup1   | myschema1   | mytbl2     |                 |                          |                |                         |         0
 myGroup1   | myschema1   | mytbl2b    |                 |                          |                |                         |         0
 myGroup1   | myschema1   | mytbl4     |                 |                          |                |                         |         0
(5 rows)

  select * from emaj.emaj_detailed_log_stat_groups(array['myGroup1'],NULL,NULL);
 stat_group | stat_schema | stat_table | stat_first_mark | stat_first_mark_datetime | stat_last_mark | stat_last_mark_datetime | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+--------------------------+----------------+-------------------------+-----------+-----------+-----------
(0 rows)

rollback;
-----------------------------
-- emaj_estimate_rollback_group() and emaj_estimate_rollback_groups() tests
-----------------------------
-- group is unknown in emaj_group_def
select emaj.emaj_estimate_rollback_group(NULL,NULL,FALSE);
ERROR:  _check_group_names: No group to process.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 28 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj._estimate_rollback_groups(text[],boolean,text,boolean) line 17 at SQL statement
PL/pgSQL function emaj.emaj_estimate_rollback_group(text,text,boolean) line 7 at RETURN
select emaj.emaj_estimate_rollback_group('unknownGroup',NULL,TRUE);
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj._estimate_rollback_groups(text[],boolean,text,boolean) line 17 at SQL statement
PL/pgSQL function emaj.emaj_estimate_rollback_group(text,text,boolean) line 7 at RETURN
select emaj.emaj_estimate_rollback_groups('{"myGroup2","unknownGroup"}',NULL,TRUE);
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj._estimate_rollback_groups(text[],boolean,text,boolean) line 17 at SQL statement
PL/pgSQL function emaj.emaj_estimate_rollback_groups(text[],text,boolean) line 7 at RETURN
-- invalid marks
select emaj.emaj_estimate_rollback_group('myGroup2','dummyMark',TRUE);
ERROR:  _check_mark_name: The mark "dummyMark" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,text) line 41 at RAISE
SQL statement "SELECT emaj._check_mark_name(v_groupNames := v_groupNames, v_mark := v_mark, v_checkList := 'ACTIVE')"
PL/pgSQL function emaj._rlbk_check(text[],text,boolean,boolean) line 21 at SQL statement
SQL statement "SELECT emaj._rlbk_check(v_groupNames, v_mark, TRUE, TRUE)"
PL/pgSQL function emaj._estimate_rollback_groups(text[],boolean,text,boolean) line 24 at SQL statement
PL/pgSQL function emaj.emaj_estimate_rollback_group(text,text,boolean) line 7 at RETURN
select emaj.emaj_estimate_rollback_groups(array['myGroup1','myGroup2'],'Mark21',TRUE);
ERROR:  _check_mark_name: The mark "Mark21" does not represent the same point in time for all groups.
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,text) line 50 at RAISE
SQL statement "SELECT emaj._check_mark_name(v_groupNames := v_groupNames, v_mark := v_mark, v_checkList := 'ACTIVE')"
PL/pgSQL function emaj._rlbk_check(text[],text,boolean,boolean) line 21 at SQL statement
SQL statement "SELECT emaj._rlbk_check(v_groupNames, v_mark, TRUE, TRUE)"
PL/pgSQL function emaj._estimate_rollback_groups(text[],boolean,text,boolean) line 24 at SQL statement
PL/pgSQL function emaj.emaj_estimate_rollback_groups(text[],text,boolean) line 7 at RETURN
-- group not in logging state
begin;
  select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               7
(1 row)

  select emaj.emaj_estimate_rollback_group('myGroup1','Mark11',FALSE);
ERROR:  _check_group_names: The group "myGroup1" is not in LOGGING state.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 72 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := FALSE, v_lockGroups := TRUE,
                                     v_checkList := 'LOGGING,ROLLBACKABLE')"
PL/pgSQL function emaj._rlbk_check(text[],text,boolean,boolean) line 13 at SQL statement
SQL statement "SELECT emaj._rlbk_check(v_groupNames, v_mark, TRUE, TRUE)"
PL/pgSQL function emaj._estimate_rollback_groups(text[],boolean,text,boolean) line 24 at SQL statement
PL/pgSQL function emaj.emaj_estimate_rollback_group(text,text,boolean) line 7 at RETURN
rollback;
-- estimate a rollback of an empty group
select emaj.emaj_estimate_rollback_group('emptyGroup','EGM4',TRUE);
 emaj_estimate_rollback_group 
------------------------------
 @ 0
(1 row)

-- insert 1 timing parameters (=> so use 3 default values)
INSERT INTO emaj.emaj_param (param_key, param_value_interval) VALUES ('fixed_step_rollback_duration','2.5 millisecond'::interval);
-- analyze tables to get proper reltuples statistics
vacuum analyze myschema2.mytbl4;
select reltuples from pg_class, pg_namespace where relnamespace=pg_namespace.oid and relname = 'mytbl4' and nspname = 'myschema2';
 reltuples 
-----------
       100
(1 row)

-- estimate with empty rollback statistics and default parameters
delete from emaj.emaj_rlbk_stat;
-- estimates with empty rollback statistics but 1 temporarily modified parameter ; no table to rollback
-- check in passing that the simulation is not blocked by protections set on groups or marks
begin;
  select emaj.emaj_protect_group('myGroup2');
 emaj_protect_group 
--------------------
                  1
(1 row)

  select emaj.emaj_protect_mark_group('myGroup2','EMAJ_LAST_MARK');
 emaj_protect_mark_group 
-------------------------
                       1
(1 row)

  INSERT INTO emaj.emaj_param (param_key, param_value_interval) VALUES ('fixed_table_rollback_duration','1.4 millisecond'::interval);
  select emaj.emaj_estimate_rollback_group('myGroup2','EMAJ_LAST_MARK',FALSE);
 emaj_estimate_rollback_group 
------------------------------
 @ 0.0112 secs
(1 row)

-- should return 0.011200 sec
  select emaj.emaj_unprotect_mark_group('myGroup2','EMAJ_LAST_MARK');
 emaj_unprotect_mark_group 
---------------------------
                         1
(1 row)

  select emaj.emaj_unprotect_group('myGroup2');
 emaj_unprotect_group 
----------------------
                    1
(1 row)

rollback;
select emaj.emaj_estimate_rollback_group('myGroup2','Mark21',FALSE);
 emaj_estimate_rollback_group 
------------------------------
 @ 1.4251 secs
(1 row)

-- should return 1.425100 sec
-- estimates with empty rollback statistics but temporarily modified parameters
begin;
  INSERT INTO emaj.emaj_param (param_key, param_value_interval) VALUES ('avg_row_rollback_duration','150 microsecond'::interval);
  INSERT INTO emaj.emaj_param (param_key, param_value_interval) VALUES ('avg_row_delete_log_duration','12 microsecond'::interval);
  INSERT INTO emaj.emaj_param (param_key, param_value_interval) VALUES ('avg_fkey_check_duration','27 microsecond'::interval);
  UPDATE emaj.emaj_param SET param_value_interval = '7 millisecond'::interval WHERE param_key = 'fixed_step_rollback_duration';
  INSERT INTO emaj.emaj_param (param_key, param_value_interval) VALUES ('fixed_dblink_rollback_duration','2.5 millisecond'::interval);
  select emaj.emaj_estimate_rollback_groups('{"myGroup2"}','Mark21',TRUE);
 emaj_estimate_rollback_groups 
-------------------------------
 @ 1.8607 secs
(1 row)

-- should return 1.860700 sec
rollback;
-- estimate with added rollback statistics about fkey drops, recreations and checks
--   drop the foreign key on emaj_rlbk_stat to easily temporarily insert dummy rows
alter table emaj.emaj_rlbk_stat drop constraint emaj_rlbk_stat_rlbt_rlbk_id_fkey;
insert into emaj.emaj_rlbk_stat values
  ('DROP_FK','','','',1,1,'0.003 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('ADD_FK','myschema2','mytbl4','mytbl4_col44_fkey',1,300,'0.036 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('SET_FK_IMM','myschema2','mytbl4','mytbl4_col43_fkey',1,2000,'0.030 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('DROP_FK','','','',2,1,'0.0042 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('ADD_FK','myschema2','mytbl4','mytbl4_col44_fkey',2,200,'0.020 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('SET_FK_IMM','myschema2','mytbl4','mytbl4_col43_fkey',2,1200,'0.015 SECONDS'::interval);
select emaj.emaj_estimate_rollback_group('myGroup2','Mark21',FALSE);
 emaj_estimate_rollback_group 
------------------------------
 @ 1.440962 secs
(1 row)

-- should return 1.440962 sec
-- estimate with added statistics about tables rollbacks
insert into emaj.emaj_rlbk_stat values
  ('RLBK_TABLE','myschema2','mytbl1','',1,5350,'1.000 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('RLBK_TABLE','myschema2','mytbl2','',1,100,'0.004 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('RLBK_TABLE','myschema2','mytbl2','',2,200,'0.010 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('RLBK_TABLE','myschema2','mytbl2','',3,20000,'1.610 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('RLBK_TABLE','myschema2','myTbl3','',1,99,'0.004 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('RLBK_TABLE','myschema2','myTbl3','',2,101,'0.008 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('RLBK_TABLE','myschema2','mytbl4','',1,50000,'3.600 SECONDS'::interval);
select emaj.emaj_estimate_rollback_group('myGroup2','Mark21',FALSE);
 emaj_estimate_rollback_group 
------------------------------
 @ 2.309566 secs
(1 row)

-- should return 2.309566 sec
-- estimate with added statistics about log deletes and CTRLxDBLINK pseudo steps
insert into emaj.emaj_rlbk_stat values
  ('DELETE_LOG','myschema2','mytbl1','',1,5350,'0.250 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('DELETE_LOG','myschema2','mytbl2','',1,150,'0.001 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('DELETE_LOG','myschema2','mytbl2','',2,200,'0.003 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('DELETE_LOG','myschema2','mytbl2','',3,20000,'1.610 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('DELETE_LOG','myschema2','myTbl3','',1,99,'0.001 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('DELETE_LOG','myschema2','myTbl3','',2,151,'0.002 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('DELETE_LOG','myschema2','mytbl4','',1,50000,'0.900 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('CTRL+DBLINK','','','',1,10,'0.005 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('CTRL-DBLINK','','','',2,10,'0.035 SECONDS'::interval);
insert into emaj.emaj_rlbk_stat values
  ('CTRL-DBLINK','','','',3,10,'0.025 SECONDS'::interval);
select emaj.emaj_estimate_rollback_group('myGroup2','Mark21',FALSE);
 emaj_estimate_rollback_group 
------------------------------
 @ 2.675653 secs
(1 row)

-- should return 2.675653 sec
-- estimate with 2 groups and a SET_FK_DEF step
vacuum analyze myschema1.mytbl4;
select reltuples from pg_class, pg_namespace where relnamespace=pg_namespace.oid and relname = 'mytbl4' and nspname = 'myschema1';
 reltuples 
-----------
         1
(1 row)

begin;
-- temporarily insert new rows into myTbl4 of myschema1
  insert into myschema1.myTbl4 select i,'FK...',2,1,'ABC' from generate_series (10,20) as i;
  select emaj.emaj_estimate_rollback_groups('{"myGroup1","myGroup2"}','Multi-1',FALSE);
 emaj_estimate_rollback_groups 
-------------------------------
 @ 2.729023 secs
(1 row)

-- should return 2.729023 sec
rollback;
-- delete all manualy inserted rollback statistics, cleanup the statistics table and recreate its foreign key
delete from emaj.emaj_rlbk_stat;
vacuum emaj.emaj_rlbk_stat;
alter table emaj.emaj_rlbk_stat add FOREIGN KEY (rlbt_rlbk_id) REFERENCES emaj.emaj_rlbk (rlbk_id);
-----------------------------
-- emaj_snap_group() test
-----------------------------
-- set/reset directory for snaps
\! mkdir -p /tmp/emaj_test/snaps
\! rm -R /tmp/emaj_test/snaps
\! mkdir /tmp/emaj_test/snaps
-- group is unknown in emaj_group_def
select emaj.emaj_snap_group(NULL,NULL,NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 28 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj.emaj_snap_group(text,text,text) line 30 at PERFORM
select emaj.emaj_snap_group('unknownGroup',NULL,NULL);
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj.emaj_snap_group(text,text,text) line 30 at PERFORM
-- invalid directory
select emaj.emaj_snap_group('myGroup1',NULL,NULL);
ERROR:  emaj_snap_group: The directory parameter cannot be NULL.
CONTEXT:  PL/pgSQL function emaj.emaj_snap_group(text,text,text) line 33 at RAISE
select emaj.emaj_snap_group('myGroup1','unknown_directory',NULL);
ERROR:  relative path not allowed for COPY to file
CONTEXT:  SQL statement "COPY (SELECT * FROM myschema1."myTbl3" ORDER BY col31) TO 'unknown_directory/myschema1_myTbl3.snap' "
PL/pgSQL function emaj.emaj_snap_group(text,text,text) line 87 at EXECUTE
select emaj.emaj_snap_group('myGroup1','/unknown_directory',NULL);
ERROR:  could not open file "/unknown_directory/myschema1_myTbl3.snap" for writing: No such file or directory
HINT:  COPY TO instructs the PostgreSQL server process to write a file. You may want a client-side facility such as psql's \copy.
CONTEXT:  SQL statement "COPY (SELECT * FROM myschema1."myTbl3" ORDER BY col31) TO '/unknown_directory/myschema1_myTbl3.snap' "
PL/pgSQL function emaj.emaj_snap_group(text,text,text) line 87 at EXECUTE
-- invalid COPY TO options
select emaj.emaj_snap_group('myGroup1','/tmp/emaj_test/snaps','dummy_option');
ERROR:  syntax error at or near "dummy_option"
LINE 1: ...) TO '/tmp/emaj_test/snaps/myschema1_myTbl3.snap' dummy_opti...
                                                             ^
QUERY:  COPY (SELECT * FROM myschema1."myTbl3" ORDER BY col31) TO '/tmp/emaj_test/snaps/myschema1_myTbl3.snap' dummy_option
CONTEXT:  PL/pgSQL function emaj.emaj_snap_group(text,text,text) line 87 at EXECUTE
-- SQL injection attempt
select emaj.emaj_snap_group('myGroup1','/tmp/emaj_test/snaps','; CREATE ROLE fake LOGIN PASSWORD '''' SUPERUSER');
ERROR:  emaj_snap_group: The COPY options parameter format is invalid.
CONTEXT:  PL/pgSQL function emaj.emaj_snap_group(text,text,text) line 37 at RAISE
-- should be OK (even when executed twice, files being overwriten)
select emaj.emaj_snap_group('emptyGroup','/tmp/emaj_test/snaps','');
 emaj_snap_group 
-----------------
               0
(1 row)

\! ls /tmp/emaj_test/snaps
_INFO
select emaj.emaj_snap_group('myGroup1','/tmp/emaj_test/snaps','');
 emaj_snap_group 
-----------------
               7
(1 row)

select emaj.emaj_snap_group('myGroup1','/tmp/emaj_test/snaps','CSV HEADER DELIMITER '';'' ');
 emaj_snap_group 
-----------------
               7
(1 row)

\! ls /tmp/emaj_test/snaps
_INFO
myschema1_myTbl3.snap
myschema1_myTbl3_col31_seq.snap
myschema1_mytbl1.snap
myschema1_mytbl2.snap
myschema1_mytbl2b.snap
myschema1_mytbl2b_col20_seq.snap
myschema1_mytbl4.snap
-----------------------------
-- emaj_snap_log_group() test
-----------------------------
-- set/reset directory for log snaps
\! mkdir -p /tmp/emaj_test/log_snaps
\! rm -R /tmp/emaj_test/log_snaps
\! mkdir /tmp/emaj_test/log_snaps
-- group is unknown in emaj_group_def
select emaj.emaj_snap_log_group(NULL,NULL,NULL,NULL,NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 28 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj.emaj_snap_log_group(text,text,text,text,text) line 46 at PERFORM
select emaj.emaj_snap_log_group('unknownGroup',NULL,NULL,NULL,NULL);
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj.emaj_snap_log_group(text,text,text,text,text) line 46 at PERFORM
-- invalid directory
select emaj.emaj_snap_log_group('myGroup2',NULL,'EMAJ_LAST_MARK',NULL,NULL);
ERROR:  emaj_snap_log_group: The directory parameter cannot be NULL.
CONTEXT:  PL/pgSQL function emaj.emaj_snap_log_group(text,text,text,text,text) line 53 at RAISE
select emaj.emaj_snap_log_group('myGroup2',NULL,'EMAJ_LAST_MARK','unknown_directory',NULL);
ERROR:  relative path not allowed for COPY to file
CONTEXT:  SQL statement "COPY (SELECT * FROM emaj_myschema2."myTbl3_log" WHERE TRUE AND emaj_gid <= 61709 ORDER BY emaj_gid ASC) TO 'unknown_directory/myschema2_myTbl3_log.snap' "
PL/pgSQL function emaj.emaj_snap_log_group(text,text,text,text,text) line 97 at EXECUTE
select emaj.emaj_snap_log_group('myGroup2',NULL,'EMAJ_LAST_MARK','/unknown_directory',NULL);
ERROR:  could not open file "/unknown_directory/myschema2_myTbl3_log.snap" for writing: No such file or directory
HINT:  COPY TO instructs the PostgreSQL server process to write a file. You may want a client-side facility such as psql's \copy.
CONTEXT:  SQL statement "COPY (SELECT * FROM emaj_myschema2."myTbl3_log" WHERE TRUE AND emaj_gid <= 61709 ORDER BY emaj_gid ASC) TO '/unknown_directory/myschema2_myTbl3_log.snap' "
PL/pgSQL function emaj.emaj_snap_log_group(text,text,text,text,text) line 97 at EXECUTE
-- invalid start mark
select emaj.emaj_snap_log_group('myGroup2','unknownMark','EMAJ_LAST_MARK','/tmp/emaj_test/log_snaps',NULL);
ERROR:  _check_mark_name: The mark "unknownMark" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,text) line 41 at RAISE
SQL statement "SELECT emaj._check_mark_name (v_groupNames := v_groupNames, v_mark := v_firstMark, v_checkList := '')"
PL/pgSQL function emaj._check_marks_range(text[],text,text) line 56 at SQL statement
SQL statement "SELECT * FROM emaj._check_marks_range(ARRAY[v_groupName], v_firstMark, v_lastMark)"
PL/pgSQL function emaj.emaj_snap_log_group(text,text,text,text,text) line 49 at SQL statement
-- invalid end mark
select emaj.emaj_snap_log_group('myGroup2','','unknownMark','/tmp/emaj_test/log_snaps',NULL);
ERROR:  _check_mark_name: The mark "unknownMark" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,text) line 41 at RAISE
SQL statement "SELECT emaj._check_mark_name (v_groupNames := v_groupNames, v_mark := v_lastMark, v_checkList := '')"
PL/pgSQL function emaj._check_marks_range(text[],text,text) line 65 at SQL statement
SQL statement "SELECT * FROM emaj._check_marks_range(ARRAY[v_groupName], v_firstMark, v_lastMark)"
PL/pgSQL function emaj.emaj_snap_log_group(text,text,text,text,text) line 49 at SQL statement
-- start mark > end mark
-- just check the error is trapped, because the error message contents timestamps
create function test_snap_log(v_groupName TEXT, v_firstMark TEXT, v_lastMark TEXT) returns void language plpgsql as 
$$
begin
  begin
    perform emaj.emaj_snap_log_group(v_groupName,v_firstMark,v_lastMark,'/tmp/emaj_test/log_snaps',NULL);
    return;
  exception when raise_exception then
    raise notice 'Error trapped on emaj_snap_log_group() call';
  end;
  return;
end;
$$;
select test_snap_log('myGroup2','Mark23','Mark21');
NOTICE:  Error trapped on emaj_snap_log_group() call
 test_snap_log 
---------------
 
(1 row)

select test_snap_log('myGroup2','EMAJ_LAST_MARK','Mark22');
NOTICE:  Error trapped on emaj_snap_log_group() call
 test_snap_log 
---------------
 
(1 row)

drop function test_snap_log(text,text,text);
-- invalid COPY TO options
select emaj.emaj_snap_log_group('myGroup2',NULL,'EMAJ_LAST_MARK','/tmp/emaj_test/log_snaps', 'dummy_option');
ERROR:  syntax error at or near "dummy_option"
LINE 1: ...mp/emaj_test/log_snaps/myschema2_myTbl3_log.snap' dummy_opti...
                                                             ^
QUERY:  COPY (SELECT * FROM emaj_myschema2."myTbl3_log" WHERE TRUE AND emaj_gid <= 61709 ORDER BY emaj_gid ASC) TO '/tmp/emaj_test/log_snaps/myschema2_myTbl3_log.snap' dummy_option
CONTEXT:  PL/pgSQL function emaj.emaj_snap_log_group(text,text,text,text,text) line 97 at EXECUTE
-- SQL injection attempt
select emaj.emaj_snap_log_group('myGroup2',NULL,'EMAJ_LAST_MARK','/tmp/emaj_test/log_snaps','; CREATE ROLE fake LOGIN PASSWORD '''' SUPERUSER');
ERROR:  emaj_snap_log_group: The COPY options parameter format is invalid.
CONTEXT:  PL/pgSQL function emaj.emaj_snap_log_group(text,text,text,text,text) line 57 at RAISE
-- should be ok
select emaj.emaj_snap_log_group('emptyGroup','EGM3','EGM4','/tmp/emaj_test/log_snaps',NULL);
 emaj_snap_log_group 
---------------------
                   3
(1 row)

\! ls /tmp/emaj_test/log_snaps
_INFO
emptyGroup_sequences_at_EGM3
emptyGroup_sequences_at_EGM4
\! cat /tmp/emaj_test/log_snaps/emptyGroup_sequences_at_EGM3
\! rm /tmp/emaj_test/log_snaps/*
select emaj.emaj_snap_log_group('myGroup2',NULL,'EMAJ_LAST_MARK','/tmp/emaj_test/log_snaps',NULL);
 emaj_snap_log_group 
---------------------
                   9
(1 row)

select emaj.emaj_snap_log_group('myGroup2','','','/tmp/emaj_test/log_snaps','CSV');
 emaj_snap_log_group 
---------------------
                   9
(1 row)

select emaj.emaj_snap_log_group('myGroup2','Mark21',NULL,'/tmp/emaj_test/log_snaps','CSV HEADER');
 emaj_snap_log_group 
---------------------
                   9
(1 row)

select emaj.emaj_snap_log_group('myGroup2','Mark21','Mark21','/tmp/emaj_test/log_snaps','CSV');
 emaj_snap_log_group 
---------------------
                   3
(1 row)

select emaj.emaj_snap_log_group('myGroup2','Mark21','Mark23','/tmp/emaj_test/log_snaps',NULL);
 emaj_snap_log_group 
---------------------
                   9
(1 row)

-- mark name with special characters
select emaj.emaj_set_mark_group('myGroup2',E'/<*crazy mark$>\\');
 emaj_set_mark_group 
---------------------
                   8
(1 row)

select emaj.emaj_snap_log_group('myGroup2','Mark21',E'/<*crazy mark$>\\','/tmp/emaj_test/log_snaps',NULL);
 emaj_snap_log_group 
---------------------
                   9
(1 row)

\! ls /tmp/emaj_test/log_snaps |sed s/[0-9][0-9].[0-9][0-9].[0-9][0-9].[0-9][0-9][0-9]/\[timestamp_mask\]/g
_INFO
myGroup2_sequences_at_[timestamp_mask]
myGroup2_sequences_at_[timestamp_mask]
myGroup2_sequences_at_Mark21
myGroup2_sequences_at_Mark23
myGroup2_sequences_at_Multi-3
myGroup2_sequences_at____crazy_mark___
myschema2_myTbl3_log.snap
myschema2_mytbl1_log.snap
myschema2_mytbl2_log.snap
myschema2_mytbl4_log.snap
myschema2_mytbl5_log.snap
myschema2_mytbl6_log.snap
select emaj.emaj_delete_mark_group('myGroup2',E'/<*crazy mark$>\\');
 emaj_delete_mark_group 
------------------------
                      1
(1 row)

-----------------------------
-- emaj_get_current_log_table() test
-----------------------------
-- not found
select * from emaj.emaj_get_current_log_table('myschema1', 'dummy_table');
 log_schema | log_table 
------------+-----------
            | 
(1 row)

-- found
select * from emaj.emaj_get_current_log_table('myschema1', 'mytbl1');
   log_schema   | log_table  
----------------+------------
 emaj_myschema1 | mytbl1_log
(1 row)

select 'select count(*) from ' || quote_ident(log_schema) || '.' || quote_ident(log_table)
  from emaj.emaj_get_current_log_table('myschema1','mytbl1');
                    ?column?                    
------------------------------------------------
 select count(*) from emaj_myschema1.mytbl1_log
(1 row)

-----------------------------
-- emaj_gen_sql_group() and emaj_gen_sql_groups() test
-----------------------------
-- set/reset directory for snaps
\! mkdir -p /tmp/emaj_test/sql_scripts
\! rm -R /tmp/emaj_test/sql_scripts
\! mkdir /tmp/emaj_test/sql_scripts
-- group is unknown in emaj_group_def
select emaj.emaj_gen_sql_group(NULL, NULL, NULL, NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 28 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 37 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
select emaj.emaj_gen_sql_group('unknownGroup', NULL, NULL, NULL, NULL);
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 37 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
select emaj.emaj_gen_sql_groups(NULL, NULL, NULL, NULL);
WARNING:  _check_group_names: No group to process.
 emaj_gen_sql_groups 
---------------------
                   0
(1 row)

select emaj.emaj_gen_sql_groups('{"myGroup1","unknownGroup"}', NULL, NULL, NULL);
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  PL/pgSQL function emaj._check_group_names(text[],boolean,boolean,text) line 36 at RAISE
SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 37 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
-- invalid start mark
select emaj.emaj_gen_sql_group('myGroup2', 'unknownMark', NULL, NULL);
ERROR:  _check_mark_name: The mark "unknownMark" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,text) line 41 at RAISE
SQL statement "SELECT emaj._check_mark_name (v_groupNames := v_groupNames, v_mark := v_firstMark, v_checkList := '')"
PL/pgSQL function emaj._check_marks_range(text[],text,text) line 56 at SQL statement
SQL statement "SELECT * FROM emaj._check_marks_range(v_groupNames, v_firstMark, v_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 42 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
select emaj.emaj_gen_sql_groups('{"myGroup1","myGroup2"}', 'Mark11', NULL, NULL, NULL);
ERROR:  _check_mark_name: The mark "Mark11" does not exist for the groups "myGroup1, myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,text) line 43 at RAISE
SQL statement "SELECT emaj._check_mark_name (v_groupNames := v_groupNames, v_mark := v_firstMark, v_checkList := '')"
PL/pgSQL function emaj._check_marks_range(text[],text,text) line 56 at SQL statement
SQL statement "SELECT * FROM emaj._check_marks_range(v_groupNames, v_firstMark, v_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 42 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
-- invalid end mark
select emaj.emaj_gen_sql_group('myGroup2', NULL, 'unknownMark', NULL);
ERROR:  _check_mark_name: The mark "unknownMark" does not exist for the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,text) line 41 at RAISE
SQL statement "SELECT emaj._check_mark_name (v_groupNames := v_groupNames, v_mark := v_lastMark, v_checkList := '')"
PL/pgSQL function emaj._check_marks_range(text[],text,text) line 65 at SQL statement
SQL statement "SELECT * FROM emaj._check_marks_range(v_groupNames, v_firstMark, v_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 42 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
select emaj.emaj_gen_sql_groups('{"myGroup1","myGroup2"}', 'Multi-1', 'Mark11', NULL);
ERROR:  _check_mark_name: The mark "Mark11" does not exist for the groups "myGroup1, myGroup2".
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,text) line 43 at RAISE
SQL statement "SELECT emaj._check_mark_name (v_groupNames := v_groupNames, v_mark := v_lastMark, v_checkList := '')"
PL/pgSQL function emaj._check_marks_range(text[],text,text) line 65 at SQL statement
SQL statement "SELECT * FROM emaj._check_marks_range(v_groupNames, v_firstMark, v_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 42 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
-- end mark is prior start mark
-- (mark timestamps are temporarily changed so that regression test can return a stable error message)
begin;
  update emaj.emaj_time_stamp set time_clock_timestamp = '2000-01-01 12:00:00+00' 
    from emaj.emaj_mark
    where time_id = mark_time_id and mark_group = 'myGroup2' and mark_name = 'Mark21';
  update emaj.emaj_time_stamp set time_clock_timestamp = '2000-01-01 13:00:00+00'
    from emaj.emaj_mark
    where time_id = mark_time_id and mark_group = 'myGroup2' and mark_name = 'Mark22';
  select emaj.emaj_gen_sql_group('myGroup2', 'Mark22', 'Mark21', NULL);
ERROR:  _check_marks_range: The start mark "Mark22" (2000-01-01 05:00:00-08) has been set after the end mark "Mark21" (2000-01-01 04:00:00-08).
CONTEXT:  PL/pgSQL function emaj._check_marks_range(text[],text,text) line 73 at RAISE
SQL statement "SELECT * FROM emaj._check_marks_range(v_groupNames, v_firstMark, v_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 42 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
rollback;
begin;
  update emaj.emaj_time_stamp set time_clock_timestamp = '2000-01-01 12:00:00+00'
    from emaj.emaj_mark
    where time_id = mark_time_id and mark_name = 'Multi-2';
  update emaj.emaj_time_stamp set time_clock_timestamp = '2000-01-01 13:00:00+00'
    from emaj.emaj_mark
    where time_id = mark_time_id and mark_name = 'Multi-3';
  select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], 'Multi-3', 'Multi-2', NULL);
ERROR:  _check_marks_range: The start mark "Multi-3" (2000-01-01 05:00:00-08) has been set after the end mark "Multi-2" (2000-01-01 04:00:00-08).
CONTEXT:  PL/pgSQL function emaj._check_marks_range(text[],text,text) line 73 at RAISE
SQL statement "SELECT * FROM emaj._check_marks_range(v_groupNames, v_firstMark, v_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 42 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
rollback;
-- start mark with the same name but that doesn't correspond to the same point in time
  select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], 'Mark21', 'Multi-2', NULL);
ERROR:  _check_mark_name: The mark "Mark21" does not represent the same point in time for all groups.
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,text) line 50 at RAISE
SQL statement "SELECT emaj._check_mark_name (v_groupNames := v_groupNames, v_mark := v_firstMark, v_checkList := '')"
PL/pgSQL function emaj._check_marks_range(text[],text,text) line 56 at SQL statement
SQL statement "SELECT * FROM emaj._check_marks_range(v_groupNames, v_firstMark, v_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 42 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
  select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], NULL, 'Multi-2', NULL, NULL);
ERROR:  _check_marks_range: The oldest marks of each group do not represent the same point in time.
CONTEXT:  PL/pgSQL function emaj._check_marks_range(text[],text,text) line 40 at RAISE
SQL statement "SELECT * FROM emaj._check_marks_range(v_groupNames, v_firstMark, v_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 42 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
-- start mark with the same point in time but not with the same name
begin;
  select emaj.emaj_stop_groups(array['myGroup1','myGroup2']);
 emaj_stop_groups 
------------------
               15
(1 row)

  select emaj.emaj_start_groups(array['myGroup1','myGroup2'],'Common_mark_name');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
 emaj_start_groups 
-------------------
                15
(1 row)

  select emaj.emaj_rename_mark_group('myGroup1', 'Common_mark_name', 'Renamed');
 emaj_rename_mark_group 
------------------------
 
(1 row)

  select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], NULL, NULL, NULL);
ERROR:  _check_marks_range: The oldest marks of each group have not the same name.
CONTEXT:  PL/pgSQL function emaj._check_marks_range(text[],text,text) line 48 at RAISE
SQL statement "SELECT * FROM emaj._check_marks_range(v_groupNames, v_firstMark, v_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 42 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
rollback;
-- end mark with the same name but that doesn't correspond to the same point in time
  select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], 'Multi-1', 'Mark21', NULL);
ERROR:  _check_mark_name: The mark "Mark21" does not represent the same point in time for all groups.
CONTEXT:  PL/pgSQL function emaj._check_mark_name(text[],text,text) line 50 at RAISE
SQL statement "SELECT emaj._check_mark_name (v_groupNames := v_groupNames, v_mark := v_lastMark, v_checkList := '')"
PL/pgSQL function emaj._check_marks_range(text[],text,text) line 65 at SQL statement
SQL statement "SELECT * FROM emaj._check_marks_range(v_groupNames, v_firstMark, v_lastMark)"
PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 42 at SQL statement
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
-- empty table/sequence names array
select emaj.emaj_gen_sql_group('myGroup2', NULL, 'EMAJ_LAST_MARK', '/tmp/emaj_test/sql_scripts/myFile', array['']);
ERROR:  _gen_sql_groups: The filtered table/sequence names array cannot be empty.
CONTEXT:  PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 50 at RAISE
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
-- unknown table/sequence names in the tables filter
select emaj.emaj_gen_sql_group('myGroup2', NULL, NULL, '/tmp/emaj_test/sql_scripts/myFile', array['foo']);
ERROR:  _gen_sql_groups: 1 tables/sequences (foo) did not belong to any of the selected tables groups at Mark21 mark time.
CONTEXT:  PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 65 at RAISE
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
select emaj.emaj_gen_sql_group('myGroup2', NULL, NULL, '/tmp/emaj_test/sql_scripts/myFile', array[
     'myschema1.mytbl1','myschema2.myTbl3_col31_seq','phil''s schema3.phil''s tbl1']);
ERROR:  _gen_sql_groups: 2 tables/sequences (myschema1.mytbl1, phil's schema3.phil's tbl1) did not belong to any of the selected tables groups at Mark21 mark time.
CONTEXT:  PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 65 at RAISE
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], 'Multi-1', NULL, '/tmp/emaj_test/sql_scripts/myFile', array[
     'myschema1.mytbl1','foo','myschema2.myTbl3_col31_seq','phil''s schema3.phil''s tbl1']);
ERROR:  _gen_sql_groups: 2 tables/sequences (foo, phil's schema3.phil's tbl1) did not belong to any of the selected tables groups at Multi-1 mark time.
CONTEXT:  PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 65 at RAISE
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
-- the tables group contains a table without pkey
select emaj.emaj_gen_sql_group('phil''s group#3",', NULL, 'EMAJ_LAST_MARK', '/tmp/emaj_test/sql_scripts/Group3');
ERROR:  _gen_sql_groups: 1 tables/sequences (phil's schema3.myTbl2\) had no pkey at Mark4 mark time.
CONTEXT:  PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 80 at RAISE
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
-- invalid location path name
select emaj.emaj_gen_sql_group('myGroup1', NULL, NULL, '/tmp/unknownDirectory/myFile');
ERROR:  _gen_sql_groups: The file "/tmp/unknownDirectory/myFile" cannot be used as script output file.
CONTEXT:  PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 101 at RAISE
PL/pgSQL function emaj.emaj_gen_sql_group(text,text,text,text,text[]) line 14 at RETURN
select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], 'Multi-1', NULL, '/tmp/unknownDirectory/myFile');
ERROR:  _gen_sql_groups: The file "/tmp/unknownDirectory/myFile" cannot be used as script output file.
CONTEXT:  PL/pgSQL function emaj._gen_sql_groups(text[],boolean,text,text,text,text[]) line 101 at RAISE
PL/pgSQL function emaj.emaj_gen_sql_groups(text[],text,text,text,text[]) line 14 at RETURN
-- should be ok
-- generated files content is checked later in adm2.sql scenario
-- getting counters from detailed log statistics + the number of sequences included in the group allows a comparison
--   with the result of the emaj_gen_sql_group() function
select emaj.emaj_gen_sql_group('emptyGroup', NULL, NULL, '/tmp/emaj_test/sql_scripts/myFile');
 emaj_gen_sql_group 
--------------------
                  0
(1 row)

select emaj.emaj_gen_sql_group('myGroup2', NULL, NULL, '/tmp/emaj_test/sql_scripts/myFile');
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
              11711
(1 row)

select sum(stat_rows)+2 as check from emaj.emaj_detailed_log_stat_group('myGroup2',NULL,NULL);
 check 
-------
 11712
(1 row)

select emaj.emaj_gen_sql_group('myGroup2', 'Mark21', NULL, '/tmp/emaj_test/sql_scripts/myFile');
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
              11711
(1 row)

select sum(stat_rows)+2 as check from emaj.emaj_detailed_log_stat_group('myGroup2','Mark21',NULL);
 check 
-------
 11712
(1 row)

select emaj.emaj_gen_sql_group('myGroup2', NULL, 'Mark22', '/tmp/emaj_test/sql_scripts/myFile');
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
              11600
(1 row)

select sum(stat_rows)+2 as check from emaj.emaj_detailed_log_stat_group('myGroup2',NULL,'Mark22');
 check 
-------
 11602
(1 row)

select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], 'Multi-1', NULL, '/tmp/emaj_test/sql_scripts/myFile');
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_groups 
---------------------
               11711
(1 row)

select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], 'Multi-2', 'Multi-3', '/tmp/emaj_test/sql_scripts/myFile');
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_groups 
---------------------
                 111
(1 row)

select emaj.emaj_gen_sql_group('myGroup2', NULL, 'EMAJ_LAST_MARK', '/tmp/emaj_test/sql_scripts/myFile');
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
              11711
(1 row)

select sum(stat_rows)+2 as check from emaj.emaj_detailed_log_stat_group('myGroup2',NULL,'EMAJ_LAST_MARK');
 check 
-------
 11712
(1 row)

-- should be ok with no output file supplied
select emaj.emaj_gen_sql_group('myGroup1', NULL, NULL, NULL);
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
                  0
(1 row)

\copy (select * from emaj_sql_script) to '/dev/null'
drop table emaj_temp_script cascade;
NOTICE:  drop cascades to view emaj_sql_script
-- should be ok, with tables and sequences filtering
select stat_group, stat_schema, stat_table, stat_first_mark, stat_last_mark, stat_role, stat_verb, stat_rows
  from emaj.emaj_detailed_log_stat_group('myGroup2',NULL,'EMAJ_LAST_MARK');
 stat_group | stat_schema | stat_table | stat_first_mark | stat_last_mark | stat_role | stat_verb | stat_rows 
------------+-------------+------------+-----------------+----------------+-----------+-----------+-----------
 myGroup2   | myschema2   | myTbl3     | Mark21          | Multi-3        | postgres  | INSERT    |        10
 myGroup2   | myschema2   | mytbl1     | Mark21          | Multi-3        | postgres  | DELETE    |       100
 myGroup2   | myschema2   | mytbl1     | Mark21          | Multi-3        | postgres  | INSERT    |     10100
 myGroup2   | myschema2   | mytbl1     | Mark21          | Multi-3        | postgres  | UPDATE    |       500
 myGroup2   | myschema2   | mytbl2     | Mark21          | Multi-3        | postgres  | INSERT    |       900
 myGroup2   | myschema2   | mytbl4     | Mark21          | Multi-3        | postgres  | INSERT    |       100
(6 rows)

-- all tables and sequences
select emaj.emaj_gen_sql_group('myGroup2', NULL, 'EMAJ_LAST_MARK', '/tmp/emaj_test/sql_scripts/myFile', array[
     'myschema2.mytbl1','myschema2.mytbl2','myschema2.myTbl3','myschema2.mytbl4',
     'myschema2.mytbl5','myschema2.mytbl6','myschema2.myseq1','myschema2.myTbl3_col31_seq']);
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
              11711
(1 row)

-- minus 1 sequence
select emaj.emaj_gen_sql_group('myGroup2', NULL, 'EMAJ_LAST_MARK', '/tmp/emaj_test/sql_scripts/myFile', array[
     'myschema2.mytbl1','myschema2.mytbl2','myschema2.myTbl3','myschema2.mytbl4',
     'myschema2.mytbl5','myschema2.mytbl6','myschema2.myseq1']);
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
              11710
(1 row)

-- minus 1 table
select emaj.emaj_gen_sql_group('myGroup2', NULL, 'EMAJ_LAST_MARK', '/tmp/emaj_test/sql_scripts/myFile', array[
     'myschema2.mytbl1','myschema2.mytbl2','myschema2.myTbl3',
     'myschema2.mytbl5','myschema2.mytbl6','myschema2.myseq1']);
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
              11610
(1 row)

-- only 1 sequence
select emaj.emaj_gen_sql_group('myGroup2', NULL, 'EMAJ_LAST_MARK', '/tmp/emaj_test/sql_scripts/myFile', array[
     'myschema2.myTbl3_col31_seq']);
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
                  1
(1 row)

-- only 1 table (with a strange name and belonging to a group having another table without pkey)
select emaj.emaj_gen_sql_group('phil''s group#3",', NULL, 'EMAJ_LAST_MARK', '/tmp/emaj_test/sql_scripts/myFile', array[
     'phil''s schema3.phil''s tbl1']);
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
                  0
(1 row)

-- several groups and 1 table of each, with redondancy in the tables array
select emaj.emaj_gen_sql_groups(array['myGroup1','myGroup2'], 'Multi-1', 'Multi-3', '/tmp/emaj_test/sql_scripts/myFile', array[
     'myschema1.mytbl4','myschema2.mytbl4','myschema1.mytbl4','myschema2.mytbl4']);
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_groups 
---------------------
                 100
(1 row)

\! grep 'only for' /tmp/emaj_test/sql_scripts/myFile
--    only for the following tables/sequences: myschema1.mytbl4,myschema2.mytbl4
-- generate a sql script after a table structure change but on a time frame prior the change
begin;
  select emaj.emaj_set_mark_group('myGroup2','Test sql generation');
 emaj_set_mark_group 
---------------------
                   8
(1 row)

  insert into mySchema2.myTbl2 values(1000,'Text','01/01/2000');
  update mySchema2.myTbl2 set col22 = 'New text' where col21 = 1000;
  delete from mySchema2.myTbl2 where col21 = 1000;
  select emaj.emaj_remove_table('myschema2', 'mytbl2','Before ALTER mytbl2');
 emaj_remove_table 
-------------------
                 1
(1 row)

  alter table mySchema2.myTbl2 rename column col21 to id;
  select emaj.emaj_gen_sql_group('myGroup2', 'Test sql generation', 'Before ALTER mytbl2','/tmp/emaj_test/sql_scripts/altered_tbl.sql');
NOTICE:  table "emaj_temp_script" does not exist, skipping
 emaj_gen_sql_group 
--------------------
                  3
(1 row)

rollback;
-- comment transaction commands and mask the timestamp in the initial comment for the need of the current test
\! find /tmp/emaj_test/sql_scripts -name '*.sql' -type f -print0 | xargs -0 sed -i -s 's/^BEGIN/--BEGIN/;s/^COMMIT/--COMMIT/'
\! find /tmp/emaj_test/sql_scripts -name '*.sql' -type f -print0 | xargs -0 sed -i -s 's/at .*$/at [ts]$/'
-- and execute the generated script
begin;
  \i /tmp/emaj_test/sql_scripts/altered_tbl.sql
-- SQL script generated by E-Maj at [ts]$
--    for tables group(s): myGroup2
--    processing logs between mark Test sql generation and mark Before ALTER mytbl2
SET standard_conforming_strings = OFF;
SET escape_string_warning = OFF;
SET datestyle = 'ISO, YMD';
--BEGIN TRANSACTION;
INSERT INTO myschema2.mytbl2 VALUES (1000, 'Text', '2000-01-01');
UPDATE ONLY myschema2.mytbl2 SET col21 = 1000, col22 = 'New text', col23 = '2000-01-01' WHERE col21 = 1000;
DELETE FROM ONLY myschema2.mytbl2 WHERE col21 = 1000;
--COMMIT;
RESET standard_conforming_strings;
RESET escape_string_warning;
RESET datestyle;
rollback;
-----------------------------
-- test a table reclustering (it will use the pkey index as clustered index) and a vacuum full
-----------------------------
cluster emaj_myschema1.mytbl1_log;
vacuum full emaj_myschema1.mytbl1_log;
-----------------------------
-- try forbiden actions on emaj_param
-----------------------------
truncate emaj.emaj_param;
ERROR:  _emaj_param_change_fnct: TRUNCATE the emaj_param table is not allowed.
CONTEXT:  PL/pgSQL function emaj._emaj_param_change_fnct() line 28 at RAISE
delete from emaj.emaj_param where param_key = 'emaj_version';
ERROR:  _emaj_param_change_fnct: modifying the emaj_version key is not allowed.
CONTEXT:  PL/pgSQL function emaj._emaj_param_change_fnct() line 5 at RAISE
-----------------------------
-- test parameters export and import functions
-----------------------------
-- direct export
--   ok
select json_array_length(emaj.emaj_export_parameters_configuration()->'parameters');
 json_array_length 
-------------------
                 2
(1 row)

-- export in file
--   error
select emaj.emaj_export_parameters_configuration('/tmp/dummy/location/file');
ERROR:  emaj_export_parameters_configuration: Unable to write to the /tmp/dummy/location/file file.
CONTEXT:  PL/pgSQL function emaj.emaj_export_parameters_configuration(text) line 18 at RAISE
--   ok
select emaj.emaj_export_parameters_configuration('/tmp/orig_param_config');
 emaj_export_parameters_configuration 
--------------------------------------
                                    2
(1 row)

\! wc -l /tmp/orig_param_config
14 /tmp/orig_param_config
-- direct import
--   error
--     no "parameters" array
select emaj.emaj_import_parameters_configuration('{ "dummy_json": null }'::json);
WARNING:  _import_param_conf : The JSON structure does not contain any "parameters" array.
ERROR:  _import_param_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  PL/pgSQL function emaj._import_param_conf(json,boolean) line 31 at RAISE
SQL statement "SELECT emaj._import_param_conf(v_paramsJson, v_deleteCurrentConf)"
PL/pgSQL function emaj.emaj_import_parameters_configuration(json,boolean) line 17 at SQL statement
--     unknown attributes
select emaj.emaj_import_parameters_configuration('{ "parameters": [ { "key": "emaj_version", "unknown_attribute_1": null, "unknown_attribute_2": null} ] }'::json);
WARNING:  _import_param_conf : For the parameter "emaj_version", the attribute "unknown_attribute_1" is unknown.
WARNING:  _import_param_conf : For the parameter "emaj_version", the attribute "unknown_attribute_2" is unknown.
ERROR:  _import_param_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  PL/pgSQL function emaj._import_param_conf(json,boolean) line 31 at RAISE
SQL statement "SELECT emaj._import_param_conf(v_paramsJson, v_deleteCurrentConf)"
PL/pgSQL function emaj.emaj_import_parameters_configuration(json,boolean) line 17 at SQL statement
--     missing or null "key" attributes
select emaj.emaj_import_parameters_configuration('{ "parameters": [ { "value": "no_key"} ] }'::json);
WARNING:  _import_param_conf : The #1 parameter has no "key" attribute or a "key" set to null.
ERROR:  _import_param_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  PL/pgSQL function emaj._import_param_conf(json,boolean) line 31 at RAISE
SQL statement "SELECT emaj._import_param_conf(v_paramsJson, v_deleteCurrentConf)"
PL/pgSQL function emaj.emaj_import_parameters_configuration(json,boolean) line 17 at SQL statement
select emaj.emaj_import_parameters_configuration('{ "parameters": [ { "key": null} ] }'::json);
WARNING:  _import_param_conf : The #1 parameter has no "key" attribute or a "key" set to null.
ERROR:  _import_param_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  PL/pgSQL function emaj._import_param_conf(json,boolean) line 31 at RAISE
SQL statement "SELECT emaj._import_param_conf(v_paramsJson, v_deleteCurrentConf)"
PL/pgSQL function emaj.emaj_import_parameters_configuration(json,boolean) line 17 at SQL statement
--     invalid key
select emaj.emaj_import_parameters_configuration('{ "parameters": [ { "key": "unknown_param" } ] }'::json);
WARNING:  _import_param_conf : "unknown_param" is not a known E-Maj parameter.
ERROR:  _import_param_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  PL/pgSQL function emaj._import_param_conf(json,boolean) line 31 at RAISE
SQL statement "SELECT emaj._import_param_conf(v_paramsJson, v_deleteCurrentConf)"
PL/pgSQL function emaj.emaj_import_parameters_configuration(json,boolean) line 17 at SQL statement
--     duplicate key
select emaj.emaj_import_parameters_configuration('{ "parameters": [ { "key": "history_retention" }, { "key": "history_retention" } ] }'::json);
WARNING:  _import_param_conf : The JSON structure references several times the parameter "history_retention".
ERROR:  _import_param_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  PL/pgSQL function emaj._import_param_conf(json,boolean) line 31 at RAISE
SQL statement "SELECT emaj._import_param_conf(v_paramsJson, v_deleteCurrentConf)"
PL/pgSQL function emaj.emaj_import_parameters_configuration(json,boolean) line 17 at SQL statement
--   ok
select emaj.emaj_import_parameters_configuration('{ "parameters": [ { "key": "history_retention", "value": "1 day"} ] }'::json);
 emaj_import_parameters_configuration 
--------------------------------------
                                    1
(1 row)

--     "null" "value" attribute
select emaj.emaj_import_parameters_configuration('{ "parameters": [ { "key": "history_retention", "value": null} ] }'::json);
 emaj_import_parameters_configuration 
--------------------------------------
                                    1
(1 row)

--     missing "value" attribute
select emaj.emaj_import_parameters_configuration('{ "parameters": [ { "key": "history_retention"} ] }'::json);
 emaj_import_parameters_configuration 
--------------------------------------
                                    1
(1 row)

select json_array_length(emaj.emaj_export_parameters_configuration()->'parameters');
 json_array_length 
-------------------
                 2
(1 row)

-- import from file
--   error
select emaj.emaj_import_parameters_configuration('/tmp/dummy/location/file');
ERROR:  emaj_import_parameters_configuration: Unable to read the /tmp/dummy/location/file file.
CONTEXT:  PL/pgSQL function emaj.emaj_import_parameters_configuration(text,boolean) line 23 at RAISE
\! echo 'not a json content' >/tmp/bad_param_config
select emaj.emaj_import_parameters_configuration('/tmp/bad_param_config');
ERROR:  emaj_import_parameters_configuration: The file content is not a valid JSON content.
CONTEXT:  PL/pgSQL function emaj.emaj_import_parameters_configuration(text,boolean) line 32 at RAISE
\! echo '{ "dummy_json": null }' >/tmp/bad_param_config
select emaj.emaj_import_parameters_configuration('/tmp/bad_param_config');
WARNING:  _import_param_conf : The JSON structure does not contain any "parameters" array.
ERROR:  _import_param_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  PL/pgSQL function emaj._import_param_conf(json,boolean) line 31 at RAISE
SQL statement "SELECT emaj._import_param_conf(v_paramsJson, v_deleteCurrentConf)"
PL/pgSQL function emaj.emaj_import_parameters_configuration(text,boolean) line 35 at SQL statement
\! echo '{ "parameters": [ { "key": "bad_key", "value": null} ] }' >/tmp/bad_param_config
select emaj.emaj_import_parameters_configuration('/tmp/bad_param_config');
WARNING:  _import_param_conf : "bad_key" is not a known E-Maj parameter.
ERROR:  _import_param_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  PL/pgSQL function emaj._import_param_conf(json,boolean) line 31 at RAISE
SQL statement "SELECT emaj._import_param_conf(v_paramsJson, v_deleteCurrentConf)"
PL/pgSQL function emaj.emaj_import_parameters_configuration(text,boolean) line 35 at SQL statement
--   ok
select emaj.emaj_import_parameters_configuration('/tmp/orig_param_config', true);
 emaj_import_parameters_configuration 
--------------------------------------
                                    2
(1 row)

select json_array_length(emaj.emaj_export_parameters_configuration()->'parameters');
 json_array_length 
-------------------
                 2
(1 row)

select emaj.emaj_import_parameters_configuration('/tmp/orig_param_config', false);
 emaj_import_parameters_configuration 
--------------------------------------
                                    2
(1 row)

\! rm /tmp/orig_param_config /tmp/bad_param_config
-----------------------------
-- emaj_purge_histories() test
-----------------------------
select emaj.emaj_purge_histories(NULL);
 emaj_purge_histories 
----------------------
 
(1 row)

select emaj.emaj_purge_histories('0 SECOND');
 emaj_purge_histories 
----------------------
 
(1 row)

-----------------------------
-- test end: check, reset history and force sequences id
-----------------------------
select hist_id, hist_function, hist_event, hist_object, regexp_replace(regexp_replace(hist_wording,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d','%','g'),E'\\[.+\\]','(timestamp)','g'), hist_user from 
  (select * from emaj.emaj_hist where hist_id >= 5000 order by hist_id) as t;
 hist_id |   hist_function   |     hist_event     |         hist_object          |                                   regexp_replace                                    | hist_user 
---------+-------------------+--------------------+------------------------------+-------------------------------------------------------------------------------------+-----------
    5003 | STOP_GROUP        | BEGIN              | myGroup1                     |                                                                                     | postgres
    5004 | LOCK_GROUP        | BEGIN              | myGroup1                     |                                                                                     | postgres
    5005 | LOCK_GROUP        | END                | myGroup1                     | 5 tables locked, 0 deadlock(s)                                                      | postgres
    5006 | SET_MARK_GROUP    | BEGIN              | myGroup1                     | STOP_%                                                                              | postgres
    5007 | SET_MARK_GROUP    | END                | myGroup1                     | STOP_%                                                                              | postgres
    5008 | STOP_GROUP        | END                | myGroup1                     | 7 tables/sequences processed                                                        | postgres
    5009 | RESET_GROUP       | BEGIN              | myGroup1                     |                                                                                     | postgres
    5010 | RESET_GROUP       | END                | myGroup1                     | 7 tables/sequences processed                                                        | postgres
    5019 | GEN_SQL_GROUP     | BEGIN              | myGroup1                     | From initial mark to current situation                                              | postgres
    5020 | GEN_SQL_GROUP     | END                | myGroup1                     | No mark in the group(s) => no file has been generated                               | postgres
    5021 | START_GROUP       | BEGIN              | myGroup1                     | With log reset                                                                      | postgres
    5022 | LOCK_GROUP        | BEGIN              | myGroup1                     |                                                                                     | postgres
    5023 | LOCK_GROUP        | END                | myGroup1                     | 5 tables locked, 0 deadlock(s)                                                      | postgres
    5024 | SET_MARK_GROUP    | BEGIN              | myGroup1                     | Mark21                                                                              | postgres
    5025 | SET_MARK_GROUP    | END                | myGroup1                     | Mark21                                                                              | postgres
    5026 | START_GROUP       | END                | myGroup1                     | 7 tables/sequences processed                                                        | postgres
    5027 | SET_MARK_GROUPS   | BEGIN              | myGroup1,myGroup2            | Multi-1                                                                             | postgres
    5028 | LOCK_GROUPS       | BEGIN              | myGroup1,myGroup2            |                                                                                     | postgres
    5029 | LOCK_GROUPS       | END                | myGroup1,myGroup2            | 11 tables locked, 0 deadlock(s)                                                     | postgres
    5030 | SET_MARK_GROUPS   | END                | myGroup1,myGroup2            | Multi-1                                                                             | postgres
    5031 | SET_MARK_GROUP    | BEGIN              | myGroup2                     |                                                                                     | postgres
    5032 | LOCK_GROUP        | BEGIN              | myGroup2                     |                                                                                     | postgres
    5033 | LOCK_GROUP        | END                | myGroup2                     | 6 tables locked, 0 deadlock(s)                                                      | postgres
    5034 | SET_MARK_GROUP    | END                | myGroup2                     | Mark22                                                                              | postgres
    5035 | SET_MARK_GROUPS   | BEGIN              | myGroup1,myGroup2            | Multi-2                                                                             | postgres
    5036 | LOCK_GROUPS       | BEGIN              | myGroup1,myGroup2            |                                                                                     | postgres
    5037 | LOCK_GROUPS       | END                | myGroup1,myGroup2            | 11 tables locked, 0 deadlock(s)                                                     | postgres
    5038 | SET_MARK_GROUPS   | END                | myGroup1,myGroup2            | Multi-2                                                                             | postgres
    5039 | SET_MARK_GROUP    | BEGIN              | myGroup2                     |                                                                                     | postgres
    5040 | LOCK_GROUP        | BEGIN              | myGroup2                     |                                                                                     | postgres
    5041 | LOCK_GROUP        | END                | myGroup2                     | 6 tables locked, 0 deadlock(s)                                                      | postgres
    5042 | SET_MARK_GROUP    | END                | myGroup2                     | Mark23                                                                              | postgres
    5043 | SET_MARK_GROUPS   | BEGIN              | myGroup1,myGroup2            | Multi-3                                                                             | postgres
    5044 | LOCK_GROUPS       | BEGIN              | myGroup1,myGroup2            |                                                                                     | postgres
    5045 | LOCK_GROUPS       | END                | myGroup1,myGroup2            | 11 tables locked, 0 deadlock(s)                                                     | postgres
    5046 | SET_MARK_GROUPS   | END                | myGroup1,myGroup2            | Multi-3                                                                             | postgres
    5061 |                   | INSERTED PARAMETER | fixed_step_rollback_duration | @ 0.0025 secs                                                                       | postgres
    5079 | SNAP_GROUP        | BEGIN              | emptyGroup                   | /tmp/emaj_test/snaps                                                                | postgres
    5080 | SNAP_GROUP        | END                | emptyGroup                   | 0 tables/sequences processed                                                        | postgres
    5081 | SNAP_GROUP        | BEGIN              | myGroup1                     | /tmp/emaj_test/snaps                                                                | postgres
    5082 | SNAP_GROUP        | END                | myGroup1                     | 7 tables/sequences processed                                                        | postgres
    5083 | SNAP_GROUP        | BEGIN              | myGroup1                     | /tmp/emaj_test/snaps                                                                | postgres
    5084 | SNAP_GROUP        | END                | myGroup1                     | 7 tables/sequences processed                                                        | postgres
    5096 | SNAP_LOG_GROUP    | BEGIN              | emptyGroup                   | From mark EGM3 to mark EGM4 towards /tmp/emaj_test/log_snaps                        | postgres
    5097 | SNAP_LOG_GROUP    | END                | emptyGroup                   | 3 generated files                                                                   | postgres
    5098 | SNAP_LOG_GROUP    | BEGIN              | myGroup2                     | From initial mark to mark EMAJ_LAST_MARK towards /tmp/emaj_test/log_snaps           | postgres
    5099 | SNAP_LOG_GROUP    | END                | myGroup2                     | 9 generated files                                                                   | postgres
    5100 | SNAP_LOG_GROUP    | BEGIN              | myGroup2                     | From initial mark to current situation towards /tmp/emaj_test/log_snaps             | postgres
    5101 | SNAP_LOG_GROUP    | END                | myGroup2                     | 9 generated files                                                                   | postgres
    5102 | SNAP_LOG_GROUP    | BEGIN              | myGroup2                     | From mark Mark21 to current situation towards /tmp/emaj_test/log_snaps              | postgres
    5103 | SNAP_LOG_GROUP    | END                | myGroup2                     | 9 generated files                                                                   | postgres
    5104 | SNAP_LOG_GROUP    | BEGIN              | myGroup2                     | From mark Mark21 to mark Mark21 towards /tmp/emaj_test/log_snaps                    | postgres
    5105 | SNAP_LOG_GROUP    | END                | myGroup2                     | 3 generated files                                                                   | postgres
    5106 | SNAP_LOG_GROUP    | BEGIN              | myGroup2                     | From mark Mark21 to mark Mark23 towards /tmp/emaj_test/log_snaps                    | postgres
    5107 | SNAP_LOG_GROUP    | END                | myGroup2                     | 9 generated files                                                                   | postgres
    5108 | SET_MARK_GROUP    | BEGIN              | myGroup2                     |                                                                                     | postgres
    5109 | LOCK_GROUP        | BEGIN              | myGroup2                     |                                                                                     | postgres
    5110 | LOCK_GROUP        | END                | myGroup2                     | 6 tables locked, 0 deadlock(s)                                                      | postgres
    5111 | SET_MARK_GROUP    | END                | myGroup2                     | /<*crazy mark$>\                                                                    | postgres
    5112 | SNAP_LOG_GROUP    | BEGIN              | myGroup2                     | From mark Mark21 to mark /<*crazy mark$>\ towards /tmp/emaj_test/log_snaps          | postgres
    5113 | SNAP_LOG_GROUP    | END                | myGroup2                     | 9 generated files                                                                   | postgres
    5114 | DELETE_MARK_GROUP | BEGIN              | myGroup2                     | /<*crazy mark$>\                                                                    | postgres
    5115 | DELETE_MARK_GROUP | END                | myGroup2                     | /<*crazy mark$>\                                                                    | postgres
    5118 | GEN_SQL_GROUPS    | BEGIN              |                              | From initial mark to current situation                                              | postgres
    5119 | GEN_SQL_GROUPS    | END                |                              | 0 generated statements - script not exported                                        | postgres
    5152 | GEN_SQL_GROUP     | BEGIN              | emptyGroup                   | From initial mark to current situation                                              | postgres
    5153 | GEN_SQL_GROUP     | END                | emptyGroup                   | 0 generated statements - script exported into /tmp/emaj_test/sql_scripts/myFile     | postgres
    5154 | GEN_SQL_GROUP     | BEGIN              | myGroup2                     | From initial mark to current situation                                              | postgres
    5155 | GEN_SQL_GROUP     | END                | myGroup2                     | 11711 generated statements - script exported into /tmp/emaj_test/sql_scripts/myFile | postgres
    5156 | GEN_SQL_GROUP     | BEGIN              | myGroup2                     | From mark Mark21 to current situation                                               | postgres
    5157 | GEN_SQL_GROUP     | END                | myGroup2                     | 11711 generated statements - script exported into /tmp/emaj_test/sql_scripts/myFile | postgres
    5158 | GEN_SQL_GROUP     | BEGIN              | myGroup2                     | From initial mark to mark Mark22                                                    | postgres
    5159 | GEN_SQL_GROUP     | END                | myGroup2                     | 11600 generated statements - script exported into /tmp/emaj_test/sql_scripts/myFile | postgres
    5160 | GEN_SQL_GROUPS    | BEGIN              | myGroup1,myGroup2            | From mark Multi-1 to current situation                                              | postgres
    5161 | GEN_SQL_GROUPS    | END                | myGroup1,myGroup2            | 11711 generated statements - script exported into /tmp/emaj_test/sql_scripts/myFile | postgres
    5162 | GEN_SQL_GROUPS    | BEGIN              | myGroup1,myGroup2            | From mark Multi-2 to mark Multi-3                                                   | postgres
    5163 | GEN_SQL_GROUPS    | END                | myGroup1,myGroup2            | 111 generated statements - script exported into /tmp/emaj_test/sql_scripts/myFile   | postgres
    5164 | GEN_SQL_GROUP     | BEGIN              | myGroup2                     | From initial mark to mark EMAJ_LAST_MARK                                            | postgres
    5165 | GEN_SQL_GROUP     | END                | myGroup2                     | 11711 generated statements - script exported into /tmp/emaj_test/sql_scripts/myFile | postgres
    5166 | GEN_SQL_GROUP     | BEGIN              | myGroup1                     | From initial mark to current situation                                              | postgres
    5167 | GEN_SQL_GROUP     | END                | myGroup1                     | 0 generated statements - script not exported                                        | postgres
    5168 | GEN_SQL_GROUP     | BEGIN              | myGroup2                     | From initial mark to mark EMAJ_LAST_MARK with tables/sequences filtering            | postgres
    5169 | GEN_SQL_GROUP     | END                | myGroup2                     | 11711 generated statements - script exported into /tmp/emaj_test/sql_scripts/myFile | postgres
    5170 | GEN_SQL_GROUP     | BEGIN              | myGroup2                     | From initial mark to mark EMAJ_LAST_MARK with tables/sequences filtering            | postgres
    5171 | GEN_SQL_GROUP     | END                | myGroup2                     | 11710 generated statements - script exported into /tmp/emaj_test/sql_scripts/myFile | postgres
    5172 | GEN_SQL_GROUP     | BEGIN              | myGroup2                     | From initial mark to mark EMAJ_LAST_MARK with tables/sequences filtering            | postgres
    5173 | GEN_SQL_GROUP     | END                | myGroup2                     | 11610 generated statements - script exported into /tmp/emaj_test/sql_scripts/myFile | postgres
    5174 | GEN_SQL_GROUP     | BEGIN              | myGroup2                     | From initial mark to mark EMAJ_LAST_MARK with tables/sequences filtering            | postgres
    5175 | GEN_SQL_GROUP     | END                | myGroup2                     | 1 generated statements - script exported into /tmp/emaj_test/sql_scripts/myFile     | postgres
    5176 | GEN_SQL_GROUP     | BEGIN              | phil's group#3",             | From initial mark to mark EMAJ_LAST_MARK with tables/sequences filtering            | postgres
    5177 | GEN_SQL_GROUP     | END                | phil's group#3",             | 0 generated statements - script exported into /tmp/emaj_test/sql_scripts/myFile     | postgres
    5178 | GEN_SQL_GROUPS    | BEGIN              | myGroup1,myGroup2            | From mark Multi-1 to mark Multi-3 with tables/sequences filtering                   | postgres
    5179 | GEN_SQL_GROUPS    | END                | myGroup1,myGroup2            | 100 generated statements - script exported into /tmp/emaj_test/sql_scripts/myFile   | postgres
    5199 | IMPORT_PARAMETERS | BEGIN              |                              |                                                                                     | postgres
    5200 |                   | INSERTED PARAMETER | history_retention            | @ 1 day                                                                             | postgres
    5201 | IMPORT_PARAMETERS | END                |                              | 1 parameters imported                                                               | postgres
    5202 | IMPORT_PARAMETERS | BEGIN              |                              |                                                                                     | postgres
    5203 |                   | DELETED PARAMETER  | history_retention            |                                                                                     | postgres
    5204 | IMPORT_PARAMETERS | END                |                              | 1 parameters imported                                                               | postgres
    5205 | IMPORT_PARAMETERS | BEGIN              |                              |                                                                                     | postgres
    5206 | IMPORT_PARAMETERS | END                |                              | 1 parameters imported                                                               | postgres
    5211 | IMPORT_PARAMETERS | BEGIN              |                              | Input file: '/tmp/orig_param_config'                                                | postgres
    5212 |                   | DELETED PARAMETER  | dblink_user_password         |                                                                                     | postgres
    5213 |                   | DELETED PARAMETER  | fixed_step_rollback_duration |                                                                                     | postgres
    5214 |                   | INSERTED PARAMETER | dblink_user_password         | <masked data>                                                                       | postgres
    5215 |                   | INSERTED PARAMETER | fixed_step_rollback_duration | @ 0.0025 secs                                                                       | postgres
    5216 | IMPORT_PARAMETERS | END                |                              | 2 parameters imported                                                               | postgres
    5217 | IMPORT_PARAMETERS | BEGIN              |                              | Input file: '/tmp/orig_param_config'                                                | postgres
    5218 |                   | UPDATED PARAMETER  | dblink_user_password         | <masked data>                                                                       | postgres
    5219 |                   | UPDATED PARAMETER  | fixed_step_rollback_duration | @ 0.0025 secs                                                                       | postgres
    5220 | IMPORT_PARAMETERS | END                |                              | 2 parameters imported                                                               | postgres
    5221 | PURGE_HISTORIES   | BEGIN              |                              |                                                                                     | postgres
    5222 | PURGE_HISTORIES   | END                |                              |                                                                                     | postgres
    5223 | PURGE_HISTORIES   | BEGIN              |                              | Retention delay @ 0                                                                 | postgres
    5224 | PURGE_HISTORIES   | END                |                              |                                                                                     | postgres
(115 rows)

