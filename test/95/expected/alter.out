-- alter.sql : test emaj_alter_group(), emaj_alter_groups(),
--                  emaj_move_table(), emaj_move_tables(), emaj_move_sequence(), emaj_move_sequences()
--                  emaj_modify_table() and emaj_modify_tables() functions
--
-- set sequence restart value
alter sequence emaj.emaj_hist_hist_id_seq restart 6000;
alter sequence emaj.emaj_time_stamp_time_id_seq restart 6000;
alter sequence emaj.emaj_rlbk_rlbk_id_seq restart 6000;
-----------------------------
-- stop, reset and drop groups
-----------------------------
select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               7
(1 row)

select emaj.emaj_reset_group('myGroup1');
 emaj_reset_group 
------------------
                7
(1 row)

select emaj.emaj_drop_group('myGroup1');
 emaj_drop_group 
-----------------
               7
(1 row)

select emaj.emaj_force_drop_group('myGroup2');
 emaj_force_drop_group 
-----------------------
                     8
(1 row)

select emaj.emaj_stop_group('phil''s group#3",','Simple stop mark');
 emaj_stop_group 
-----------------
               4
(1 row)

select emaj.emaj_drop_group('phil''s group#3",');
 emaj_drop_group 
-----------------
               4
(1 row)

select emaj.emaj_force_stop_group('myGroup4');
 emaj_force_stop_group 
-----------------------
                     5
(1 row)

select emaj.emaj_drop_group('myGroup4');
 emaj_drop_group 
-----------------
               5
(1 row)

select emaj.emaj_force_stop_group('emptyGroup');
 emaj_force_stop_group 
-----------------------
                     0
(1 row)

select emaj.emaj_drop_group('emptyGroup');
 emaj_drop_group 
-----------------
               0
(1 row)

-----------------------------
-- emaj_alter_group() tests on IDLE groups
-----------------------------
select emaj.emaj_create_group('myGroup1');
NOTICE:  table "myTbl3_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1."myTbl3_log""
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1."myTbl3""
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1."myTbl3""
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  table "mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1.mytbl1_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  table "mytbl4_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1.mytbl4_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl4"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl4"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  table "mytbl2_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1.mytbl2_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl2"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl2"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
WARNING:  _create_tbl: The table "myschema1.mytbl2" has triggers (mytbl2trg1, mytbl2trg2). They will be automatically disabled during E-Maj rollback operations, unless they have been recorded into the list of triggers that may be kept enabled, with the emaj_ignore_app_trigger() function.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  table "mytbl2b_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1.mytbl2b_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl2b" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl2b"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl2b" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl2b"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
 emaj_create_group 
-------------------
                 7
(1 row)

select emaj.emaj_create_group('myGroup2');
NOTICE:  table "myTbl3_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema2."myTbl3_log""
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2."myTbl3""
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2."myTbl3""
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  table "mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema2.mytbl1_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2.mytbl1"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2.mytbl1"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  table "mytbl2_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema2.mytbl2_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.mytbl2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2.mytbl2"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.mytbl2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2.mytbl2"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  table "mytbl4_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema2.mytbl4_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2.mytbl4"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2.mytbl4"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  table "mytbl5_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema2.mytbl5_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.mytbl5" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2.mytbl5"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.mytbl5" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2.mytbl5"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  table "mytbl6_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema2.mytbl6_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.mytbl6" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2.mytbl6"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.mytbl6" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2.mytbl6"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(array[v_groupName])"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 95 at PERFORM
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(array[v_groupName])"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 95 at PERFORM
 emaj_create_group 
-------------------
                 8
(1 row)

select emaj.emaj_create_group('emptyGroup',true,true);
 emaj_create_group 
-------------------
                 0
(1 row)

select emaj.emaj_create_group('myGroup4');
NOTICE:  table "mypartp1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema4.mypartp1_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema4.mypartp1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema4.mypartp1"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema4.mypartp1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema4.mypartp1"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  table "mypartp2_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema4.mypartp2_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema4.mypartp2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema4.mypartp2"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema4.mypartp2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema4.mypartp2"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  table "mytblc1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema4.mytblc1_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema4.mytblc1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema4.mytblc1"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema4.mytblc1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema4.mytblc1"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  table "mytblc2_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema4.mytblc2_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema4.mytblc2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema4.mytblc2"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema4.mytblc2" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema4.mytblc2"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  table "mytblm_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema4.mytblm_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_log_trg" for relation "myschema4.mytblm" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema4.mytblm"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema4.mytblm" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema4.mytblm"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
WARNING:  _create_tbl: The table "myschema4.mytblm" has triggers (mytblm_insert_trigger). They will be automatically disabled during E-Maj rollback operations, unless they have been recorded into the list of triggers that may be kept enabled, with the emaj_ignore_app_trigger() function.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
 emaj_create_group 
-------------------
                 5
(1 row)

-- unknown group
select emaj.emaj_alter_group(NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 17 at SQL statement
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
select emaj.emaj_alter_group('unknownGroup');
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 17 at SQL statement
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
-- group in logging state (2 tables need to be repaired)
begin;
  select emaj.emaj_start_group('myGroup1','');
 emaj_start_group 
------------------
                7
(1 row)

  select emaj.emaj_disable_protection_by_event_triggers();
 emaj_disable_protection_by_event_triggers 
-------------------------------------------
                                         3
(1 row)

  drop table emaj_myschema1.mytbl1_log;
  drop table emaj_myschema1.mytbl4_log;
  select emaj.emaj_enable_protection_by_event_triggers();
 emaj_enable_protection_by_event_triggers 
------------------------------------------
                                        3
(1 row)

  select emaj.emaj_alter_group('myGroup1');
ERROR:  alter_exec: Cannot repair the table myschema1.mytbl1. Its group myGroup1 is in LOGGING state.
CONTEXT:  SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
rollback;
-- alter a group with a table now already belonging to another group
begin;
  insert into emaj.emaj_group_def values ('myGroup1','myschema2','mytbl1');
  select emaj.emaj_alter_group('myGroup1');
WARNING:  _alter_groups: in the group "myGroup1", the table or sequence myschema2.mytbl1 already belongs to the group "myGroup2".
CONTEXT:  PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
ERROR:  _alter_groups: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
rollback;
-- log tablespace cannot be changed for sequence
begin;
  update emaj.emaj_group_def set grpdef_log_dat_tsp = 'b' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_alter_group('myGroup1');
WARNING:  _alter_groups: in the group "myGroup1", for the sequence myschema1."myTbl3_col31_seq", the data log tablespace is not NULL.
CONTEXT:  PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
ERROR:  _alter_groups: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
rollback;
begin;
  update emaj.emaj_group_def set grpdef_log_idx_tsp = 'b' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_alter_group('myGroup1');
WARNING:  _alter_groups: in the group "myGroup1", for the sequence myschema1."myTbl3_col31_seq", the index log tablespace is not NULL.
CONTEXT:  PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
ERROR:  _alter_groups: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
rollback;
-- dropped application table
begin;
  select emaj.emaj_disable_protection_by_event_triggers();
 emaj_disable_protection_by_event_triggers 
-------------------------------------------
                                         3
(1 row)

  drop table myschema1.mytbl2b;
  select emaj.emaj_enable_protection_by_event_triggers();
 emaj_enable_protection_by_event_triggers 
------------------------------------------
                                        3
(1 row)

  select emaj.emaj_alter_group('myGroup1');
WARNING:  _alter_groups: in the group "myGroup1", the table or sequence myschema1.mytbl2b does not exist.
CONTEXT:  PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
WARNING:  _alter_groups: in the group "myGroup1", the table or sequence myschema1.mytbl2b_col20_seq does not exist.
CONTEXT:  PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
ERROR:  _alter_groups: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
rollback;
-- should be OK
-- nothing to change
select emaj.emaj_alter_group('emptyGroup');
 emaj_alter_group 
------------------
                0
(1 row)

select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
    nspname     
----------------
 emaj
 emaj_myschema1
 emaj_myschema2
 emaj_myschema4
(4 rows)

-- only 3 tables to remove (+ log schemas emajb)
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl4';
select group_name, group_last_alter_time_id, group_has_waiting_changes, group_nb_table, group_nb_sequence
  from emaj.emaj_group where group_name = 'myGroup1';
 group_name | group_last_alter_time_id | group_has_waiting_changes | group_nb_table | group_nb_sequence 
------------+--------------------------+---------------------------+----------------+-------------------
 myGroup1   |                     6014 | t                         |              5 |                 2
(1 row)

select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_fk_groups: The table "myschema1.mytbl2" is referenced by the foreign key "mytbl4_col43_fkey" on the table "myschema1.mytbl4" that is outside the groups (myGroup1).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema1.mytbl1" is referenced by the foreign key "mytbl4_col44_fkey" on the table "myschema1.mytbl4" that is outside the groups (myGroup1).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                4
(1 row)

select group_name, group_last_alter_time_id, group_has_waiting_changes, group_nb_table, group_nb_sequence
  from emaj.emaj_group where group_name = 'myGroup1';
 group_name | group_last_alter_time_id | group_has_waiting_changes | group_nb_table | group_nb_sequence 
------------+--------------------------+---------------------------+----------------+-------------------
 myGroup1   |                     6015 | f                         |              2 |                 2
(1 row)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
    nspname     
----------------
 emaj
 emaj_myschema1
 emaj_myschema2
 emaj_myschema4
(4 rows)

-- only 1 sequence to remove
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
select emaj.emaj_alter_group('myGroup1');
WARNING:  _check_fk_groups: The table "myschema1.mytbl2" is referenced by the foreign key "mytbl4_col43_fkey" on the table "myschema1.mytbl4" that is outside the groups (myGroup1).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema1.mytbl1" is referenced by the foreign key "mytbl4_col44_fkey" on the table "myschema1.mytbl4" that is outside the groups (myGroup1).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                3
(1 row)

select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence 
----------------+-------------------
              2 |                 1
(1 row)

-- 3 tables to add
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2b',NULL,'tsp log''2','tsp log''2');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3',10,'tsplog1');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl4',20,'tsplog1','tsp log''2');
select group_name, group_last_alter_time_id, group_has_waiting_changes, group_nb_table, group_nb_sequence
  from emaj.emaj_group where group_name = 'myGroup1';
 group_name | group_last_alter_time_id | group_has_waiting_changes | group_nb_table | group_nb_sequence 
------------+--------------------------+---------------------------+----------------+-------------------
 myGroup1   |                     6016 | t                         |              2 |                 1
(1 row)

select emaj.emaj_alter_group('myGroup1');
NOTICE:  table "myTbl3_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1."myTbl3_log""
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1."myTbl3""
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1."myTbl3""
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  table "mytbl4_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1.mytbl4_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl4"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl4"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  table "mytbl2b_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1.mytbl2b_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl2b" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl2b"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl2b" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl2b"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                6
(1 row)

select group_name, group_last_alter_time_id, group_has_waiting_changes, group_nb_table, group_nb_sequence
  from emaj.emaj_group where group_name = 'myGroup1';
 group_name | group_last_alter_time_id | group_has_waiting_changes | group_nb_table | group_nb_sequence 
------------+--------------------------+---------------------------+----------------+-------------------
 myGroup1   |                     6017 | f                         |              5 |                 1
(1 row)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
    nspname     
----------------
 emaj
 emaj_myschema1
 emaj_myschema2
 emaj_myschema4
(4 rows)

-- only 1 sequence to add
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3_col31_seq');
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1';
 group_nb_table | group_nb_sequence 
----------------+-------------------
              5 |                 2
(1 row)

-- only change the log data tablespace for 1 table
update emaj.emaj_group_def set grpdef_log_dat_tsp = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'mytbl2b_log';
 spcname 
---------
(0 rows)

update emaj.emaj_group_def set grpdef_log_dat_tsp = 'tsp log''2' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'mytbl2b_log';
  spcname  
-----------
 tsp log'2
(1 row)

-- change the log data tablespace for all tables of a group
update emaj.emaj_group_def set grpdef_log_dat_tsp = case when grpdef_log_dat_tsp is NULL then 'tsplog1' when grpdef_log_dat_tsp = 'tsplog1' then 'tsp log''2' else NULL end where grpdef_schema = 'myschema1' and grpdef_tblseq not like '%seq';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

update emaj.emaj_group_def set grpdef_log_dat_tsp = case when grpdef_log_dat_tsp = 'tsplog1' then NULL when grpdef_log_dat_tsp = 'tsp log''2' then 'tsplog1' else 'tsp log''2' end where grpdef_schema = 'myschema1' and grpdef_tblseq not like '%seq';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

-- only change the log index tablespace, using a session default tablespace
update emaj.emaj_group_def set grpdef_log_idx_tsp = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
set default_tablespace = tspemaj_renamed;
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

reset default_tablespace;
select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'mytbl2b_log_idx';
     spcname     
-----------------
 tspemaj_renamed
(1 row)

update emaj.emaj_group_def set grpdef_log_idx_tsp = 'tsp log''2' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'mytbl2b_log_idx';
  spcname  
-----------
 tsp log'2
(1 row)

-- only change the priority
update emaj.emaj_group_def set grpdef_priority = 30 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1' and upper_inf(rel_time_range);
 rel_priority 
--------------
           30
(1 row)

update emaj.emaj_group_def set grpdef_priority = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1' and upper_inf(rel_time_range);
 rel_priority 
--------------
             
(1 row)

update emaj.emaj_group_def set grpdef_priority = 20 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1' and upper_inf(rel_time_range);
 rel_priority 
--------------
           20
(1 row)

-- change the table structure
alter table myschema1.mytbl1 add column newcol int;
select emaj.emaj_alter_group('myGroup1');
NOTICE:  table "mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1.mytbl1_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

alter table myschema1.mytbl1 rename newcol to newcol2;
select emaj.emaj_alter_group('myGroup1');
NOTICE:  table "mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1.mytbl1_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

alter table myschema1.mytbl1 alter column newcol2 type bigint;
select emaj.emaj_alter_group('myGroup1');
NOTICE:  table "mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1.mytbl1_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

alter table myschema1.mytbl1 alter column newcol2 set default 0;
-- NB: changing default has no impact on emaj component 
select emaj.emaj_alter_group('myGroup1');
 emaj_alter_group 
------------------
                7
(1 row)

alter table myschema1.mytbl1 drop column newcol2;
select emaj.emaj_alter_group('myGroup1');
NOTICE:  table "mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1.mytbl1_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

-- rename a table and/or change its schema
alter table myschema1.mytbl1 rename to mytbl1_new_name;
update emaj.emaj_group_def set grpdef_tblseq = 'mytbl1_new_name' 
  where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_group('myGroup1');
NOTICE:  drop cascades to trigger emaj_log_trg on table myschema1.mytbl1_new_name
CONTEXT:  SQL statement "DROP FUNCTION IF EXISTS emaj_myschema1.mytbl1_log_fnct() CASCADE"
PL/pgSQL function emaj._drop_tbl(emaj.emaj_relation,bigint) line 24 at EXECUTE
SQL statement "SELECT emaj._drop_tbl(emaj.emaj_relation.*, v_timeId) FROM emaj.emaj_relation
        WHERE rel_schema = v_schema AND rel_tblseq = v_table AND upper_inf(rel_time_range)"
PL/pgSQL function emaj._remove_tbl(text,text,text,boolean,bigint,text) line 21 at PERFORM
SQL statement "SELECT emaj._remove_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, r_plan.altr_group_is_logging,
                                   v_timeId, v_function)"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 24 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  table "mytbl1_new_name_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1.mytbl1_new_name_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1_new_name" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1_new_name"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

alter table myschema1.mytbl1_new_name set schema public;
update emaj.emaj_group_def set grpdef_schema = 'public'
  where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1_new_name';
select emaj.emaj_alter_group('myGroup1');
NOTICE:  drop cascades to trigger emaj_log_trg on table public.mytbl1_new_name
CONTEXT:  SQL statement "DROP FUNCTION IF EXISTS emaj_myschema1.mytbl1_new_name_log_fnct() CASCADE"
PL/pgSQL function emaj._drop_tbl(emaj.emaj_relation,bigint) line 24 at EXECUTE
SQL statement "SELECT emaj._drop_tbl(emaj.emaj_relation.*, v_timeId) FROM emaj.emaj_relation
        WHERE rel_schema = v_schema AND rel_tblseq = v_table AND upper_inf(rel_time_range)"
PL/pgSQL function emaj._remove_tbl(text,text,text,boolean,bigint,text) line 21 at PERFORM
SQL statement "SELECT emaj._remove_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, r_plan.altr_group_is_logging,
                                   v_timeId, v_function)"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 24 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  table "mytbl1_new_name_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_public.mytbl1_new_name_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for relation "public.mytbl1_new_name" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON public.mytbl1_new_name"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

alter table public.mytbl1_new_name rename to mytbl1;
alter table public.mytbl1 set schema myschema1;
update emaj.emaj_group_def set grpdef_schema = 'myschema1', grpdef_tblseq = 'mytbl1'
  where grpdef_schema = 'public' and grpdef_tblseq = 'mytbl1_new_name';
-- the next call gives a useless mark name parameter (the group is in idle state)
select emaj.emaj_alter_group('myGroup1','useless_mark_name');
NOTICE:  drop cascades to trigger emaj_log_trg on table myschema1.mytbl1
CONTEXT:  SQL statement "DROP FUNCTION IF EXISTS emaj_public.mytbl1_new_name_log_fnct() CASCADE"
PL/pgSQL function emaj._drop_tbl(emaj.emaj_relation,bigint) line 24 at EXECUTE
SQL statement "SELECT emaj._drop_tbl(emaj.emaj_relation.*, v_timeId) FROM emaj.emaj_relation
        WHERE rel_schema = v_schema AND rel_tblseq = v_table AND upper_inf(rel_time_range)"
PL/pgSQL function emaj._remove_tbl(text,text,text,boolean,bigint,text) line 21 at PERFORM
SQL statement "SELECT emaj._remove_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, r_plan.altr_group_is_logging,
                                   v_timeId, v_function)"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 24 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  table "mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1.mytbl1_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

-- missing emaj components
select emaj.emaj_disable_protection_by_event_triggers();
 emaj_disable_protection_by_event_triggers 
-------------------------------------------
                                         3
(1 row)

drop trigger emaj_log_trg on myschema1.mytbl1;
select emaj.emaj_alter_group('myGroup1');
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._drop_tbl(emaj.emaj_relation,bigint) line 17 at EXECUTE
SQL statement "SELECT emaj._drop_tbl(emaj.emaj_relation.*, v_timeId) FROM emaj.emaj_relation
              WHERE rel_schema = r_plan.altr_schema AND rel_tblseq = r_plan.altr_tblseq AND upper_inf(rel_time_range)"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 42 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  table "mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1.mytbl1_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

drop function emaj_myschema1.mytbl1_log_fnct() cascade;
NOTICE:  drop cascades to trigger emaj_log_trg on table myschema1.mytbl1
select emaj.emaj_alter_group('myGroup1');
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._drop_tbl(emaj.emaj_relation,bigint) line 17 at EXECUTE
SQL statement "SELECT emaj._drop_tbl(emaj.emaj_relation.*, v_timeId) FROM emaj.emaj_relation
              WHERE rel_schema = r_plan.altr_schema AND rel_tblseq = r_plan.altr_tblseq AND upper_inf(rel_time_range)"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 42 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  function emaj_myschema1.mytbl1_log_fnct() does not exist, skipping
CONTEXT:  SQL statement "DROP FUNCTION IF EXISTS emaj_myschema1.mytbl1_log_fnct() CASCADE"
PL/pgSQL function emaj._drop_tbl(emaj.emaj_relation,bigint) line 24 at EXECUTE
SQL statement "SELECT emaj._drop_tbl(emaj.emaj_relation.*, v_timeId) FROM emaj.emaj_relation
              WHERE rel_schema = r_plan.altr_schema AND rel_tblseq = r_plan.altr_tblseq AND upper_inf(rel_time_range)"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 42 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  table "mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1.mytbl1_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

drop table emaj_myschema1.mytbl1_log;
select emaj.emaj_alter_group('myGroup1');
NOTICE:  table "mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1.mytbl1_log CASCADE"
PL/pgSQL function emaj._drop_tbl(emaj.emaj_relation,bigint) line 35 at EXECUTE
SQL statement "SELECT emaj._drop_tbl(emaj.emaj_relation.*, v_timeId) FROM emaj.emaj_relation
              WHERE rel_schema = r_plan.altr_schema AND rel_tblseq = r_plan.altr_tblseq AND upper_inf(rel_time_range)"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 42 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  table "mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1.mytbl1_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                                     v_timeId, v_isRollbackable, r_plan.altr_group_is_logging)
              FROM emaj.emaj_group_def
              WHERE grpdef_group = coalesce (r_plan.altr_new_group, r_plan.altr_group)
                AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 48 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_group(text,text) line 6 at RETURN
 emaj_alter_group 
------------------
                7
(1 row)

select emaj.emaj_enable_protection_by_event_triggers();
 emaj_enable_protection_by_event_triggers 
------------------------------------------
                                        3
(1 row)

-- multiple emaj_alter_group() on a logging group => fails
-- this test is commented because the generated error message differs from one run to another
--begin;
--  select emaj.emaj_start_group('myGroup4');
--  select emaj.emaj_alter_group('myGroup4');
--  select emaj.emaj_alter_group('myGroup4');
--rollback;
-----------------------------
-- emaj_alter_groups() tests on IDLE groups
-----------------------------
-- unknown groups
select emaj.emaj_alter_groups('{"myGroup1","unknownGroup"}');
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 17 at SQL statement
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
-- no group at all
select emaj.emaj_alter_groups('{NULL,""}');
WARNING:  _check_group_names: No group to process.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := v_groupNames, v_mayBeNull := v_multiGroup, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 17 at SQL statement
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                  
(1 row)

-- groups in logging state
begin;
  select emaj.emaj_start_groups('{"myGroup1","myGroup2"}','');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._start_groups(text[],text,boolean,boolean) line 27 at PERFORM
PL/pgSQL function emaj.emaj_start_groups(text[],text,boolean) line 11 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._start_groups(text[],text,boolean,boolean) line 27 at PERFORM
PL/pgSQL function emaj.emaj_start_groups(text[],text,boolean) line 11 at RETURN
 emaj_start_groups 
-------------------
                15
(1 row)

  select emaj.emaj_disable_protection_by_event_triggers();
 emaj_disable_protection_by_event_triggers 
-------------------------------------------
                                         3
(1 row)

  drop table emaj_myschema1.mytbl1_log;
  drop table emaj_myschema2.mytbl1_log;
  select emaj.emaj_enable_protection_by_event_triggers();
 emaj_enable_protection_by_event_triggers 
------------------------------------------
                                        3
(1 row)

  select emaj.emaj_alter_groups('{"myGroup2","myGroup1","myGroup4"}');
ERROR:  alter_exec: Cannot repair the table myschema1.mytbl1. Its group myGroup1 is in LOGGING state.
CONTEXT:  SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
rollback;
-- alter groups with a table now already belonging to another group
begin;
  insert into emaj.emaj_group_def values ('myGroup1','myschema2','mytbl1');
  select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _alter_groups: the table myschema2.mytbl1 is assigned several times.
CONTEXT:  PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
ERROR:  _alter_groups: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
rollback;
-- a PRIMARY KEY is missing
begin;
  alter table myschema1.mytbl4 drop constraint mytbl4_pkey;
  select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _alter_groups: in the group "myGroup1", the table myschema1.mytbl4 has no PRIMARY KEY.
CONTEXT:  PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
ERROR:  _alter_groups: One or several errors have been detected in the emaj_group_def table content.
CONTEXT:  PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
rollback;
-- should be OK
-- 3 tables and 1 sequence to remove
select group_name, group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1' or group_name = 'myGroup2' order by 1;
 group_name | group_nb_table | group_nb_sequence 
------------+----------------+-------------------
 myGroup1   |              5 |                 2
 myGroup2   |              6 |                 2
(2 rows)

delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema2' and grpdef_tblseq = 'mytbl4';
delete from emaj.emaj_group_def where grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl2" is referenced by the foreign key "mytbl4_col43_fkey" on the table "myschema2.mytbl4" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl1" is referenced by the foreign key "mytbl4_col44_fkey" on the table "myschema2.mytbl4" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                11
(1 row)

select group_name, group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1' or group_name = 'myGroup2' order by 1;
 group_name | group_nb_table | group_nb_sequence 
------------+----------------+-------------------
 myGroup1   |              3 |                 1
 myGroup2   |              5 |                 2
(2 rows)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
    nspname     
----------------
 emaj
 emaj_myschema1
 emaj_myschema2
 emaj_myschema4
(4 rows)

-- 3 tables and 1 sequence to add
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2b',NULL,'tsp log''2','tsp log''2');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3',10,'tsplog1');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl4');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3_col31_seq');
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
NOTICE:  table "myTbl3_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1."myTbl3_log""
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1."myTbl3""
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.myTbl3" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1."myTbl3""
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
NOTICE:  table "mytbl2b_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1.mytbl2b_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl2b" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl2b"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl2b" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl2b"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
NOTICE:  table "mytbl4_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema2.mytbl4_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for relation "myschema2.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema2.mytbl4"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema2.mytbl4" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema2.mytbl4"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                15
(1 row)

select group_name, group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1' or group_name = 'myGroup2' order by 1;
 group_name | group_nb_table | group_nb_sequence 
------------+----------------+-------------------
 myGroup1   |              5 |                 2
 myGroup2   |              6 |                 2
(2 rows)

select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
    nspname     
----------------
 emaj
 emaj_myschema1
 emaj_myschema2
 emaj_myschema4
(4 rows)

-- only change the log data tablespace for 1 table, the log index tablespace for another table and the priority for a third one
update emaj.emaj_group_def set grpdef_log_dat_tsp = NULL where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
update emaj.emaj_group_def set grpdef_log_idx_tsp = 'tsplog1' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'mytbl6';
update emaj.emaj_group_def set grpdef_priority = 30 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
set default_tablespace = tspemaj_renamed;
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                15
(1 row)

reset default_tablespace;
select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'mytbl2b_log';
     spcname     
-----------------
 tspemaj_renamed
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'mytbl6_log_idx';
 spcname 
---------
 tsplog1
(1 row)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1' and upper_inf(rel_time_range);
 rel_priority 
--------------
           30
(1 row)

--
update emaj.emaj_group_def set grpdef_log_dat_tsp = 'tsp log''2' where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl2b';
update emaj.emaj_group_def set grpdef_log_idx_tsp = NULL where grpdef_schema = 'myschema2' and grpdef_tblseq = 'mytbl6';
update emaj.emaj_group_def set grpdef_priority = 20 where grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                15
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'mytbl2b_log';
  spcname  
-----------
 tsp log'2
(1 row)

select spcname from pg_tablespace, pg_class where reltablespace = pg_tablespace.oid and relname = 'mytbl6_log_idx';
 spcname 
---------
(0 rows)

select rel_priority from emaj.emaj_relation where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1' and upper_inf(rel_time_range);
 rel_priority 
--------------
           20
(1 row)

-- move 1 table and 1 sequence from a group to another
update emaj.emaj_group_def set grpdef_group = 'myGroup1' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3';
update emaj.emaj_group_def set grpdef_group = 'myGroup1' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3_col31_seq';
select rel_group, count(*) from emaj.emaj_relation where rel_group like 'myGroup%' and upper_inf(rel_time_range) group by 1 order by 1;
 rel_group | count 
-----------+-------
 myGroup1  |     7
 myGroup2  |     8
 myGroup4  |     5
(3 rows)

select group_name, group_last_alter_time_id, group_has_waiting_changes, group_nb_table, group_nb_sequence
  from emaj.emaj_group where group_name IN ('myGroup1','myGroup2') order by group_name;
 group_name | group_last_alter_time_id | group_has_waiting_changes | group_nb_table | group_nb_sequence 
------------+--------------------------+---------------------------+----------------+-------------------
 myGroup1   |                     6044 | t                         |              5 |                 2
 myGroup2   |                     6044 | t                         |              6 |                 2
(2 rows)

select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                15
(1 row)

select group_name, group_last_alter_time_id, group_has_waiting_changes, group_nb_table, group_nb_sequence
  from emaj.emaj_group where group_name IN ('myGroup1','myGroup2') order by group_name;
 group_name | group_last_alter_time_id | group_has_waiting_changes | group_nb_table | group_nb_sequence 
------------+--------------------------+---------------------------+----------------+-------------------
 myGroup1   |                     6045 | f                         |              6 |                 3
 myGroup2   |                     6045 | f                         |              5 |                 1
(2 rows)

select rel_group, count(*) from emaj.emaj_relation where rel_group like 'myGroup%' and upper_inf(rel_time_range) group by 1 order by 1;
 rel_group | count 
-----------+-------
 myGroup1  |     9
 myGroup2  |     6
 myGroup4  |     5
(3 rows)

update emaj.emaj_group_def set grpdef_group = 'myGroup2' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3';
update emaj.emaj_group_def set grpdef_group = 'myGroup2' where grpdef_schema = 'myschema2' and grpdef_tblseq = 'myTbl3_col31_seq';
-- the next call gives a useless mark name parameter (the group is in idle state)
select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}','useless_mark_name_%');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                15
(1 row)

select rel_group, count(*) from emaj.emaj_relation where rel_group like 'myGroup%' and upper_inf(rel_time_range) group by 1 order by 1;
 rel_group | count 
-----------+-------
 myGroup1  |     7
 myGroup2  |     8
 myGroup4  |     5
(3 rows)

-- empty idle groups
begin;
  delete from emaj.emaj_group_def where grpdef_group IN ('myGroup1','myGroup2');
  select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
 emaj_alter_groups 
-------------------
                 0
(1 row)

-- add one table or sequence to the empty groups
  insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl1',20);
  insert into emaj.emaj_group_def values ('myGroup2','myschema2','myseq1');
  select emaj.emaj_alter_groups('{"myGroup1","myGroup2"}');
NOTICE:  table "mytbl1_log" does not exist, skipping
CONTEXT:  SQL statement "DROP TABLE IF EXISTS emaj_myschema1.mytbl1_log"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 80 at EXECUTE
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
NOTICE:  trigger "emaj_log_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_log_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_log_trigger(text,text,text,text) line 9 at EXECUTE
SQL statement "SELECT emaj._create_log_trigger(v_fullTableName, v_logTableName, v_sequenceName, v_logFnctName)"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 127 at PERFORM
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
NOTICE:  trigger "emaj_trunc_trg" for relation "myschema1.mytbl1" does not exist, skipping
CONTEXT:  SQL statement "DROP TRIGGER IF EXISTS emaj_trunc_trg ON myschema1.mytbl1"
PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 135 at EXECUTE
SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(r_plan.altr_schema, r_plan.altr_tblseq, r_plan.altr_group, grpdef_priority, grpdef_log_dat_tsp,
                                grpdef_log_idx_tsp, r_plan.altr_group_is_logging, v_timeId, v_function)
            FROM emaj.emaj_group_def
            WHERE grpdef_group = r_plan.altr_group AND grpdef_schema = r_plan.altr_schema AND grpdef_tblseq = r_plan.altr_tblseq"
PL/pgSQL function emaj._alter_exec(bigint,boolean) line 102 at PERFORM
SQL statement "SELECT emaj._alter_exec(v_timeId, v_multiGroup)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 58 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
WARNING:  _check_fk_groups: The table "myschema1.mytbl1" is referenced by the foreign key "mytbl4_col44_fkey" on the table "myschema1.mytbl4" that is outside the groups (myGroup1,myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(v_groupNames)"
PL/pgSQL function emaj._alter_groups(text[],boolean,text) line 72 at PERFORM
PL/pgSQL function emaj.emaj_alter_groups(text[],text) line 6 at RETURN
 emaj_alter_groups 
-------------------
                 2
(1 row)

rollback;
-----------------------------------
-- emaj_move_table
-----------------------------------
-- error cases
-- table not in a group
select emaj.emaj_move_table('dummySchema','mytbl1','myGroup1');
ERROR:  _move_tables: some tables ("dummySchema".mytbl1) do not currently belong to any tables group.
CONTEXT:  PL/pgSQL function emaj.emaj_move_table(text,text,text,text) line 6 at RETURN
select emaj.emaj_move_table('myschema1','dummyTable','myGroup1');
ERROR:  _move_tables: some tables (myschema1."dummyTable") do not currently belong to any tables group.
CONTEXT:  PL/pgSQL function emaj.emaj_move_table(text,text,text,text) line 6 at RETURN
-- bad new group
select emaj.emaj_move_table('myschema1','mytbl1','dummyGroup');
ERROR:  _check_group_names: The group "dummyGroup" does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_newGroup], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj._move_tables(text,text[],text,text,boolean,boolean) line 27 at PERFORM
PL/pgSQL function emaj.emaj_move_table(text,text,text,text) line 6 at RETURN
-- bad mark
select emaj.emaj_move_table('myschema1','mytbl1','myGroup1','EMAJ_LAST_MARK');
WARNING:  _move_tables: some tables (myschema1.mytbl1) already belong to the tables group myGroup1.
CONTEXT:  PL/pgSQL function emaj.emaj_move_table(text,text,text,text) line 6 at RETURN
ERROR:  _check_new_mark: "EMAJ_LAST_MARK" is not an allowed name for a new mark.
CONTEXT:  SQL statement "SELECT emaj._check_new_mark(array[v_groupName], v_mark)"
PL/pgSQL function emaj._move_tables(text,text[],text,text,boolean,boolean) line 61 at SQL statement
PL/pgSQL function emaj.emaj_move_table(text,text,text,text) line 6 at RETURN
-- move to the same group
select emaj.emaj_move_table('myschema1','mytbl1','myGroup1');
WARNING:  _move_tables: some tables (myschema1.mytbl1) already belong to the tables group myGroup1.
CONTEXT:  PL/pgSQL function emaj.emaj_move_table(text,text,text,text) line 6 at RETURN
 emaj_move_table 
-----------------
               0
(1 row)

-- ok
select emaj.emaj_move_table('myschema1','mytbl1','myGroup2');
 emaj_move_table 
-----------------
               1
(1 row)

-----------------------------------
-- emaj_move_tables with array
-----------------------------------
-- error cases
-- table not in a group
select emaj.emaj_move_tables('myschema1',array['dummyTable','mytbl1','mytbl2'],'myGroup1');
ERROR:  _move_tables: some tables (myschema1."dummyTable") do not currently belong to any tables group.
CONTEXT:  PL/pgSQL function emaj.emaj_move_tables(text,text[],text,text) line 6 at RETURN
-- empty tables array
select emaj.emaj_move_tables('myschema1',array[]::text[],'myGroup1');
WARNING:  _move_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_move_tables(text,text[],text,text) line 6 at RETURN
 emaj_move_tables 
------------------
                0
(1 row)

select emaj.emaj_move_tables('myschema1',null,'myGroup1');
WARNING:  _move_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_move_tables(text,text[],text,text) line 6 at RETURN
 emaj_move_tables 
------------------
                0
(1 row)

select emaj.emaj_move_tables('myschema1',array[''],'myGroup1');
WARNING:  _move_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_move_tables(text,text[],text,text) line 6 at RETURN
 emaj_move_tables 
------------------
                0
(1 row)

-- ok (with a duplicate table name)
select emaj.emaj_move_tables('myschema1',array['mytbl2','mytbl2b','mytbl2'],'myGroup2');
 emaj_move_tables 
------------------
                2
(1 row)

select rel_schema, rel_tblseq, rel_group from emaj.emaj_relation
  where rel_schema = 'myschema1' and rel_kind = 'r' and upper_inf(rel_time_range)
  order by 1,2,3;
 rel_schema | rel_tblseq | rel_group 
------------+------------+-----------
 myschema1  | myTbl3     | myGroup1
 myschema1  | mytbl1     | myGroup2
 myschema1  | mytbl2     | myGroup2
 myschema1  | mytbl2b    | myGroup2
 myschema1  | mytbl4     | myGroup1
(5 rows)

-----------------------------------
-- emaj_move_tables with filters
-----------------------------------
-- empty tables array
select emaj.emaj_move_tables('myschema1',null,null,'myGroup1');
WARNING:  _move_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_move_tables(text,text,text,text,text) line 23 at RETURN
 emaj_move_tables 
------------------
                0
(1 row)

select emaj.emaj_move_tables('myschema1','','','myGroup1');
WARNING:  _move_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_move_tables(text,text,text,text,text) line 23 at RETURN
 emaj_move_tables 
------------------
                0
(1 row)

select emaj.emaj_move_tables('myschema1','mytbl1','mytbl1','myGroup1');
WARNING:  _move_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_move_tables(text,text,text,text,text) line 23 at RETURN
 emaj_move_tables 
------------------
                0
(1 row)

-- ok and go back to myGroup1
select emaj.emaj_move_tables('myschema1','my(t|T)bl.*','mytbl2$','myGroup1');
 emaj_move_tables 
------------------
                2
(1 row)

select emaj.emaj_move_tables('myschema1','.*','','myGroup1');
 emaj_move_tables 
------------------
                1
(1 row)

select altr_time_id, altr_step, altr_schema, altr_tblseq, altr_group, altr_priority, altr_group_is_logging,
       altr_new_group, altr_new_group_is_logging from emaj.emaj_alter_plan
  order by 1 desc, 2,3,4 limit 6;
 altr_time_id | altr_step | altr_schema | altr_tblseq | altr_group | altr_priority | altr_group_is_logging | altr_new_group | altr_new_group_is_logging 
--------------+-----------+-------------+-------------+------------+---------------+-----------------------+----------------+---------------------------
         6053 | MOVE_TBL  | myschema1   | mytbl2      | myGroup2   |               | f                     | myGroup1       | f
         6052 | MOVE_TBL  | myschema1   | mytbl1      | myGroup2   |               | f                     | myGroup1       | f
         6052 | MOVE_TBL  | myschema1   | mytbl2b     | myGroup2   |               | f                     | myGroup1       | f
         6051 | MOVE_TBL  | myschema1   | mytbl2      | myGroup1   |               | f                     | myGroup2       | f
         6051 | MOVE_TBL  | myschema1   | mytbl2b     | myGroup1   |               | f                     | myGroup2       | f
         6050 | MOVE_TBL  | myschema1   | mytbl1      | myGroup1   |               | f                     | myGroup2       | f
(6 rows)

select group_last_alter_time_id, group_nb_table, group_nb_sequence from emaj.emaj_group 
  where group_name in ('myGroup1','myGroup2') order by 1 desc ,2,3;
 group_last_alter_time_id | group_nb_table | group_nb_sequence 
--------------------------+----------------+-------------------
                     6053 |              5 |                 2
                     6053 |              6 |                 2
(2 rows)

-----------------------------------
-- emaj_move_sequence
-----------------------------------
-- error cases
-- sequence not in a group
select emaj.emaj_move_sequence('dummySchema','myseq1','myGroup1');
ERROR:  _move_sequences: some sequences ("dummySchema".myseq1) do not currently belong to any tables group.
CONTEXT:  PL/pgSQL function emaj.emaj_move_sequence(text,text,text,text) line 6 at RETURN
select emaj.emaj_move_sequence('myschema2','dummySequence','myGroup1');
ERROR:  _move_sequences: some sequences (myschema2."dummySequence") do not currently belong to any tables group.
CONTEXT:  PL/pgSQL function emaj.emaj_move_sequence(text,text,text,text) line 6 at RETURN
-- bad new group
select emaj.emaj_move_sequence('myschema2','myseq1','dummyGroup');
ERROR:  _check_group_names: The group "dummyGroup" does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_newGroup], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj._move_sequences(text,text[],text,text,boolean,boolean) line 26 at PERFORM
PL/pgSQL function emaj.emaj_move_sequence(text,text,text,text) line 6 at RETURN
-- bad mark
select emaj.emaj_move_sequence('myschema2','myseq1','myGroup1','EMAJ_LAST_MARK');
ERROR:  _check_new_mark: "EMAJ_LAST_MARK" is not an allowed name for a new mark.
CONTEXT:  SQL statement "SELECT emaj._check_new_mark(array[v_groupName], v_mark)"
PL/pgSQL function emaj._move_sequences(text,text[],text,text,boolean,boolean) line 60 at SQL statement
PL/pgSQL function emaj.emaj_move_sequence(text,text,text,text) line 6 at RETURN
-- move to the same group
select emaj.emaj_move_sequence('myschema2','myseq1','myGroup2');
WARNING:  _move_sequences: some sequences (myschema2.myseq1) already belong to the tables group myGroup2.
CONTEXT:  PL/pgSQL function emaj.emaj_move_sequence(text,text,text,text) line 6 at RETURN
 emaj_move_sequence 
--------------------
                  0
(1 row)

-- ok
select emaj.emaj_move_sequence('myschema2','myseq1','myGroup1');
 emaj_move_sequence 
--------------------
                  1
(1 row)

-----------------------------------
-- emaj_move_sequences with array
-----------------------------------
-- error cases
-- sequence not in a group
select emaj.emaj_move_sequences('myschema2',array['dummySequence','myseq1'],'myGroup1');
ERROR:  _move_sequences: some sequences (myschema2."dummySequence") do not currently belong to any tables group.
CONTEXT:  PL/pgSQL function emaj.emaj_move_sequences(text,text[],text,text) line 6 at RETURN
-- empty tables array
select emaj.emaj_move_sequences('myschema2',array[]::text[],'myGroup1');
WARNING:  _move_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_move_sequences(text,text[],text,text) line 6 at RETURN
 emaj_move_sequences 
---------------------
                   0
(1 row)

select emaj.emaj_move_sequences('myschema2',null,'myGroup1');
WARNING:  _move_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_move_sequences(text,text[],text,text) line 6 at RETURN
 emaj_move_sequences 
---------------------
                   0
(1 row)

select emaj.emaj_move_sequences('myschema2',array[''],'myGroup1');
WARNING:  _move_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_move_sequences(text,text[],text,text) line 6 at RETURN
 emaj_move_sequences 
---------------------
                   0
(1 row)

-- ok (with a duplicate sequence name)
select emaj.emaj_move_sequences('myschema2',array['myseq1','myseq1'],'myGroup4');
 emaj_move_sequences 
---------------------
                   1
(1 row)

select rel_schema, rel_tblseq, rel_group from emaj.emaj_relation
  where rel_schema = 'myschema2' and rel_kind = 'S' and upper_inf(rel_time_range)
  order by 1,2,3;
 rel_schema |    rel_tblseq    | rel_group 
------------+------------------+-----------
 myschema2  | myTbl3_col31_seq | myGroup2
 myschema2  | myseq1           | myGroup4
(2 rows)

-----------------------------------
-- emaj_move_sequences with filters
-----------------------------------
-- empty sequences array
select emaj.emaj_move_sequences('myschema21',null,null,'myGroup2');
WARNING:  _move_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_move_sequences(text,text,text,text,text) line 23 at RETURN
 emaj_move_sequences 
---------------------
                   0
(1 row)

select emaj.emaj_move_sequences('myschema21','','','myGroup2');
WARNING:  _move_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_move_sequences(text,text,text,text,text) line 23 at RETURN
 emaj_move_sequences 
---------------------
                   0
(1 row)

select emaj.emaj_move_sequences('myschema21','myseq1','myseq1','myGroup2');
WARNING:  _move_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_move_sequences(text,text,text,text,text) line 23 at RETURN
 emaj_move_sequences 
---------------------
                   0
(1 row)

-- ok and go back to myGroup2
select emaj.emaj_move_sequences('myschema2','.*','','myGroup2');
 emaj_move_sequences 
---------------------
                   1
(1 row)

select altr_time_id, altr_step, altr_schema, altr_tblseq, altr_group, altr_priority, altr_group_is_logging,
       altr_new_group, altr_new_group_is_logging from emaj.emaj_alter_plan
  order by 1 desc, 2,3,4 limit 3;
 altr_time_id | altr_step | altr_schema | altr_tblseq | altr_group | altr_priority | altr_group_is_logging | altr_new_group | altr_new_group_is_logging 
--------------+-----------+-------------+-------------+------------+---------------+-----------------------+----------------+---------------------------
         6057 | MOVE_SEQ  | myschema2   | myseq1      | myGroup4   |               | f                     | myGroup2       | f
         6056 | MOVE_SEQ  | myschema2   | myseq1      | myGroup1   |               | f                     | myGroup4       | f
         6055 | MOVE_SEQ  | myschema2   | myseq1      | myGroup2   |               | f                     | myGroup1       | f
(3 rows)

select group_last_alter_time_id, group_nb_table, group_nb_sequence from emaj.emaj_group 
  where group_name in ('myGroup1','myGroup2','myGroup4') order by 1 desc ,2,3;
 group_last_alter_time_id | group_nb_table | group_nb_sequence 
--------------------------+----------------+-------------------
                     6057 |              5 |                 0
                     6057 |              6 |                 2
                     6056 |              5 |                 2
(3 rows)

-----------------------------------
-- emaj_modify_table
-----------------------------------
-- error cases
-- table not in a group
select emaj.emaj_modify_table('dummySchema','mytbl1',null);
ERROR:  _modify_tables: The schema "dummySchema" does not exist.
CONTEXT:  PL/pgSQL function emaj.emaj_modify_table(text,text,jsonb,text) line 7 at RETURN
select emaj.emaj_modify_table('myschema1','dummyTable',null);
ERROR:  _modify_tables: some tables (myschema1."dummyTable") do not currently belong to any tables group.
CONTEXT:  PL/pgSQL function emaj.emaj_modify_table(text,text,jsonb,text) line 7 at RETURN
-- invalid priority
select emaj.emaj_modify_table('myschema1','mytbl1','{"priority":"not_numeric"}'::jsonb);
ERROR:  _modify_tables: the "priority" property is not numeric.
CONTEXT:  PL/pgSQL function emaj.emaj_modify_table(text,text,jsonb,text) line 7 at RETURN
-- invalid tablespace
select emaj.emaj_modify_table('myschema1','mytbl1','{"log_data_tablespace":"dummytsp"}'::jsonb);
ERROR:  _modify_tables: the log data tablespace "dummytsp" does not exists.
CONTEXT:  PL/pgSQL function emaj.emaj_modify_table(text,text,jsonb,text) line 7 at RETURN
select emaj.emaj_modify_table('myschema1','mytbl1','{"log_index_tablespace":"dummytsp"}'::jsonb);
ERROR:  _modify_tables: the log index tablespace "dummytsp" does not exists.
CONTEXT:  PL/pgSQL function emaj.emaj_modify_table(text,text,jsonb,text) line 7 at RETURN
-- unknown property
select emaj.emaj_modify_table('myschema1','mytbl1','{"unknown_property":null}'::jsonb);
ERROR:  _modify_tables: properties "{"unknown_property": null}" are unknown.
CONTEXT:  PL/pgSQL function emaj.emaj_modify_table(text,text,jsonb,text) line 7 at RETURN
-- bad mark
select emaj.emaj_modify_table('myschema1','mytbl1',null,'EMAJ_LAST_MARK');
ERROR:  _check_new_mark: "EMAJ_LAST_MARK" is not an allowed name for a new mark.
CONTEXT:  SQL statement "SELECT emaj._check_new_mark(v_groups, v_mark)"
PL/pgSQL function emaj._modify_tables(text,text[],jsonb,text,boolean,boolean) line 109 at SQL statement
PL/pgSQL function emaj.emaj_modify_table(text,text,jsonb,text) line 7 at RETURN
-- ok
-- change a priority
select emaj.emaj_modify_table('myschema1','mytbl2','{"priority":1}');
 emaj_modify_table 
-------------------
                 1
(1 row)

-- change a log data tablespace
select emaj.emaj_modify_table('myschema1','mytbl1','{"log_data_tablespace":"tsp log''2"}');
 emaj_modify_table 
-------------------
                 1
(1 row)

-- change a log index tablespace
select emaj.emaj_modify_table('myschema1','mytbl1','{"log_index_tablespace":"tsp log''2"}');
 emaj_modify_table 
-------------------
                 1
(1 row)

select rel_schema, rel_tblseq, rel_time_range, rel_priority from emaj.emaj_relation
  where rel_schema = 'myschema1' and rel_tblseq = 'mytbl2' order by 3 desc ,1,2 limit 2;
 rel_schema | rel_tblseq | rel_time_range | rel_priority 
------------+------------+----------------+--------------
 myschema1  | mytbl2     | [6053,)        |            1
 myschema1  | mytbl2     | [6051,6053)    |             
(2 rows)

select rel_schema, rel_tblseq, rel_time_range, rel_log_dat_tsp, rel_log_idx_tsp from emaj.emaj_relation
  where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1' order by 3 desc ,1,2 limit 2;
 rel_schema | rel_tblseq | rel_time_range | rel_log_dat_tsp | rel_log_idx_tsp 
------------+------------+----------------+-----------------+-----------------
 myschema1  | mytbl1     | [6052,)        | tsp log'2       | tsp log'2
 myschema1  | mytbl1     | [6050,6052)    |                 | 
(2 rows)

-- revert changes
select emaj.emaj_modify_table('myschema1','mytbl2','{"priority":null}');
 emaj_modify_table 
-------------------
                 1
(1 row)

select emaj.emaj_modify_table('myschema1','mytbl1','{"log_data_tablespace":null, "log_index_tablespace":null}');
 emaj_modify_table 
-------------------
                 1
(1 row)

select rel_schema, rel_tblseq, rel_time_range, rel_priority from emaj.emaj_relation
  where rel_schema = 'myschema1' and rel_tblseq = 'mytbl2' order by 3 desc ,1,2 limit 2;
 rel_schema | rel_tblseq | rel_time_range | rel_priority 
------------+------------+----------------+--------------
 myschema1  | mytbl2     | [6053,)        |             
 myschema1  | mytbl2     | [6051,6053)    |             
(2 rows)

select rel_schema, rel_tblseq, rel_time_range, rel_log_dat_tsp, rel_log_idx_tsp from emaj.emaj_relation
  where rel_schema = 'myschema1' and rel_tblseq = 'mytbl1' order by 3 desc ,1,2 limit 2;
 rel_schema | rel_tblseq | rel_time_range | rel_log_dat_tsp | rel_log_idx_tsp 
------------+------------+----------------+-----------------+-----------------
 myschema1  | mytbl1     | [6052,)        |                 | 
 myschema1  | mytbl1     | [6050,6052)    |                 | 
(2 rows)

-------------------------------------
---- emaj_modify_tables with array
-------------------------------------
-- error cases
-- table not in a group
select emaj.emaj_modify_tables('myschema2',array['dummyTable','mytbl1','mytbl2'],null);
ERROR:  _modify_tables: some tables (myschema2."dummyTable") do not currently belong to any tables group.
CONTEXT:  PL/pgSQL function emaj.emaj_modify_tables(text,text[],jsonb,text) line 7 at RETURN
-- empty tables array
select emaj.emaj_modify_tables('myschema2',array[]::text[],null);
WARNING:  _modified_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_modify_tables(text,text[],jsonb,text) line 7 at RETURN
 emaj_modify_tables 
--------------------
                  0
(1 row)

select emaj.emaj_modify_tables('myschema2',null,null);
WARNING:  _modified_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_modify_tables(text,text[],jsonb,text) line 7 at RETURN
 emaj_modify_tables 
--------------------
                  0
(1 row)

select emaj.emaj_modify_tables('myschema2',array[''],null);
WARNING:  _modified_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_modify_tables(text,text[],jsonb,text) line 7 at RETURN
 emaj_modify_tables 
--------------------
                  0
(1 row)

---- ok (with a duplicate table name)
select emaj.emaj_modify_tables('myschema2',array['mytbl1','mytbl2','mytbl2'],'{"priority":10,"log_data_tablespace":"tsplog1"}');
 emaj_modify_tables 
--------------------
                  2
(1 row)

select rel_schema, rel_tblseq, rel_time_range, rel_priority, rel_log_dat_tsp from emaj.emaj_relation
  where rel_schema = 'myschema2' and rel_tblseq in ('mytbl1','mytbl2') order by 1,2,3;
 rel_schema | rel_tblseq | rel_time_range | rel_priority | rel_log_dat_tsp 
------------+------------+----------------+--------------+-----------------
 myschema2  | mytbl1     | [6008,)        |           10 | tsplog1
 myschema2  | mytbl2     | [6008,)        |           10 | tsplog1
(2 rows)

-----------------------------------
-- emaj_modify_tables with filters
-----------------------------------
-- empty tables array
select emaj.emaj_modify_tables('myschema2',null,null,null::jsonb);
WARNING:  _modified_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_modify_tables(text,text,text,jsonb,text) line 23 at RETURN
 emaj_modify_tables 
--------------------
                  0
(1 row)

select emaj.emaj_modify_tables('myschema2','','',null::jsonb);
WARNING:  _modified_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_modify_tables(text,text,text,jsonb,text) line 23 at RETURN
 emaj_modify_tables 
--------------------
                  0
(1 row)

select emaj.emaj_modify_tables('myschema2','mytbl1','mytbl1',null::jsonb);
WARNING:  _modified_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_modify_tables(text,text,text,jsonb,text) line 23 at RETURN
 emaj_modify_tables 
--------------------
                  0
(1 row)

-- ok and revert the previous changes
select emaj.emaj_modify_tables('myschema2','mytbl.*','','{"priority":null,"log_data_tablespace":null}'::jsonb);
 emaj_modify_tables 
--------------------
                  2
(1 row)

select rel_schema, rel_tblseq, rel_time_range, rel_priority, rel_log_dat_tsp, rel_log_idx_tsp from emaj.emaj_relation
  where rel_schema = 'myschema2' and rel_tblseq like 'mytbl%' order by 1,2,3;
 rel_schema | rel_tblseq | rel_time_range | rel_priority | rel_log_dat_tsp | rel_log_idx_tsp 
------------+------------+----------------+--------------+-----------------+-----------------
 myschema2  | mytbl1     | [6008,)        |              |                 | 
 myschema2  | mytbl2     | [6008,)        |              |                 | 
 myschema2  | mytbl4     | [6042,)        |              |                 | 
 myschema2  | mytbl5     | [6008,)        |              |                 | 
 myschema2  | mytbl6     | [6008,)        |              |                 | 
(5 rows)

select altr_time_id, altr_step, altr_schema, altr_tblseq, altr_group, altr_priority, altr_group_is_logging,
       altr_new_group, altr_new_group_is_logging from emaj.emaj_alter_plan
  order by 1 desc, 2,3,4 limit 14;
 altr_time_id |        altr_step         | altr_schema | altr_tblseq | altr_group | altr_priority | altr_group_is_logging | altr_new_group | altr_new_group_is_logging 
--------------+--------------------------+-------------+-------------+------------+---------------+-----------------------+----------------+---------------------------
         6064 | CHANGE_TBL_LOG_DATA_TSP  | myschema2   | mytbl1      | myGroup2   |               | f                     |                | 
         6064 | CHANGE_TBL_LOG_DATA_TSP  | myschema2   | mytbl2      | myGroup2   |               | f                     |                | 
         6064 | CHANGE_REL_PRIORITY      | myschema2   | mytbl1      | myGroup2   |               | f                     |                | 
         6064 | CHANGE_REL_PRIORITY      | myschema2   | mytbl2      | myGroup2   |               | f                     |                | 
         6063 | CHANGE_TBL_LOG_DATA_TSP  | myschema2   | mytbl1      | myGroup2   |               | f                     |                | 
         6063 | CHANGE_TBL_LOG_DATA_TSP  | myschema2   | mytbl2      | myGroup2   |               | f                     |                | 
         6063 | CHANGE_REL_PRIORITY      | myschema2   | mytbl1      | myGroup2   |            10 | f                     |                | 
         6063 | CHANGE_REL_PRIORITY      | myschema2   | mytbl2      | myGroup2   |            10 | f                     |                | 
         6062 | CHANGE_TBL_LOG_DATA_TSP  | myschema1   | mytbl1      | myGroup1   |               | f                     |                | 
         6062 | CHANGE_TBL_LOG_INDEX_TSP | myschema1   | mytbl1      | myGroup1   |               | f                     |                | 
         6061 | CHANGE_REL_PRIORITY      | myschema1   | mytbl2      | myGroup1   |               | f                     |                | 
         6060 | CHANGE_TBL_LOG_INDEX_TSP | myschema1   | mytbl1      | myGroup1   |               | f                     |                | 
         6059 | CHANGE_TBL_LOG_DATA_TSP  | myschema1   | mytbl1      | myGroup1   |               | f                     |                | 
         6058 | CHANGE_REL_PRIORITY      | myschema1   | mytbl2      | myGroup1   |             1 | f                     |                | 
(14 rows)

-- checks are performed by the alterLogging.sql script
