-- create_drop.sql : prepare groups content and test emaj_create_group(), emaj_comment_group(),
-- emaj_sync_def_group()
-- emaj_assign_table(), emaj_assign_tables(), emaj_remove_table(), emaj_remove_tables(),
-- emaj_assign_sequence(), emaj_assign_sequences(), emaj_remove_sequence(), emaj_remove_sequences(),
-- emaj_ignore_app_trigger(), emaj_export_groups_configuration(),
-- emaj_drop_group() and emaj_force_drop_group() functions
--
SET client_min_messages TO WARNING;
-- define and create the temp file directory to be used by the script
\setenv EMAJTESTTMPDIR '/tmp/emaj_'`echo $PGVER`'/create_drop'
\set EMAJTESTTMPDIR `echo $EMAJTESTTMPDIR`
\! mkdir -p $EMAJTESTTMPDIR
-----------------------------
-- prepare groups
-----------------------------
truncate emaj.emaj_group_def;
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl1',20);
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2',NULL,'tsplog1','tsplog1');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2b',NULL,'tsp log''2','tsp log''2');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3_col31_seq');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3',10,'tsplog1');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl4',20,'tsplog1','tsp log''2');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2b_col20_seq');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl1');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl2');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','myTbl3_col31_seq');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','myTbl3');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl4');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl5');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl6');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','myseq1');
-- The third group name contains space, comma # and '
-- (note myTbl4 from "phil's schema3" remains outside phil's group#3", group)
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3','phil''s tbl1');
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3',E'myTbl2\\');
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3',E'myTbl2\\_col21_seq');
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3',E'phil''s seq\\1');
insert into emaj.emaj_group_def values ('myGroup4','myschema4','mytblm');
insert into emaj.emaj_group_def values ('myGroup4','myschema4','mytblc1');
insert into emaj.emaj_group_def values ('myGroup4','myschema4','mytblc2');
insert into emaj.emaj_group_def values ('myGroup4','myschema4','mypartp1');
insert into emaj.emaj_group_def values ('myGroup4','myschema4','mypartp2');
insert into emaj.emaj_group_def values ('myGroup5','myschema5','myunloggedtbl');
insert into emaj.emaj_group_def values ('myGroup5','myschema5','myoidstbl');
insert into emaj.emaj_group_def values ('myGroup6','myschema6','table_with_50_characters_long_name_____0_________0');
insert into emaj.emaj_group_def values ('myGroup6','myschema6','table_with_51_characters_long_name_____0_________0a');
insert into emaj.emaj_group_def values ('myGroup6','myschema6','table_with_55_characters_long_name_____0_________0abcde');
insert into emaj.emaj_group_def values ('myGroup6','myschema6','table_with_55_characters_long_name_____0_________0fghij');
insert into emaj.emaj_group_def values ('dummyGrp1','dummySchema','mytbl4');
insert into emaj.emaj_group_def values ('dummyGrp1','myschema1','dummyTable');
insert into emaj.emaj_group_def values ('dummyGrp2','emaj','emaj_param');
insert into emaj.emaj_group_def values ('dummyGrp2','emaj_myschema1','myTbl3_log');
insert into emaj.emaj_group_def values ('dummyGrp3','myschema1','mytbl1');
insert into emaj.emaj_group_def values ('dummyGrp3','myschema2','mytbl2');
-----------------------------
-- emaj_create_group() tests
-----------------------------
-- invalid group names
select emaj.emaj_create_group(NULL);
ERROR:  emaj_create_group: The group name can't be NULL or empty.
select emaj.emaj_create_group('',false);
ERROR:  emaj_create_group: The group name can't be NULL or empty.
-- group is unknown in emaj_group_def
select emaj.emaj_create_group('unknownGroup');
ERROR:  emaj_create_group: The group "unknownGroup" is unknown in the emaj_group_def table. To create an empty group, explicitely set the third parameter to true.
select emaj.emaj_create_group('unknownGroup',false);
ERROR:  emaj_create_group: The group "unknownGroup" is unknown in the emaj_group_def table. To create an empty group, explicitely set the third parameter to true.
-- an emtpy group to create is known in emaj_group_def
begin;
  select emaj.emaj_create_group('myGroup1',true,true);
WARNING:  emaj_create_group: Although the group "myGroup1" is referenced into the emaj_group_def table, it is left empty.
 emaj_create_group 
-------------------
                 0
(1 row)

rollback;
-- unknown schema or table in emaj_group_def
select emaj.emaj_create_group('dummyGrp1');
WARNING:  emaj_create_group: error, in the group "dummyGrp1", the table or sequence "dummySchema".mytbl4 does not exist.
WARNING:  emaj_create_group: error, in the group "dummyGrp1", the table or sequence myschema1."dummyTable" does not exist.
ERROR:  emaj_create_group: One or several errors have been detected in the emaj_group_def table content.
-- group with a partitionned table (in PG 10+) (abort for lack of PRIMARY KEY with prior PG versions)
begin;
  insert into emaj.emaj_group_def values ('myGroup4','myschema4','mytblp');
  select emaj.emaj_create_group('myGroup4');
WARNING:  emaj_create_group: error, in the group "myGroup4", the table myschema4.mytblp has no PRIMARY KEY.
ERROR:  emaj_create_group: One or several errors have been detected in the emaj_group_def table content.
rollback;
-- group with a temp table
begin;
  CREATE TEMPORARY TABLE myTempTbl (
    col1       INT     NOT NULL,
    PRIMARY KEY (col1)
  );
  insert into emaj.emaj_group_def 
    select 'myGroup5',nspname,'mytemptbl' from pg_class, pg_namespace
      where relnamespace = pg_namespace.oid and relname = 'mytemptbl';
  select emaj.emaj_create_group('myGroup5');
WARNING:  emaj_create_group: error, in the group "myGroup5", the table pg_temp_2.mytemptbl is a TEMPORARY table.
WARNING:  emaj_create_group: error, in the group "myGroup5", the table myschema5.myunloggedtbl is an UNLOGGED table.
WARNING:  emaj_create_group: error, in the group "myGroup5", the table myschema5.myoidstbl is declared WITH OIDS.
ERROR:  emaj_create_group: One or several errors have been detected in the emaj_group_def table content.
rollback;
-- group with an unlogged table and a WITH OIDS table
begin;
  select emaj.emaj_create_group('myGroup5',true);
WARNING:  emaj_create_group: error, in the group "myGroup5", the table myschema5.myunloggedtbl is an UNLOGGED table.
WARNING:  emaj_create_group: error, in the group "myGroup5", the table myschema5.myoidstbl is declared WITH OIDS.
ERROR:  emaj_create_group: One or several errors have been detected in the emaj_group_def table content.
rollback;
-- table without pkey for a rollbackable group
select emaj.emaj_create_group('phil''s group#3",',true);
WARNING:  emaj_create_group: error, in the group "phil's group#3"",", the table "phil's schema3"."myTbl2\" has no PRIMARY KEY.
ERROR:  emaj_create_group: One or several errors have been detected in the emaj_group_def table content.
-- sequence with tablespaces and priority defined in the emaj_group_def table
begin;
  update emaj.emaj_group_def set grpdef_log_dat_tsp = 'something', grpdef_log_idx_tsp = 'something', grpdef_priority = 1
    where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_create_group('myGroup1');
WARNING:  emaj_create_group: error, in the group "myGroup1", for the sequence myschema1."myTbl3_col31_seq", the priority is not NULL.
WARNING:  emaj_create_group: error, in the group "myGroup1", for the sequence myschema1."myTbl3_col31_seq", the data log tablespace is not NULL.
WARNING:  emaj_create_group: error, in the group "myGroup1", for the sequence myschema1."myTbl3_col31_seq", the index log tablespace is not NULL.
ERROR:  emaj_create_group: One or several errors have been detected in the emaj_group_def table content.
rollback;
-- table with invalid tablespaces
begin;
  update emaj.emaj_group_def set grpdef_log_dat_tsp = 'dummyTablespace', grpdef_log_idx_tsp = 'dummyTablespace'
    where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
  select emaj.emaj_create_group('myGroup1');
WARNING:  emaj_create_group: error, in the group "myGroup1", for the table myschema1.mytbl1, the data log tablespace "dummyTablespace" does not exist.
WARNING:  emaj_create_group: error, in the group "myGroup1", for the table myschema1.mytbl1, the index log tablespace "dummyTablespace" does not exist.
ERROR:  emaj_create_group: One or several errors have been detected in the emaj_group_def table content.
rollback;
-- already existing log schema
begin;
  create schema emaj_myschema1;
  select emaj.emaj_create_group('myGroup1');
ERROR:  _create_log_schemas: The schema "emaj_myschema1" should not exist. Drop it manually.
CONTEXT:  SQL statement "SELECT emaj._create_log_schemas('CREATE_GROUP', ARRAY[v_groupName])"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 61 at PERFORM
rollback;
-- bad alter_log_table parameter
begin;
  insert into emaj.emaj_param (param_key, param_value_text) values ('alter_log_table','dummmy content');
  select emaj.emaj_create_group('myGroup1');
ERROR:  syntax error at or near "dummmy"
LINE 1: ALTER TABLE emaj_myschema1."myTbl3_log" dummmy content
                                                ^
QUERY:  ALTER TABLE emaj_myschema1."myTbl3_log" dummmy content
CONTEXT:  PL/pgSQL function emaj._create_tbl(text,text,text,integer,text,text,bigint,boolean,boolean) line 89 at EXECUTE
SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
rollback;
-- should be OK
select emaj.emaj_create_group('myGroup1');
WARNING:  _create_tbl: The table "myschema1.mytbl2" has triggers (mytbl2trg1, mytbl2trg2). They will be automatically disabled during E-Maj rollback operations, unless they have been recorded into the list of triggers that may be kept enabled, with the emaj_ignore_app_trigger() function.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
 emaj_create_group 
-------------------
                 7
(1 row)

-- explicitely create an empty group (here audit_only)
select emaj.emaj_create_group('emptyGroup',false,true);
 emaj_create_group 
-------------------
                 0
(1 row)

-- should be OK, but with a warning for linked table not protected by E-Maj
alter table myschema2.myTbl6 add foreign key (col61) references myschema2.myTbl7 (col71) deferrable initially immediate;
alter table myschema2.myTbl8 add foreign key (col81) references myschema2.myTbl6 (col61) deferrable;
select emaj.emaj_create_group('myGroup2',true);
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(array[v_groupName])"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 95 at PERFORM
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(array[v_groupName])"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 95 at PERFORM
 emaj_create_group 
-------------------
                 8
(1 row)

-- should be OK, but with a warning for linked table not belonging to any group
begin;
  delete from emaj.emaj_group_def
    where grpdef_schema = 'phil''s schema3' and grpdef_tblseq = E'myTbl2\\';
  select emaj.emaj_create_group('phil''s group#3",',false);
 emaj_create_group 
-------------------
                 3
(1 row)

  select * from emaj.emaj_verify_all();
                                                                                          emaj_verify_all                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Warning: In the group "phil's group#3",", the sequence "phil's schema3"."myTbl2\_col21_seq" is linked to the table "phil's schema3"."myTbl2\" but this table does not belong to any tables group.
 Warning: In the group "myGroup2", the foreign key "mytbl6_col61_fkey" on the table "myschema2"."mytbl6" references the table "myschema2"."mytbl7" that does not belong to any group.
 Warning: In the group "myGroup2", the table "myschema2"."mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" of the table "myschema2"."mytbl8" that does not belong to any group.
 No error detected
(4 rows)

rollback;
-- should be OK
select emaj.emaj_create_group('phil''s group#3",',false);
 emaj_create_group 
-------------------
                 4
(1 row)

select emaj.emaj_create_group('myGroup4');
WARNING:  _create_tbl: The table "myschema4.mytblm" has triggers (mytblm_insert_trigger). They will be automatically disabled during E-Maj rollback operations, unless they have been recorded into the list of triggers that may be kept enabled, with the emaj_ignore_app_trigger() function.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
 emaj_create_group 
-------------------
                 5
(1 row)

select emaj.emaj_create_group('myGroup5',false);
 emaj_create_group 
-------------------
                 2
(1 row)

select emaj.emaj_create_group('myGroup6');
 emaj_create_group 
-------------------
                 4
(1 row)

-- create a group with a table from an E-Maj log schema
select emaj.emaj_create_group('dummyGrp2',false);
WARNING:  emaj_create_group: error, in the group "dummyGrp2", the table or sequence emaj.emaj_param belongs to an E-Maj schema.
WARNING:  emaj_create_group: error, in the group "dummyGrp2", the table or sequence emaj_myschema1."myTbl3_log" belongs to an E-Maj schema.
ERROR:  emaj_create_group: One or several errors have been detected in the emaj_group_def table content.
-- create a group with a table already belonging to another group
select emaj.emaj_create_group('dummyGrp3');
WARNING:  emaj_create_group: error, in the group "dummyGrp3", the table or sequence myschema1.mytbl1 already belongs to the group "myGroup1".
WARNING:  emaj_create_group: error, in the group "dummyGrp3", the table or sequence myschema2.mytbl2 already belongs to the group "myGroup2".
ERROR:  emaj_create_group: One or several errors have been detected in the emaj_group_def table content.
-- already created
select emaj.emaj_create_group('myGroup2');
ERROR:  emaj_create_group: The group "myGroup2" already exists.
-- impact of created groups
select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
       nspname       
---------------------
 emaj
 emaj_myschema1
 emaj_myschema2
 emaj_myschema4
 emaj_myschema5
 emaj_myschema6
 emaj_phil's schema3
(7 rows)

select group_name, group_is_rollbackable, group_creation_time_id,
       group_last_alter_time_id, group_has_waiting_changes, group_is_logging, 
       group_is_rlbk_protected, group_nb_table, group_nb_sequence, group_comment
  from emaj.emaj_group order by group_name;
    group_name    | group_is_rollbackable | group_creation_time_id | group_last_alter_time_id | group_has_waiting_changes | group_is_logging | group_is_rlbk_protected | group_nb_table | group_nb_sequence | group_comment 
------------------+-----------------------+------------------------+--------------------------+---------------------------+------------------+-------------------------+----------------+-------------------+---------------
 emptyGroup       | f                     |                      5 |                          | f                         | f                | t                       |              0 |                 0 | 
 myGroup1         | t                     |                      4 |                          | f                         | f                | f                       |              5 |                 2 | 
 myGroup2         | t                     |                      6 |                          | f                         | f                | f                       |              6 |                 2 | 
 myGroup4         | t                     |                      9 |                          | f                         | f                | f                       |              5 |                 0 | 
 myGroup5         | f                     |                     10 |                          | f                         | f                | t                       |              2 |                 0 | 
 myGroup6         | t                     |                     11 |                          | f                         | f                | f                       |              4 |                 0 | 
 phil's group#3", | f                     |                      8 |                          | f                         | f                | t                       |              2 |                 2 | 
(7 rows)

select * from emaj.emaj_relation order by rel_group, rel_priority, rel_schema, rel_tblseq, rel_time_range;
   rel_schema   |                       rel_tblseq                        | rel_time_range |    rel_group     | rel_kind | rel_priority |   rel_log_schema    |                      rel_log_table                       | rel_log_dat_tsp |                        rel_log_index                         | rel_log_idx_tsp |                       rel_log_sequence                       |                       rel_log_function                        | rel_emaj_verb_attnum | rel_has_always_ident_col |                    rel_sql_rlbk_columns                     |    rel_sql_rlbk_pk_columns    |                              rel_sql_rlbk_pk_conditions                               | rel_sql_gen_ins_col |                                                                                                   rel_sql_gen_ins_val                                                                                                   |                                                                                                                           rel_sql_gen_upd_set                                                                                                                            |                                          rel_sql_gen_pk_conditions                                           | rel_log_seq_last_value 

 myschema1      | myTbl3                                                  | [4,)           | myGroup1         | r        |           10 | emaj_myschema1      | myTbl3_log                                               | tsplog1         | myTbl3_log_idx                                               |                 | myTbl3_log_seq                                               | myTbl3_log_fnct                                               |                    4 | f                        | tbl.col31,tbl.col32,tbl.col33                               | col31                         | tbl.col31 = keys.col31                                                                |                     | ' || coalesce(o.col31::TEXT,'NULL') || ', ' || quote_nullable(o.col32) || ', ' || coalesce(o.col33::TEXT,'NULL') || '                                                                                                   | col31 = ' || coalesce(n.col31 ::TEXT,'NULL') || ', col32 = ' || quote_nullable(n.col32) || ', col33 = ' || coalesce(n.col33 ::TEXT,'NULL') || '                                                                                                                          | col31 = ' || o.col31 || '                                                                                    |                       
 myschema1      | mytbl1                                                  | [4,)           | myGroup1         | r        |           20 | emaj_myschema1      | mytbl1_log                                               |                 | mytbl1_log_idx                                               |                 | mytbl1_log_seq                                               | mytbl1_log_fnct                                               |                    4 | f                        | tbl.col11,tbl.col12,tbl.col13                               | col11,col12                   | tbl.col11 = keys.col11 AND tbl.col12 = keys.col12                                     |                     | ' || coalesce(o.col11::TEXT,'NULL') || ', ' || quote_nullable(o.col12) || ', ' || quote_nullable(o.col13) || '                                                                                                          | col11 = ' || coalesce(n.col11 ::TEXT,'NULL') || ', col12 = ' || quote_nullable(n.col12) || ', col13 = ' || quote_nullable(n.col13) || '                                                                                                                                  | col11 = ' || o.col11 || ' AND col12 = ' || quote_literal(o.col12) || '                                       |                       
 myschema1      | mytbl4                                                  | [4,)           | myGroup1         | r        |           20 | emaj_myschema1      | mytbl4_log                                               | tsplog1         | mytbl4_log_idx                                               | tsp log'2       | mytbl4_log_seq                                               | mytbl4_log_fnct                                               |                    6 | f                        | tbl.col41,tbl.col42,tbl.col43,tbl.col44,tbl.col45           | col41                         | tbl.col41 = keys.col41                                                                |                     | ' || coalesce(o.col41::TEXT,'NULL') || ', ' || quote_nullable(o.col42) || ', ' || coalesce(o.col43::TEXT,'NULL') || ', ' || coalesce(o.col44::TEXT,'NULL') || ', ' || quote_nullable(o.col45) || '                      | col41 = ' || coalesce(n.col41 ::TEXT,'NULL') || ', col42 = ' || quote_nullable(n.col42) || ', col43 = ' || coalesce(n.col43 ::TEXT,'NULL') || ', col44 = ' || coalesce(n.col44 ::TEXT,'NULL') || ', col45 = ' || quote_nullable(n.col45) || '                            | col41 = ' || o.col41 || '                                                                                    |                       
 myschema1      | myTbl3_col31_seq                                        | [4,)           | myGroup1         | S        |              |                     |                                                          |                 |                                                              |                 |                                                              |                                                               |                      |                          |                                                             |                               |                                                                                       |                     |                                                                                                                                                                                                                         |                                                                                                                                                                                                                                                                          |                                                                                                              |                       
 myschema1      | mytbl2                                                  | [4,)           | myGroup1         | r        |              | emaj_myschema1      | mytbl2_log                                               | tsplog1         | mytbl2_log_idx                                               | tsplog1         | mytbl2_log_seq                                               | mytbl2_log_fnct                                               |                    4 | f                        | tbl.col21,tbl.col22,tbl.col23                               | col21                         | tbl.col21 = keys.col21                                                                |                     | ' || coalesce(o.col21::TEXT,'NULL') || ', ' || quote_nullable(o.col22) || ', ' || quote_nullable(o.col23) || '                                                                                                          | col21 = ' || coalesce(n.col21 ::TEXT,'NULL') || ', col22 = ' || quote_nullable(n.col22) || ', col23 = ' || quote_nullable(n.col23) || '                                                                                                                                  | col21 = ' || o.col21 || '                                                                                    |                       
 myschema1      | mytbl2b                                                 | [4,)           | myGroup1         | r        |              | emaj_myschema1      | mytbl2b_log                                              | tsp log'2       | mytbl2b_log_idx                                              | tsp log'2       | mytbl2b_log_seq                                              | mytbl2b_log_fnct                                              |                    5 | f                        | tbl.col20,tbl.col21,tbl.col22,tbl.col23                     | col20                         | tbl.col20 = keys.col20                                                                |                     | ' || coalesce(o.col20::TEXT,'NULL') || ', ' || coalesce(o.col21::TEXT,'NULL') || ', ' || coalesce(o.col22::TEXT,'NULL') || ', ' || quote_nullable(o.col23) || '                                                         | col20 = ' || coalesce(n.col20 ::TEXT,'NULL') || ', col21 = ' || coalesce(n.col21 ::TEXT,'NULL') || ', col22 = ' || coalesce(n.col22 ::TEXT,'NULL') || ', col23 = ' || quote_nullable(n.col23) || '                                                                       | col20 = ' || o.col20 || '                                                                                    |                       
 myschema1      | mytbl2b_col20_seq                                       | [4,)           | myGroup1         | S        |              |                     |                                                          |                 |                                                              |                 |                                                              |                                                               |                      |                          |                                                             |                               |                                                                                       |                     |                                                                                                                                                                                                                         |                                                                                                                                                                                                                                                                          |                                                                                                              |                       
 myschema2      | myTbl3                                                  | [6,)           | myGroup2         | r        |              | emaj_myschema2      | myTbl3_log                                               |                 | myTbl3_log_idx                                               |                 | myTbl3_log_seq                                               | myTbl3_log_fnct                                               |                    4 | f                        | tbl.col31,tbl.col32,tbl.col33                               | col31                         | tbl.col31 = keys.col31                                                                |                     | ' || coalesce(o.col31::TEXT,'NULL') || ', ' || quote_nullable(o.col32) || ', ' || coalesce(o.col33::TEXT,'NULL') || '                                                                                                   | col31 = ' || coalesce(n.col31 ::TEXT,'NULL') || ', col32 = ' || quote_nullable(n.col32) || ', col33 = ' || coalesce(n.col33 ::TEXT,'NULL') || '                                                                                                                          | col31 = ' || o.col31 || '                                                                                    |                       
 myschema2      | myTbl3_col31_seq                                        | [6,)           | myGroup2         | S        |              |                     |                                                          |                 |                                                              |                 |                                                              |                                                               |                      |                          |                                                             |                               |                                                                                       |                     |                                                                                                                                                                                                                         |                                                                                                                                                                                                                                                                          |                                                                                                              |                       
 myschema2      | myseq1                                                  | [6,)           | myGroup2         | S        |              |                     |                                                          |                 |                                                              |                 |                                                              |                                                               |                      |                          |                                                             |                               |                                                                                       |                     |                                                                                                                                                                                                                         |                                                                                                                                                                                                                                                                          |                                                                                                              |                       
 myschema2      | mytbl1                                                  | [6,)           | myGroup2         | r        |              | emaj_myschema2      | mytbl1_log                                               |                 | mytbl1_log_idx                                               |                 | mytbl1_log_seq                                               | mytbl1_log_fnct                                               |                    4 | f                        | tbl.col11,tbl.col12,tbl.col13                               | col11,col12                   | tbl.col11 = keys.col11 AND tbl.col12 = keys.col12                                     |                     | ' || coalesce(o.col11::TEXT,'NULL') || ', ' || quote_nullable(o.col12) || ', ' || quote_nullable(o.col13) || '                                                                                                          | col11 = ' || coalesce(n.col11 ::TEXT,'NULL') || ', col12 = ' || quote_nullable(n.col12) || ', col13 = ' || quote_nullable(n.col13) || '                                                                                                                                  | col11 = ' || o.col11 || ' AND col12 = ' || quote_literal(o.col12) || '                                       |                       
 myschema2      | mytbl2                                                  | [6,)           | myGroup2         | r        |              | emaj_myschema2      | mytbl2_log                                               |                 | mytbl2_log_idx                                               |                 | mytbl2_log_seq                                               | mytbl2_log_fnct                                               |                    4 | f                        | tbl.col21,tbl.col22,tbl.col23                               | col21                         | tbl.col21 = keys.col21                                                                |                     | ' || coalesce(o.col21::TEXT,'NULL') || ', ' || quote_nullable(o.col22) || ', ' || quote_nullable(o.col23) || '                                                                                                          | col21 = ' || coalesce(n.col21 ::TEXT,'NULL') || ', col22 = ' || quote_nullable(n.col22) || ', col23 = ' || quote_nullable(n.col23) || '                                                                                                                                  | col21 = ' || o.col21 || '                                                                                    |                       
 myschema2      | mytbl4                                                  | [6,)           | myGroup2         | r        |              | emaj_myschema2      | mytbl4_log                                               |                 | mytbl4_log_idx                                               |                 | mytbl4_log_seq                                               | mytbl4_log_fnct                                               |                    6 | f                        | tbl.col41,tbl.col42,tbl.col43,tbl.col44,tbl.col45           | col41                         | tbl.col41 = keys.col41                                                                |                     | ' || coalesce(o.col41::TEXT,'NULL') || ', ' || quote_nullable(o.col42) || ', ' || coalesce(o.col43::TEXT,'NULL') || ', ' || coalesce(o.col44::TEXT,'NULL') || ', ' || quote_nullable(o.col45) || '                      | col41 = ' || coalesce(n.col41 ::TEXT,'NULL') || ', col42 = ' || quote_nullable(n.col42) || ', col43 = ' || coalesce(n.col43 ::TEXT,'NULL') || ', col44 = ' || coalesce(n.col44 ::TEXT,'NULL') || ', col45 = ' || quote_nullable(n.col45) || '                            | col41 = ' || o.col41 || '                                                                                    |                       
 myschema2      | mytbl5                                                  | [6,)           | myGroup2         | r        |              | emaj_myschema2      | mytbl5_log                                               |                 | mytbl5_log_idx                                               |                 | mytbl5_log_seq                                               | mytbl5_log_fnct                                               |                    6 | f                        | tbl.col51,tbl.col52,tbl.col53,tbl.col54,tbl.col55           | col51                         | tbl.col51 = keys.col51                                                                |                     | ' || coalesce(o.col51::TEXT,'NULL') || ', ' || quote_nullable(o.col52) || ', ' || quote_nullable(o.col53) || ', ' || quote_nullable(o.col54) || ', ' || quote_nullable(o.col55) || '                                    | col51 = ' || coalesce(n.col51 ::TEXT,'NULL') || ', col52 = ' || quote_nullable(n.col52) || ', col53 = ' || quote_nullable(n.col53) || ', col54 = ' || quote_nullable(n.col54) || ', col55 = ' || quote_nullable(n.col55) || '                                            | col51 = ' || o.col51 || '                                                                                    |                       
 myschema2      | mytbl6                                                  | [6,)           | myGroup2         | r        |              | emaj_myschema2      | mytbl6_log                                               |                 | mytbl6_log_idx                                               |                 | mytbl6_log_seq                                               | mytbl6_log_fnct                                               |                    7 | f                        | tbl.col61,tbl.col62,tbl.col63,tbl.col64,tbl.col65,tbl.col66 | col61                         | tbl.col61 = keys.col61                                                                |                     | ' || coalesce(o.col61::TEXT,'NULL') || ', ' || quote_nullable(o.col62) || ', ' || quote_nullable(o.col63) || ', ' || quote_nullable(o.col64) || ', ' || quote_nullable(o.col65) || ', ' || quote_nullable(o.col66) || ' | col61 = ' || coalesce(n.col61 ::TEXT,'NULL') || ', col62 = ' || quote_nullable(n.col62) || ', col63 = ' || quote_nullable(n.col63) || ', col64 = ' || quote_nullable(n.col64) || ', col65 = ' || quote_nullable(n.col65) || ', col66 = ' || quote_nullable(n.col66) || ' | col61 = ' || o.col61 || '                                                                                    |                       
 myschema4      | mypartp1                                                | [9,)           | myGroup4         | r        |              | emaj_myschema4      | mypartp1_log                                             |                 | mypartp1_log_idx                                             |                 | mypartp1_log_seq                                             | mypartp1_log_fnct                                             |                    4 | f                        | tbl.col1,tbl.col2,tbl.col3                                  | col1                          | tbl.col1 = keys.col1                                                                  |                     | ' || coalesce(o.col1::TEXT,'NULL') || ', ' || quote_nullable(o.col2) || ', ' || coalesce(o.col3::TEXT,'NULL') || '                                                                                                      | col1 = ' || coalesce(n.col1 ::TEXT,'NULL') || ', col2 = ' || quote_nullable(n.col2) || ', col3 = ' || coalesce(n.col3 ::TEXT,'NULL') || '                                                                                                                                | col1 = ' || o.col1 || '                                                                                      |                       
 myschema4      | mypartp2                                                | [9,)           | myGroup4         | r        |              | emaj_myschema4      | mypartp2_log                                             |                 | mypartp2_log_idx                                             |                 | mypartp2_log_seq                                             | mypartp2_log_fnct                                             |                    4 | f                        | tbl.col1,tbl.col2,tbl.col3                                  | col1                          | tbl.col1 = keys.col1                                                                  |                     | ' || coalesce(o.col1::TEXT,'NULL') || ', ' || quote_nullable(o.col2) || ', ' || coalesce(o.col3::TEXT,'NULL') || '                                                                                                      | col1 = ' || coalesce(n.col1 ::TEXT,'NULL') || ', col2 = ' || quote_nullable(n.col2) || ', col3 = ' || coalesce(n.col3 ::TEXT,'NULL') || '                                                                                                                                | col1 = ' || o.col1 || '                                                                                      |                       
 myschema4      | mytblc1                                                 | [9,)           | myGroup4         | r        |              | emaj_myschema4      | mytblc1_log                                              |                 | mytblc1_log_idx                                              |                 | mytblc1_log_seq                                              | mytblc1_log_fnct                                              |                    4 | f                        | tbl.col1,tbl.col2,tbl.col3                                  | col1,col2                     | tbl.col1 = keys.col1 AND tbl.col2 = keys.col2                                         |                     | ' || quote_nullable(o.col1) || ', ' || coalesce(o.col2::TEXT,'NULL') || ', ' || quote_nullable(o.col3) || '                                                                                                             | col1 = ' || quote_nullable(n.col1) || ', col2 = ' || coalesce(n.col2 ::TEXT,'NULL') || ', col3 = ' || quote_nullable(n.col3) || '                                                                                                                                        | col1 = ' || quote_literal(o.col1) || ' AND col2 = ' || o.col2 || '                                           |                       
 myschema4      | mytblc2                                                 | [9,)           | myGroup4         | r        |              | emaj_myschema4      | mytblc2_log                                              |                 | mytblc2_log_idx                                              |                 | mytblc2_log_seq                                              | mytblc2_log_fnct                                              |                    4 | f                        | tbl.col1,tbl.col2,tbl.col3                                  | col1,col2                     | tbl.col1 = keys.col1 AND tbl.col2 = keys.col2                                         |                     | ' || quote_nullable(o.col1) || ', ' || coalesce(o.col2::TEXT,'NULL') || ', ' || quote_nullable(o.col3) || '                                                                                                             | col1 = ' || quote_nullable(n.col1) || ', col2 = ' || coalesce(n.col2 ::TEXT,'NULL') || ', col3 = ' || quote_nullable(n.col3) || '                                                                                                                                        | col1 = ' || quote_literal(o.col1) || ' AND col2 = ' || o.col2 || '                                           |                       
 myschema4      | mytblm                                                  | [9,)           | myGroup4         | r        |              | emaj_myschema4      | mytblm_log                                               |                 | mytblm_log_idx                                               |                 | mytblm_log_seq                                               | mytblm_log_fnct                                               |                    4 | f                        | tbl.col1,tbl.col2,tbl.col3                                  | col1                          | tbl.col1 = keys.col1                                                                  |                     | ' || quote_nullable(o.col1) || ', ' || coalesce(o.col2::TEXT,'NULL') || ', ' || quote_nullable(o.col3) || '                                                                                                             | col1 = ' || quote_nullable(n.col1) || ', col2 = ' || coalesce(n.col2 ::TEXT,'NULL') || ', col3 = ' || quote_nullable(n.col3) || '                                                                                                                                        | col1 = ' || quote_literal(o.col1) || '                                                                       |                       
 myschema5      | myoidstbl                                               | [10,)          | myGroup5         | r        |              | emaj_myschema5      | myoidstbl_log                                            |                 | myoidstbl_log_idx                                            |                 | myoidstbl_log_seq                                            | myoidstbl_log_fnct                                            |                    2 | f                        | tbl.col1                                                    | col1                          | tbl.col1 = keys.col1                                                                  |                     | ' || coalesce(o.col1::TEXT,'NULL') || '                                                                                                                                                                                 | col1 = ' || coalesce(n.col1 ::TEXT,'NULL') || '                                                                                                                                                                                                                          | col1 = ' || o.col1 || '                                                                                      |                       
 myschema5      | myunloggedtbl                                           | [10,)          | myGroup5         | r        |              | emaj_myschema5      | myunloggedtbl_log                                        |                 | myunloggedtbl_log_idx                                        |                 | myunloggedtbl_log_seq                                        | myunloggedtbl_log_fnct                                        |                    2 | f                        | tbl.col1                                                    | col1                          | tbl.col1 = keys.col1                                                                  |                     | ' || coalesce(o.col1::TEXT,'NULL') || '                                                                                                                                                                                 | col1 = ' || coalesce(n.col1 ::TEXT,'NULL') || '                                                                                                                                                                                                                          | col1 = ' || o.col1 || '                                                                                      |                       
 myschema6      | table_with_50_characters_long_name_____0_________0      | [11,)          | myGroup6         | r        |              | emaj_myschema6      | table_with_50_characters_long_name_____0_________0_log   |                 | table_with_50_characters_long_name_____0_________0_log_idx   |                 | table_with_50_characters_long_name_____0_________0_log_seq   | table_with_50_characters_long_name_____0_________0_log_fnct   |                    2 | f                        | tbl.col1                                                    | col1                          | tbl.col1 = keys.col1                                                                  |                     | ' || coalesce(o.col1::TEXT,'NULL') || '                                                                                                                                                                                 | col1 = ' || coalesce(n.col1 ::TEXT,'NULL') || '                                                                                                                                                                                                                          | col1 = ' || o.col1 || '                                                                                      |                       
 myschema6      | table_with_51_characters_long_name_____0_________0a     | [11,)          | myGroup6         | r        |              | emaj_myschema6      | table_with_51_characters_long_name_____0_________0#1_log |                 | table_with_51_characters_long_name_____0_________0#1_log_idx |                 | table_with_51_characters_long_name_____0_________0#1_log_seq | table_with_51_characters_long_name_____0_________0#1_log_fnct |                    2 | f                        | tbl.col1                                                    | col1                          | tbl.col1 = keys.col1                                                                  |                     | ' || coalesce(o.col1::TEXT,'NULL') || '                                                                                                                                                                                 | col1 = ' || coalesce(n.col1 ::TEXT,'NULL') || '                                                                                                                                                                                                                          | col1 = ' || o.col1 || '                                                                                      |                       
 myschema6      | table_with_55_characters_long_name_____0_________0abcde | [11,)          | myGroup6         | r        |              | emaj_myschema6      | table_with_55_characters_long_name_____0_________0#1_log |                 | table_with_55_characters_long_name_____0_________0#1_log_idx |                 | table_with_55_characters_long_name_____0_________0#1_log_seq | table_with_55_characters_long_name_____0_________0#1_log_fnct |                    2 | f                        | tbl.col1                                                    | col1                          | tbl.col1 = keys.col1                                                                  |                     | ' || coalesce(o.col1::TEXT,'NULL') || '                                                                                                                                                                                 | col1 = ' || coalesce(n.col1 ::TEXT,'NULL') || '                                                                                                                                                                                                                          | col1 = ' || o.col1 || '                                                                                      |                       
 myschema6      | table_with_55_characters_long_name_____0_________0fghij | [11,)          | myGroup6         | r        |              | emaj_myschema6      | table_with_55_characters_long_name_____0_________0#2_log |                 | table_with_55_characters_long_name_____0_________0#2_log_idx |                 | table_with_55_characters_long_name_____0_________0#2_log_seq | table_with_55_characters_long_name_____0_________0#2_log_fnct |                    2 | f                        | tbl.col1                                                    | col1                          | tbl.col1 = keys.col1                                                                  |                     | ' || coalesce(o.col1::TEXT,'NULL') || '                                                                                                                                                                                 | col1 = ' || coalesce(n.col1 ::TEXT,'NULL') || '                                                                                                                                                                                                                          | col1 = ' || o.col1 || '                                                                                      |                       
 phil's schema3 | myTbl2\                                                 | [8,)           | phil's group#3", | r        |              | emaj_phil's schema3 | myTbl2\_log                                              |                 | myTbl2\_log_idx                                              |                 | myTbl2\_log_seq                                              | myTbl2\_log_fnct                                              |                    4 |                          |                                                             |                               |                                                                                       |                     |                                                                                                                                                                                                                         |                                                                                                                                                                                                                                                                          |                                                                                                              |                       
 phil's schema3 | myTbl2\_col21_seq                                       | [8,)           | phil's group#3", | S        |              |                     |                                                          |                 |                                                              |                 |                                                              |                                                               |                      |                          |                                                             |                               |                                                                                       |                     |                                                                                                                                                                                                                         |                                                                                                                                                                                                                                                                          |                                                                                                              |                       
 phil's schema3 | phil's seq\1                                            | [8,)           | phil's group#3", | S        |              |                     |                                                          |                 |                                                              |                 |                                                              |                                                               |                      |                          |                                                             |                               |                                                                                       |                     |                                                                                                                                                                                                                         |                                                                                                                                                                                                                                                                          |                                                                                                              |                       
 phil's schema3 | phil's tbl1                                             | [8,)           | phil's group#3", | r        |              | emaj_phil's schema3 | phil's tbl1_log                                          |                 | phil's tbl1_log_idx                                          |                 | phil's tbl1_log_seq                                          | phil's tbl1_log_fnct                                          |                    4 | f                        | tbl."phil's col11",tbl."phil's col12",tbl."phil\s col13"    | "phil's col11","phil's col12" | tbl."phil's col11" = keys."phil's col11" AND tbl."phil's col12" = keys."phil's col12" |                     | ' || coalesce(o."phil's col11"::TEXT,'NULL') || ', ' || quote_nullable(o."phil's col12") || ', ' || quote_nullable(o."phil\s col13") || '                                                                               | "phil''s col11" = ' || coalesce(n."phil's col11" ::TEXT,'NULL') || ', "phil''s col12" = ' || quote_nullable(n."phil's col12") || ', "phil\s col13" = ' || quote_nullable(n."phil\s col13") || '                                                                          | "phil''s col11" = ' || o."phil's col11" || ' AND "phil''s col12" = ' || quote_literal(o."phil's col12") || ' |                       
(30 rows)

select schemaname, tablename, tableowner, tablespace from pg_tables where schemaname like 'emaj\_%' order by schemaname, tablename;
     schemaname      |                        tablename                         | tableowner | tablespace 
---------------------+----------------------------------------------------------+------------+------------
 emaj_myschema1      | myTbl3_log                                               | postgres   | tsplog1
 emaj_myschema1      | mytbl1_log                                               | postgres   | 
 emaj_myschema1      | mytbl2_log                                               | postgres   | tsplog1
 emaj_myschema1      | mytbl2b_log                                              | postgres   | tsp log'2
 emaj_myschema1      | mytbl4_log                                               | postgres   | tsplog1
 emaj_myschema2      | myTbl3_log                                               | postgres   | 
 emaj_myschema2      | mytbl1_log                                               | postgres   | 
 emaj_myschema2      | mytbl2_log                                               | postgres   | 
 emaj_myschema2      | mytbl4_log                                               | postgres   | 
 emaj_myschema2      | mytbl5_log                                               | postgres   | 
 emaj_myschema2      | mytbl6_log                                               | postgres   | 
 emaj_myschema4      | mypartp1_log                                             | postgres   | 
 emaj_myschema4      | mypartp2_log                                             | postgres   | 
 emaj_myschema4      | mytblc1_log                                              | postgres   | 
 emaj_myschema4      | mytblc2_log                                              | postgres   | 
 emaj_myschema4      | mytblm_log                                               | postgres   | 
 emaj_myschema5      | myoidstbl_log                                            | postgres   | 
 emaj_myschema5      | myunloggedtbl_log                                        | postgres   | 
 emaj_myschema6      | table_with_50_characters_long_name_____0_________0_log   | postgres   | 
 emaj_myschema6      | table_with_51_characters_long_name_____0_________0#1_log | postgres   | 
 emaj_myschema6      | table_with_55_characters_long_name_____0_________0#1_log | postgres   | 
 emaj_myschema6      | table_with_55_characters_long_name_____0_________0#2_log | postgres   | 
 emaj_phil's schema3 | myTbl2\_log                                              | postgres   | 
 emaj_phil's schema3 | phil's tbl1_log                                          | postgres   | 
(24 rows)

-----------------------------
-- emaj_comment_group() tests
-----------------------------
-- unknown group
select emaj.emaj_comment_group(NULL,NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj.emaj_comment_group(text,text) line 7 at PERFORM
select emaj.emaj_comment_group('unknownGroup',NULL);
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj.emaj_comment_group(text,text) line 7 at PERFORM
-- should be OK
select emaj.emaj_comment_group('myGroup1','a first comment for group #1');
 emaj_comment_group 
--------------------
 
(1 row)

select emaj.emaj_comment_group('myGroup1','a better comment for group #1');
 emaj_comment_group 
--------------------
 
(1 row)

select emaj.emaj_comment_group('emptyGroup','an empty group');
 emaj_comment_group 
--------------------
 
(1 row)

select group_name, group_comment from emaj.emaj_group where group_name = 'myGroup1';
 group_name |         group_comment         
------------+-------------------------------
 myGroup1   | a better comment for group #1
(1 row)

select emaj.emaj_comment_group('myGroup1',NULL);
 emaj_comment_group 
--------------------
 
(1 row)

select group_name, group_comment from emaj.emaj_group where group_name = 'myGroup1';
 group_name | group_comment 
------------+---------------
 myGroup1   | 
(1 row)

-----------------------------------
-- emaj_sync_def_group
-----------------------------------
-- bad group name
select emaj.emaj_sync_def_group(null);
ERROR:  _check_group_names: No group to process.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_group], v_mayBeNull := FALSE, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj.emaj_sync_def_group(text) line 10 at PERFORM
select emaj.emaj_sync_def_group('dummyGroup');
ERROR:  _check_group_names: The group "dummyGroup" does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_group], v_mayBeNull := FALSE, v_lockGroups := FALSE, v_checkList := '')"
PL/pgSQL function emaj.emaj_sync_def_group(text) line 10 at PERFORM
-- ok
select emaj.emaj_sync_def_group('myGroup1');
 emaj_sync_def_group 
---------------------
                   7
(1 row)

-- resync all and check the result
--   export the current emaj_group_def content
\set FILE1 :EMAJTESTTMPDIR '/file1'
copy (select * from emaj.emaj_group_def order by grpdef_group, grpdef_schema, grpdef_tblseq) to :'FILE1';
--   resync all created groups
select group_name, group_nb_table + group_nb_sequence as table_and_sequence, emaj.emaj_sync_def_group(group_name) as function_result 
  from emaj.emaj_group order by group_name;
    group_name    | table_and_sequence | function_result 
------------------+--------------------+-----------------
 emptyGroup       |                  0 |               0
 myGroup1         |                  7 |               7
 myGroup2         |                  8 |               8
 myGroup4         |                  5 |               5
 myGroup5         |                  2 |               2
 myGroup6         |                  4 |               4
 phil's group#3", |                  4 |               4
(7 rows)

--   export the modified emaj_group_def content
\set FILE2 :EMAJTESTTMPDIR '/file2'
copy (select * from emaj.emaj_group_def order by grpdef_group, grpdef_schema, grpdef_tblseq) to :'FILE2';
--   there should not be any differences
\! diff $EMAJTESTTMPDIR/file1 $EMAJTESTTMPDIR/file2
-----------------------------------
-- emaj_assign_table
-----------------------------------
select emaj.emaj_drop_group('myGroup1');
 emaj_drop_group 
-----------------
               7
(1 row)

select emaj.emaj_create_group('myGroup1b', true, true);  -- rollbackable and empty
 emaj_create_group 
-------------------
                 0
(1 row)

-- error cases
-- bad group name
select emaj.emaj_assign_table('myschema1','mytbl1','dummyGroup');
ERROR:  _check_group_names: The group "dummyGroup" does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_group], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj._assign_tables(text,text[],text,jsonb,text,boolean,boolean) line 34 at PERFORM
PL/pgSQL function emaj.emaj_assign_table(text,text,text,jsonb,text) line 7 at RETURN
-- bad schema
select emaj.emaj_assign_table('dummySchema','mytbl1','myGroup1b');
ERROR:  _assign_tables: The schema "dummySchema" does not exist.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_table(text,text,text,jsonb,text) line 7 at RETURN
select emaj.emaj_assign_table('emaj','mytbl1','myGroup1b');
ERROR:  _assign_tables: The schema "emaj" is an E-Maj schema.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_table(text,text,text,jsonb,text) line 7 at RETURN
-- bad table
select emaj.emaj_assign_table('myschema1','dummyTable','myGroup1b');
ERROR:  _assign_tables: In schema myschema1, some tables ("dummyTable") do not exist.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_table(text,text,text,jsonb,text) line 7 at RETURN
-- partitionned table (abort for lack of PRIMARY KEY with prior PG versions)
select emaj.emaj_assign_table('myschema4','mytblp','myGroup1b');
ERROR:  _assign_tables: In schema myschema4, some tables (mytblp) have no PRIMARY KEY.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_table(text,text,text,jsonb,text) line 7 at RETURN
-- temp table
begin;
  CREATE TEMPORARY TABLE myTempTbl (
    col1       INT     NOT NULL,
    PRIMARY KEY (col1)
  );
  select emaj.emaj_assign_table(nspname,'mytemptbl','myGroup1b') from pg_class, pg_namespace
    where relnamespace = pg_namespace.oid and relname = 'mytemptbl';
ERROR:  _assign_tables: In schema pg_temp_2, some tables (mytemptbl) are TEMP tables.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_table(text,text,text,jsonb,text) line 7 at RETURN
rollback;
-- unlogged table
select emaj.emaj_assign_table('myschema5','myunloggedtbl','myGroup1b');
ERROR:  _assign_tables: In schema myschema5, some tables (myunloggedtbl) are UNLOGGED tables.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_table(text,text,text,jsonb,text) line 7 at RETURN
-- table WITH OIDS
select emaj.emaj_assign_table('myschema5','myoidstbl','myGroup1b');
ERROR:  _assign_tables: In schema myschema5, some tables (myoidstbl) are declared WITH OIDS.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_table(text,text,text,jsonb,text) line 7 at RETURN
-- table without PKEY
select emaj.emaj_assign_table('phil''s schema3','myTbl2\','myGroup1b');
ERROR:  _assign_tables: In schema "phil's schema3", some tables ("myTbl2\") have no PRIMARY KEY.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_table(text,text,text,jsonb,text) line 7 at RETURN
-- invalid priority
select emaj.emaj_assign_table('myschema1','mytbl1','myGroup1b','{"priority":"not_numeric"}'::jsonb);
ERROR:  _assign_tables: the "priority" property is not numeric.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_table(text,text,text,jsonb,text) line 7 at RETURN
-- invalid tablespace
select emaj.emaj_assign_table('myschema1','mytbl1','myGroup1b','{"log_data_tablespace":"dummytsp"}'::jsonb);
ERROR:  _assign_tables: the log data tablespace "dummytsp" does not exists.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_table(text,text,text,jsonb,text) line 7 at RETURN
select emaj.emaj_assign_table('myschema1','mytbl1','myGroup1b','{"log_index_tablespace":"dummytsp"}'::jsonb);
ERROR:  _assign_tables: the log index tablespace "dummytsp" does not exists.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_table(text,text,text,jsonb,text) line 7 at RETURN
-- unknown property
select emaj.emaj_assign_table('myschema1','mytbl1','myGroup1b','{"unknown_property":null}'::jsonb);
ERROR:  _assign_tables: properties "{"unknown_property": null}" are unknown.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_table(text,text,text,jsonb,text) line 7 at RETURN
-- bad mark
select emaj.emaj_assign_table('myschema1','mytbl1','myGroup1b',null,'EMAJ_LAST_MARK');
ERROR:  _check_new_mark: "EMAJ_LAST_MARK" is not an allowed name for a new mark.
CONTEXT:  SQL statement "SELECT emaj._check_new_mark(array[v_group], v_mark)"
PL/pgSQL function emaj._assign_tables(text,text[],text,jsonb,text,boolean,boolean) line 195 at SQL statement
PL/pgSQL function emaj.emaj_assign_table(text,text,text,jsonb,text) line 7 at RETURN
-- erroneously existing log schema
begin;
  create schema emaj_myschema1;
  select emaj.emaj_assign_table('myschema1','mytbl1','myGroup1b');
ERROR:  _assign_tables: The schema "emaj_myschema1" should not exist. Drop it manually.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_table(text,text,text,jsonb,text) line 7 at RETURN
rollback;
-- ok
select emaj.emaj_assign_table('myschema1','mytbl1','myGroup1b');
 emaj_assign_table 
-------------------
                 1
(1 row)

-- already assigned table
select emaj.emaj_assign_table('myschema1','mytbl1','myGroup1b');
ERROR:  _assign_tables: In schema myschema1, some tables (mytbl1) already belong to a group.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_table(text,text,text,jsonb,text) line 7 at RETURN
-----------------------------------
-- emaj_assign_tables with array
-----------------------------------
-- error cases
-- bad group name
select emaj.emaj_assign_tables('dummySchema',array['dummyTable'],'dummyGroup');
ERROR:  _check_group_names: The group "dummyGroup" does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_group], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj._assign_tables(text,text[],text,jsonb,text,boolean,boolean) line 34 at PERFORM
PL/pgSQL function emaj.emaj_assign_tables(text,text[],text,jsonb,text) line 7 at RETURN
-- bad tables
select emaj.emaj_assign_tables('myschema1',array['dummytbl1','dummytbl2'],'myGroup1b');
ERROR:  _assign_tables: In schema myschema1, some tables (dummytbl1, dummytbl2) do not exist.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text[],text,jsonb,text) line 7 at RETURN
-- empty tables array
select emaj.emaj_assign_tables('myschema1',array[]::text[],'myGroup1b');
WARNING:  _assign_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text[],text,jsonb,text) line 7 at RETURN
 emaj_assign_tables 
--------------------
                  0
(1 row)

select emaj.emaj_assign_tables('myschema1',null,'myGroup1b');
WARNING:  _assign_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text[],text,jsonb,text) line 7 at RETURN
 emaj_assign_tables 
--------------------
                  0
(1 row)

select emaj.emaj_assign_tables('myschema1',array[''],'myGroup1b');
WARNING:  _assign_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text[],text,jsonb,text) line 7 at RETURN
 emaj_assign_tables 
--------------------
                  0
(1 row)

-- ok (with a duplicate table name)
select emaj.emaj_assign_tables('myschema1',array['mytbl2','mytbl2b','mytbl2'],'myGroup1b',
                               '{"priority":1, "log_data_tablespace":"tsplog1", "log_index_tablespace":"tsplog1"}'::jsonb);
WARNING:  _create_tbl: The table "myschema1.mytbl2" has triggers (mytbl2trg1, mytbl2trg2). They will be automatically disabled during E-Maj rollback operations, unless they have been recorded into the list of triggers that may be kept enabled, with the emaj_ignore_app_trigger() function.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(v_schema, v_table, v_group, v_priority, v_logDatTsp, v_logIdxTsp,
                             v_timeId, v_groupIsRollbackable, v_groupIsLogging)"
PL/pgSQL function emaj._add_tbl(text,text,text,integer,text,text,boolean,bigint,text) line 19 at PERFORM
SQL statement "SELECT emaj._add_tbl(v_schema, v_oneTable, v_group, v_priority, v_logDatTsp, v_logIdxTsp, v_groupIsLogging,
                              v_timeId, v_function)"
PL/pgSQL function emaj._assign_tables(text,text[],text,jsonb,text,boolean,boolean) line 237 at PERFORM
PL/pgSQL function emaj.emaj_assign_tables(text,text[],text,jsonb,text) line 7 at RETURN
 emaj_assign_tables 
--------------------
                  2
(1 row)

select group_last_alter_time_id, group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1b';
 group_last_alter_time_id | group_nb_table | group_nb_sequence 
--------------------------+----------------+-------------------
                       16 |              3 |                 0
(1 row)

-----------------------------------
-- emaj_assign_tables with filters
-----------------------------------
-- error cases
-- bad group name
select emaj.emaj_assign_tables('dummySchema','dummyIncludeFilter','dummyExcludeFilter','dummyGroup');
ERROR:  _check_group_names: The group "dummyGroup" does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_group], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj._assign_tables(text,text[],text,jsonb,text,boolean,boolean) line 34 at PERFORM
PL/pgSQL function emaj.emaj_assign_tables(text,text,text,text,jsonb,text) line 23 at RETURN
-- bad schema
select emaj.emaj_assign_tables('dummySchema','dummyIncludeFilter','dummyExcludeFilter','myGroup1b');
ERROR:  _assign_tables: The schema "dummySchema" does not exist.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text,text,text,jsonb,text) line 23 at RETURN
select emaj.emaj_assign_tables('emaj','dummyIncludeFilter','dummyExcludeFilter','myGroup1b');
ERROR:  _assign_tables: The schema "emaj" is an E-Maj schema.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text,text,text,jsonb,text) line 23 at RETURN
-- empty tables array
select emaj.emaj_assign_tables('myschema1',null,null,'myGroup1b');
WARNING:  _assign_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text,text,text,jsonb,text) line 23 at RETURN
 emaj_assign_tables 
--------------------
                  0
(1 row)

select emaj.emaj_assign_tables('myschema1','','','myGroup1b');
WARNING:  _assign_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text,text,text,jsonb,text) line 23 at RETURN
 emaj_assign_tables 
--------------------
                  0
(1 row)

select emaj.emaj_assign_tables('myschema1','mytbl1','mytbl1','myGroup1b');
WARNING:  _assign_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text,text,text,jsonb,text) line 23 at RETURN
 emaj_assign_tables 
--------------------
                  0
(1 row)

-- excluded tables
-- bad types
select emaj.emaj_assign_tables('myschema4','mytblp$','','myGroup1b');
WARNING:  _assign_tables: Some tables without PRIMARY KEY (mytblp) are not selected.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text,text,text,jsonb,text) line 23 at RETURN
WARNING:  _assign_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text,text,text,jsonb,text) line 23 at RETURN
 emaj_assign_tables 
--------------------
                  0
(1 row)

select emaj.emaj_assign_tables('myschema5','unlogged|oids','','myGroup1b');
WARNING:  _assign_tables: Some UNLOGGED tables (myunloggedtbl) are not selected.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text,text,text,jsonb,text) line 23 at RETURN
WARNING:  _assign_tables: Some WITH OIDS tables (myoidstbl) are not selected.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text,text,text,jsonb,text) line 23 at RETURN
WARNING:  _assign_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text,text,text,jsonb,text) line 23 at RETURN
 emaj_assign_tables 
--------------------
                  0
(1 row)

-- temp table
begin;
  CREATE TEMPORARY TABLE myTempTbl (
    col1       INT     NOT NULL,
    PRIMARY KEY (col1)
  );
  select emaj.emaj_assign_tables(nspname,'mytemptbl','','myGroup1b') from pg_class, pg_namespace
    where relnamespace = pg_namespace.oid and relname = 'mytemptbl';
WARNING:  _assign_tables: Some TEMP tables (mytemptbl) are not selected.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text,text,text,jsonb,text) line 23 at RETURN
WARNING:  _assign_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text,text,text,jsonb,text) line 23 at RETURN
 emaj_assign_tables 
--------------------
                  0
(1 row)

rollback;
-- table without pkey for a rollbackable group
select emaj.emaj_assign_tables('phil''s schema3','myTbl2\\','','myGroup1b');
WARNING:  _assign_tables: Some tables without PRIMARY KEY ("myTbl2\") are not selected.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text,text,text,jsonb,text) line 23 at RETURN
WARNING:  _assign_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text,text,text,jsonb,text) line 23 at RETURN
 emaj_assign_tables 
--------------------
                  0
(1 row)

-- already assigned
select emaj.emaj_assign_tables('myschema1','mytbl(2|2b)$','','myGroup1b');
WARNING:  _assign_tables: Some tables already belonging to a group (mytbl2, mytbl2b) are not selected.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text,text,text,jsonb,text) line 23 at RETURN
WARNING:  _assign_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text,text,text,jsonb,text) line 23 at RETURN
 emaj_assign_tables 
--------------------
                  0
(1 row)

-- OK
  select emaj.emaj_assign_tables('myschema1','.*','mytbl(2|2b)$','myGroup1b');
WARNING:  _assign_tables: Some tables already belonging to a group (mytbl1) are not selected.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_tables(text,text,text,text,jsonb,text) line 23 at RETURN
 emaj_assign_tables 
--------------------
                  2
(1 row)

-----------------------------------
-- emaj_remove_table
-----------------------------------
-- error cases
-- table not in a group
select emaj.emaj_remove_table('dummySchema','mytbl1');
ERROR:  _remove_tables: some tables ("dummySchema".mytbl1) do not currently belong to any tables group.
CONTEXT:  PL/pgSQL function emaj.emaj_remove_table(text,text,text) line 6 at RETURN
select emaj.emaj_remove_table('myschema1','dummyTable');
ERROR:  _remove_tables: some tables (myschema1."dummyTable") do not currently belong to any tables group.
CONTEXT:  PL/pgSQL function emaj.emaj_remove_table(text,text,text) line 6 at RETURN
-- bad mark
select emaj.emaj_remove_table('myschema1','mytbl1','EMAJ_LAST_MARK');
ERROR:  _check_new_mark: "EMAJ_LAST_MARK" is not an allowed name for a new mark.
CONTEXT:  SQL statement "SELECT emaj._check_new_mark(v_loggingGroups, v_mark)"
PL/pgSQL function emaj._remove_tables(text,text[],text,boolean,boolean) line 59 at SQL statement
PL/pgSQL function emaj.emaj_remove_table(text,text,text) line 6 at RETURN
-- ok
select emaj.emaj_remove_table('myschema1','mytbl1');
 emaj_remove_table 
-------------------
                 1
(1 row)

-----------------------------------
-- emaj_remove_tables with array
-----------------------------------
-- error cases
-- empty tables array
select emaj.emaj_remove_tables('myschema1',array[]::text[]);
WARNING:  _remove_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_remove_tables(text,text[],text) line 6 at RETURN
 emaj_remove_tables 
--------------------
                  0
(1 row)

select emaj.emaj_remove_tables('myschema1',null);
WARNING:  _remove_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_remove_tables(text,text[],text) line 6 at RETURN
 emaj_remove_tables 
--------------------
                  0
(1 row)

select emaj.emaj_remove_tables('myschema1',array['']);
WARNING:  _remove_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_remove_tables(text,text[],text) line 6 at RETURN
 emaj_remove_tables 
--------------------
                  0
(1 row)

-- table not in a group
select emaj.emaj_remove_tables('myschema1',array['dummyTable','mytbl1','mytbl2']);
ERROR:  _remove_tables: some tables (myschema1."dummyTable", myschema1.mytbl1) do not currently belong to any tables group.
CONTEXT:  PL/pgSQL function emaj.emaj_remove_tables(text,text[],text) line 6 at RETURN
-- ok (with a duplicate table name)
select emaj.emaj_remove_tables('myschema1',array['mytbl2','mytbl2b','mytbl2']);
 emaj_remove_tables 
--------------------
                  2
(1 row)

-----------------------------------
-- emaj_remove_tables with filters
-----------------------------------
-- empty tables array
select emaj.emaj_remove_tables('myschema1',null,null);
WARNING:  _remove_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_remove_tables(text,text,text,text) line 22 at RETURN
 emaj_remove_tables 
--------------------
                  0
(1 row)

select emaj.emaj_remove_tables('myschema1','','');
WARNING:  _remove_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_remove_tables(text,text,text,text) line 22 at RETURN
 emaj_remove_tables 
--------------------
                  0
(1 row)

select emaj.emaj_remove_tables('myschema1','mytbl1','mytbl1');
WARNING:  _remove_tables: No table to process.
CONTEXT:  PL/pgSQL function emaj.emaj_remove_tables(text,text,text,text) line 22 at RETURN
 emaj_remove_tables 
--------------------
                  0
(1 row)

-- ok
select emaj.emaj_remove_tables('myschema1','my(t|T)bl\d$','mytbl2');
 emaj_remove_tables 
--------------------
                  2
(1 row)

select group_last_alter_time_id, group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup1b';
 group_last_alter_time_id | group_nb_table | group_nb_sequence 
--------------------------+----------------+-------------------
                       20 |              0 |                 0
(1 row)

-----------------------------------
-- emaj_assign_sequence with array
-----------------------------------
select emaj.emaj_drop_group('myGroup2');
 emaj_drop_group 
-----------------
               8
(1 row)

select emaj.emaj_create_group('myGroup2b', true, true);  -- rollbackable and empty
 emaj_create_group 
-------------------
                 0
(1 row)

-- error cases
-- bad group name
select emaj.emaj_assign_sequence('myschema2','myseq1','dummyGroup');
ERROR:  _check_group_names: The group "dummyGroup" does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_group], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj._assign_sequences(text,text[],text,text,boolean,boolean) line 24 at PERFORM
PL/pgSQL function emaj.emaj_assign_sequence(text,text,text,text) line 6 at RETURN
-- bad schema
select emaj.emaj_assign_sequence('dummySchema','myseq1','myGroup2b');
ERROR:  _assign_sequences: The schema "dummySchema" does not exist.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_sequence(text,text,text,text) line 6 at RETURN
select emaj.emaj_assign_sequence('emaj','myseq1','myGroup2b');
ERROR:  _assign_sequences: The schema "emaj" is an E-Maj schema.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_sequence(text,text,text,text) line 6 at RETURN
-- bad sequence
select emaj.emaj_assign_sequence('myschema2','dummySequence','myGroup2b');
ERROR:  _assign_sequences: In schema myschema2, some sequences ("dummySequence") do not exist.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_sequence(text,text,text,text) line 6 at RETURN
-- bad mark
select emaj.emaj_assign_sequence('myschema2','myseq1','myGroup2b','EMAJ_LAST_MARK');
ERROR:  _check_new_mark: "EMAJ_LAST_MARK" is not an allowed name for a new mark.
CONTEXT:  SQL statement "SELECT emaj._check_new_mark(array[v_group], v_mark)"
PL/pgSQL function emaj._assign_sequences(text,text[],text,text,boolean,boolean) line 74 at SQL statement
PL/pgSQL function emaj.emaj_assign_sequence(text,text,text,text) line 6 at RETURN
-- ok
select emaj.emaj_assign_sequence('myschema2','myseq1','myGroup2b');
 emaj_assign_sequence 
----------------------
                    1
(1 row)

-- already assigned sequence
select emaj.emaj_assign_sequence('myschema2','myseq1','myGroup2b');
ERROR:  _assign_sequences: In schema myschema2, some sequences (myseq1) already belong to a group.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_sequence(text,text,text,text) line 6 at RETURN
-----------------------------------
-- emaj_assign_sequences with array
-----------------------------------
-- error cases
-- bad group name
select emaj.emaj_assign_sequences('dummySchema',array['dummySequence'],'dummyGroup');
ERROR:  _check_group_names: The group "dummyGroup" does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_group], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj._assign_sequences(text,text[],text,text,boolean,boolean) line 24 at PERFORM
PL/pgSQL function emaj.emaj_assign_sequences(text,text[],text,text) line 7 at RETURN
-- bad sequences
select emaj.emaj_assign_sequences('myschema2',array['dummyseq1','dummyseq2'],'myGroup2b');
ERROR:  _assign_sequences: In schema myschema2, some sequences (dummyseq1, dummyseq2) do not exist.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_sequences(text,text[],text,text) line 7 at RETURN
-- empty sequences array
select emaj.emaj_assign_sequences('myschema2',array[]::text[],'myGroup2b');
WARNING:  _assign_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_sequences(text,text[],text,text) line 7 at RETURN
 emaj_assign_sequences 
-----------------------
                     0
(1 row)

select emaj.emaj_assign_sequences('myschema2',null,'myGroup2b');
WARNING:  _assign_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_sequences(text,text[],text,text) line 7 at RETURN
 emaj_assign_sequences 
-----------------------
                     0
(1 row)

select emaj.emaj_assign_sequences('myschema2',array[''],'myGroup2b');
WARNING:  _assign_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_sequences(text,text[],text,text) line 7 at RETURN
 emaj_assign_sequences 
-----------------------
                     0
(1 row)

-- ok (with a duplicate sequence name)
select emaj.emaj_assign_sequences('myschema2',array['myseq2','myseq2'],'myGroup2b');
 emaj_assign_sequences 
-----------------------
                     1
(1 row)

-----------------------------------
-- emaj_assign_sequences with filters
-----------------------------------
-- error cases
-- bad group name
select emaj.emaj_assign_sequences('dummySchema','dummyIncludeFilter','dummyExcludeFilter','dummyGroup');
ERROR:  _check_group_names: The group "dummyGroup" does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_group], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj._assign_sequences(text,text[],text,text,boolean,boolean) line 24 at PERFORM
PL/pgSQL function emaj.emaj_assign_sequences(text,text,text,text,text) line 23 at RETURN
-- bad schema
select emaj.emaj_assign_sequences('dummySchema','dummyIncludeFilter','dummyExcludeFilter','myGroup2b');
ERROR:  _assign_sequences: The schema "dummySchema" does not exist.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_sequences(text,text,text,text,text) line 23 at RETURN
select emaj.emaj_assign_sequences('emaj','dummyIncludeFilter','dummyExcludeFilter','myGroup2b');
ERROR:  _assign_sequences: The schema "emaj" is an E-Maj schema.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_sequences(text,text,text,text,text) line 23 at RETURN
-- empty sequences array
select emaj.emaj_assign_sequences('myschema2',null,null,'myGroup2b');
WARNING:  _assign_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_sequences(text,text,text,text,text) line 23 at RETURN
 emaj_assign_sequences 
-----------------------
                     0
(1 row)

select emaj.emaj_assign_sequences('myschema2','','','myGroup2b');
WARNING:  _assign_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_sequences(text,text,text,text,text) line 23 at RETURN
 emaj_assign_sequences 
-----------------------
                     0
(1 row)

select emaj.emaj_assign_sequences('myschema2','myseq2','myseq2','myGroup2b');
WARNING:  _assign_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_sequences(text,text,text,text,text) line 23 at RETURN
 emaj_assign_sequences 
-----------------------
                     0
(1 row)

-- already assigned
select emaj.emaj_assign_sequences('myschema2','seq1','','myGroup2b');
WARNING:  _assign_sequences: Some sequences already belonging to a group (myseq1) are not selected.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_sequences(text,text,text,text,text) line 23 at RETURN
WARNING:  _assign_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_sequences(text,text,text,text,text) line 23 at RETURN
 emaj_assign_sequences 
-----------------------
                     0
(1 row)

-- OK
select emaj.emaj_assign_sequences('myschema2','.*','myseq1$','myGroup2b');
WARNING:  _assign_sequences: Some sequences already belonging to a group (myseq2) are not selected.
CONTEXT:  PL/pgSQL function emaj.emaj_assign_sequences(text,text,text,text,text) line 23 at RETURN
 emaj_assign_sequences 
-----------------------
                     1
(1 row)

select group_last_alter_time_id, group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup2b';
 group_last_alter_time_id | group_nb_table | group_nb_sequence 
--------------------------+----------------+-------------------
                       25 |              0 |                 3
(1 row)

-----------------------------------
-- emaj_remove_sequence
-----------------------------------
-- error cases
-- sequence not in a group
select emaj.emaj_remove_sequence('dummySchema','myseq1');
ERROR:  _remove_sequences: some sequences ("dummySchema".myseq1) do not currently belong to any tables group.
CONTEXT:  PL/pgSQL function emaj.emaj_remove_sequence(text,text,text) line 6 at RETURN
select emaj.emaj_remove_sequence('myschema2','dummySequence');
ERROR:  _remove_sequences: some sequences (myschema2."dummySequence") do not currently belong to any tables group.
CONTEXT:  PL/pgSQL function emaj.emaj_remove_sequence(text,text,text) line 6 at RETURN
-- bad mark
select emaj.emaj_remove_sequence('myschema2','myseq1','EMAJ_LAST_MARK');
ERROR:  _check_new_mark: "EMAJ_LAST_MARK" is not an allowed name for a new mark.
CONTEXT:  SQL statement "SELECT emaj._check_new_mark(v_loggingGroups, v_mark)"
PL/pgSQL function emaj._remove_sequences(text,text[],text,boolean,boolean) line 56 at SQL statement
PL/pgSQL function emaj.emaj_remove_sequence(text,text,text) line 6 at RETURN
-- ok
select emaj.emaj_remove_sequence('myschema2','myseq1');
 emaj_remove_sequence 
----------------------
                    1
(1 row)

-----------------------------------
-- emaj_remove_sequences with array
-----------------------------------
-- error cases
-- empty sequences array
select emaj.emaj_remove_sequences('myschema2',array[]::text[]);
WARNING:  _remove_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_remove_sequences(text,text[],text) line 6 at RETURN
 emaj_remove_sequences 
-----------------------
                     0
(1 row)

select emaj.emaj_remove_sequences('myschema2',null);
WARNING:  _remove_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_remove_sequences(text,text[],text) line 6 at RETURN
 emaj_remove_sequences 
-----------------------
                     0
(1 row)

select emaj.emaj_remove_sequences('myschema2',array['']);
WARNING:  _remove_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_remove_sequences(text,text[],text) line 6 at RETURN
 emaj_remove_sequences 
-----------------------
                     0
(1 row)

-- sequence not in a group
select emaj.emaj_remove_sequences('myschema2',array['dummyTable','myseq2']);
ERROR:  _remove_sequences: some sequences (myschema2."dummyTable") do not currently belong to any tables group.
CONTEXT:  PL/pgSQL function emaj.emaj_remove_sequences(text,text[],text) line 6 at RETURN
-- ok (with a duplicate sequence name)
select emaj.emaj_remove_sequences('myschema2',array['myseq2','myseq2']);
 emaj_remove_sequences 
-----------------------
                     1
(1 row)

-----------------------------------
-- emaj_remove_sequences with filters
-----------------------------------
-- empty tables array
select emaj.emaj_remove_sequences('myschema2',null,null);
WARNING:  _remove_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_remove_sequences(text,text,text,text) line 22 at RETURN
 emaj_remove_sequences 
-----------------------
                     0
(1 row)

select emaj.emaj_remove_sequences('myschema2','','');
WARNING:  _remove_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_remove_sequences(text,text,text,text) line 22 at RETURN
 emaj_remove_sequences 
-----------------------
                     0
(1 row)

select emaj.emaj_remove_sequences('myschema2','myseq1','myseq1');
WARNING:  _remove_sequences: No sequence to process.
CONTEXT:  PL/pgSQL function emaj.emaj_remove_sequences(text,text,text,text) line 22 at RETURN
 emaj_remove_sequences 
-----------------------
                     0
(1 row)

-- ok
select emaj.emaj_remove_sequences('myschema2','.*','');
 emaj_remove_sequences 
-----------------------
                     1
(1 row)

select group_last_alter_time_id, group_nb_table, group_nb_sequence from emaj.emaj_group where group_name = 'myGroup2b';
 group_last_alter_time_id | group_nb_table | group_nb_sequence 
--------------------------+----------------+-------------------
                       28 |              0 |                 0
(1 row)

select emaj.emaj_drop_group('myGroup1b');
 emaj_drop_group 
-----------------
               0
(1 row)

select emaj.emaj_drop_group('myGroup2b');
 emaj_drop_group 
-----------------
               0
(1 row)

select emaj.emaj_create_group('myGroup1');
WARNING:  _create_tbl: The table "myschema1.mytbl2" has triggers (mytbl2trg1, mytbl2trg2). They will be automatically disabled during E-Maj rollback operations, unless they have been recorded into the list of triggers that may be kept enabled, with the emaj_ignore_app_trigger() function.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
 emaj_create_group 
-------------------
                 7
(1 row)

select emaj.emaj_create_group('myGroup2');
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(array[v_groupName])"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 95 at PERFORM
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(array[v_groupName])"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 95 at PERFORM
 emaj_create_group 
-------------------
                 8
(1 row)

-----------------------------------
-- emaj_ignore_app_trigger: ADD action (the REMOVE action tests are postpone after the groups configuration export/import tests)
-----------------------------------
-- unknown action
select emaj.emaj_ignore_app_trigger('dummy','dummy','dummy','dummy');
ERROR:  emaj_ignore_app_trigger: the action "dummy" must be either 'ADD' or 'REMOVE'.
-- unknown schema
select emaj.emaj_ignore_app_trigger('ADD','dummy','mytbl2','dummy');
ERROR:  emaj_ignore_app_trigger: the table "dummy.mytbl2" does not exist.
-- unknown table, and empty or NULL triggers array
select emaj.emaj_ignore_app_trigger('ADD','myschema1','dummy','dummy');
ERROR:  emaj_ignore_app_trigger: the table "myschema1.dummy" does not exist.
-- unknown triggers
select emaj.emaj_ignore_app_trigger('ADD','myschema1','mytbl2','dummy');
ERROR:  emaj_ignore_app_trigger: no trigger like "dummy" found for the table "myschema1.mytbl2".
-- emaj triggers
select emaj.emaj_ignore_app_trigger('ADD','myschema1','mytbl2','emaj_trunc_trg');
WARNING:  emaj_ignore_app_trigger: the triggers "emaj_trunc_trg" are E-Maj triggers and are not processed by the function.
 emaj_ignore_app_trigger 
-------------------------
                       0
(1 row)

select emaj.emaj_ignore_app_trigger('ADD','myschema1','mytbl2','emaj_%_trg');
WARNING:  emaj_ignore_app_trigger: the triggers "emaj_log_trg, emaj_trunc_trg" are E-Maj triggers and are not processed by the function.
 emaj_ignore_app_trigger 
-------------------------
                       0
(1 row)

-- add one trigger
select emaj.emaj_ignore_app_trigger('ADD','myschema1','mytbl2','mytbl2trg1');
 emaj_ignore_app_trigger 
-------------------------
                       1
(1 row)

select * from emaj.emaj_ignored_app_trigger order by trg_schema, trg_table, trg_name;
 trg_schema | trg_table |  trg_name  
------------+-----------+------------
 myschema1  | mytbl2    | mytbl2trg1
(1 row)

-- add the same
select emaj.emaj_ignore_app_trigger('ADD','myschema1','mytbl2','mytbl2trg1');
 emaj_ignore_app_trigger 
-------------------------
                       0
(1 row)

select * from emaj.emaj_ignored_app_trigger order by trg_schema, trg_table, trg_name;
 trg_schema | trg_table |  trg_name  
------------+-----------+------------
 myschema1  | mytbl2    | mytbl2trg1
(1 row)

-- add all triggers for a table
select emaj.emaj_ignore_app_trigger('ADD','myschema1','mytbl2','%');
WARNING:  emaj_ignore_app_trigger: the triggers "emaj_log_trg, emaj_trunc_trg" are E-Maj triggers and are not processed by the function.
 emaj_ignore_app_trigger 
-------------------------
                       1
(1 row)

select * from emaj.emaj_ignored_app_trigger order by trg_schema, trg_table, trg_name;
 trg_schema | trg_table |  trg_name  
------------+-----------+------------
 myschema1  | mytbl2    | mytbl2trg1
 myschema1  | mytbl2    | mytbl2trg2
(2 rows)

-----------------------------
-- emaj_export_groups_configuration() and emaj_import_groups_configuration() tests
-----------------------------
-- direct export
--   bad selected groups array
select emaj.emaj_export_groups_configuration(array['myGroup1','unknown1','unknown2']);
ERROR:  _export_groups_conf: The tables groups unknown1, unknown2 are unknown.
CONTEXT:  PL/pgSQL function emaj.emaj_export_groups_configuration(text[]) line 8 at RETURN
-- ok
select json_array_length(emaj.emaj_export_groups_configuration()->'tables_groups');
 json_array_length 
-------------------
                 7
(1 row)

select json_array_length(emaj.emaj_export_groups_configuration(array['myGroup1','myGroup2'])->'tables_groups');
 json_array_length 
-------------------
                 2
(1 row)

-- export in file
--   error
select emaj.emaj_export_groups_configuration('/tmp/dummy/location/file');
ERROR:  emaj_export_groups_configuration: Unable to write to the /tmp/dummy/location/file file.
--   ok
select emaj.emaj_export_groups_configuration(:'EMAJTESTTMPDIR' || '/orig_groups_config_all.json');
 emaj_export_groups_configuration 
----------------------------------
                                7
(1 row)

select emaj.emaj_export_groups_configuration(:'EMAJTESTTMPDIR' || '/orig_groups_config_partial.json', array['myGroup1','myGroup2']);
 emaj_export_groups_configuration 
----------------------------------
                                2
(1 row)

\! wc -l $EMAJTESTTMPDIR/orig_groups_config*
 191 /tmp/emaj_95/create_drop/orig_groups_config_all.json
 100 /tmp/emaj_95/create_drop/orig_groups_config_partial.json
 291 total
-- direct import
--   bad content
select * from emaj.emaj_import_groups_configuration('{ "dummy_json": null }'::json);
WARNING:  _import_groups_conf (1): The JSON structure does not contain any "tables_groups" array.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
--   missing "group" attribute
select * from emaj.emaj_import_groups_configuration('{ "tables_groups": [ { "name": "grp1" } ]}'::json);
WARNING:  _import_groups_conf (1): The tables group #1 has no "group" attribute.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
--   unknown group level attributes
select * from emaj.emaj_import_groups_configuration('{ "tables_groups": [ { "group": "grp1", "unknown_attr1": null, "unknown_attr2": null } ]}'::json);
WARNING:  _import_groups_conf (1): For the tables group "grp1", the keyword "unknown_attr1" is unknown.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
WARNING:  _import_groups_conf (1): For the tables group "grp1", the keyword "unknown_attr2" is unknown.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
--   is_rollbackable not boolean
select * from emaj.emaj_import_groups_configuration('{ "tables_groups": [ { "group": "grp1", "is_rollbackable": "absolutely true"} ]}'::json);
WARNING:  _import_groups_conf (1): For the tables group "grp1", the "is_rollbackable" attribute is not a boolean.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
--   missing "schema" attribute in tables array
select * from emaj.emaj_import_groups_configuration('{ "tables_groups": [ { "group": "grp1", "tables": [ { }] } ]}'::json);
WARNING:  _import_groups_conf (1): In the tables group "grp1", the table #1 has no "schema" attribute.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
--   missing "table" attribute in tables array
select * from emaj.emaj_import_groups_configuration('{ "tables_groups": [ { "group": "grp1", "tables": [ { "schema": "s1" }] } ]}'::json);
WARNING:  _import_groups_conf (1): In the tables group "grp1", the table #1 has no "table" attribute.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
--   unknown table level attributes
select * from emaj.emaj_import_groups_configuration('{ "tables_groups": [ { "group": "grp1", "tables": [ { "schema": "s1", "table": "t1", "unknown_attr": null }] } ]}'::json);
WARNING:  _import_groups_conf (1): In the tables group "grp1" and for the table s1.t1, the keyword "unknown_attr" is unknown.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
--   priority not numeric
select * from emaj.emaj_import_groups_configuration('{ "tables_groups": [ { "group": "grp1", "tables": [ { "schema": "a_schema", "table": "a_table", "priority": "high" }] } ]}'::json);
WARNING:  _import_groups_conf (1): In the tables group "grp1" and for the table a_schema.a_table, the "priority" attribute is not a number.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
--   missing "trigger" attribute
select * from emaj.emaj_import_groups_configuration('{ "tables_groups": [ { "group": "grp1", "tables": [ { "schema": "s1", "table": "t1", "ignored_triggers": [ { } ] }] } ]}'::json);
WARNING:  _import_groups_conf (1): In the tables group "grp1" and for the table s1.t1, the trigger #1 has no "trigger" attribute.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
--   unknown trigger level attributes
select * from emaj.emaj_import_groups_configuration('{ "tables_groups": [ { "group": "grp1", "tables": [ { "schema": "s1", "table": "t1", "ignored_triggers": [ { "trigger": "trg1", "unknown_attr": null } ] }] } ]}'::json);
WARNING:  _import_groups_conf (1): In the tables group "grp1" and for a trigger of the table s1.t1, the keyword "unknown_attr" is unknown.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
--   missing "schema" attribute in sequences array
select * from emaj.emaj_import_groups_configuration('{ "tables_groups": [ { "group": "grp1", "sequences": [ { }] } ]}'::json);
WARNING:  _import_groups_conf (1): In the tables group "grp1", the sequence #1 has no "schema" attribute.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
--   missing "sequence" attribute in sequences array
select * from emaj.emaj_import_groups_configuration('{ "tables_groups": [ { "group": "grp1", "sequences": [ { "schema": "s1" }] } ]}'::json);
WARNING:  _import_groups_conf (1): In the tables group "grp1", the sequence #1 has no "sequence" attribute.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
--   unknown sequence level attributes
select * from emaj.emaj_import_groups_configuration('{ "tables_groups": [ { "group": "grp1", "sequences": [ { "schema": "s1", "sequence": "s1",  "unknown_attr": null }] } ]}'::json);
WARNING:  _import_groups_conf (1): In the tables group "grp1" and for the sequence s1.s1, the keyword "unknown_attr" is unknown.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
--   duplicate group in json
select * from emaj.emaj_import_groups_configuration('{ "tables_groups": [ { "group": "grp1" }, { "group": "grp1" } ]}'::json);
WARNING:  _import_groups_conf (1): The JSON structure references several times the tables group "grp1".
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the supplied JSON structure.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
--   unknown group in array
select emaj.emaj_import_groups_configuration(:'EMAJTESTTMPDIR' || '/orig_groups_config_all.json', array['myGroup1','myGroup2','unknownGroup']);
WARNING:  _import_groups_conf (2): The tables group "unknownGroup" to import is not referenced in the JSON structure.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate, v_location)"
PL/pgSQL function emaj.emaj_import_groups_configuration(text,text[],boolean) line 32 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the JSON groups configuration.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate, v_location)"
PL/pgSQL function emaj.emaj_import_groups_configuration(text,text[],boolean) line 32 at SQL statement
--   group already created
select emaj.emaj_import_groups_configuration('{ "tables_groups": [ { "group": "myGroup1" }, { "group": "myGroup2" } ] }'::json, null, false);
WARNING:  _import_groups_conf (2): The tables group "myGroup1" already exists.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
WARNING:  _import_groups_conf (2): The tables group "myGroup2" already exists.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the JSON groups configuration.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
--   bad type for existing groups
select emaj.emaj_import_groups_configuration('{ "tables_groups": [ { "group": "myGroup1", "is_rollbackable": false }, { "group": "myGroup2", "is_rollbackable": false } ] }'::json, null, true);
WARNING:  _import_groups_conf (2): Changing the type of the tables group "myGroup1" is not allowed.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
WARNING:  _import_groups_conf (2): Changing the type of the tables group "myGroup2" is not allowed.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the JSON groups configuration.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
--   unknown schema and table
select * from emaj.emaj_import_groups_configuration('{ "tables_groups": [ { "group": "grp1", "tables": [ { "schema": "s1", "table": "t1" }] } ]}'::json);
WARNING:  _import_groups_conf (2): in the group grp1, the table or sequence s1.t1 does not exist.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the JSON groups configuration.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate)"
PL/pgSQL function emaj.emaj_import_groups_configuration(json,text[],boolean) line 13 at SQL statement
--   ok
-- a new group with a comment, then changed and finaly deleted
select emaj.emaj_import_groups_configuration('{ "tables_groups": [ 
   { "group": "new_grp", "comment": "a nice comment for new_grp" }
  ]}'::json);
 emaj_import_groups_configuration 
----------------------------------
                                1
(1 row)

select group_name, group_is_rollbackable, group_is_logging, group_comment
  from emaj.emaj_group where group_name = 'new_grp';
 group_name | group_is_rollbackable | group_is_logging |       group_comment        
------------+-----------------------+------------------+----------------------------
 new_grp    | t                     | f                | a nice comment for new_grp
(1 row)

select emaj.emaj_import_groups_configuration('{ "tables_groups": [ 
   { "group": "new_grp", "comment": "changed comment for new_grp" }
  ]}'::json, null, true);
 emaj_import_groups_configuration 
----------------------------------
                                1
(1 row)

select group_comment from emaj.emaj_group where group_name = 'new_grp';
        group_comment        
-----------------------------
 changed comment for new_grp
(1 row)

select emaj.emaj_import_groups_configuration('{ "tables_groups": [ 
   { "group": "new_grp" }
  ]}'::json, null, true);
 emaj_import_groups_configuration 
----------------------------------
                                1
(1 row)

select coalesce(group_comment,'NULL') from emaj.emaj_group where group_name = 'new_grp';
 coalesce 
----------
 NULL
(1 row)

select emaj.emaj_drop_group('new_grp');
 emaj_drop_group 
-----------------
               0
(1 row)

-- import from file
--   error
select emaj.emaj_import_groups_configuration('/tmp/dummy/location/file');
ERROR:  emaj_import_groups_configuration: Unable to read the /tmp/dummy/location/file file.
\! echo 'not a json content' >/tmp/bad_groups_config.json
select emaj.emaj_import_groups_configuration('/tmp/bad_groups_config.json');
ERROR:  emaj_import_groups_configuration: The file content is not a valid JSON content.
\! rm /tmp/bad_groups_config.json
--   ok
-- only 2 from the original groups
select emaj.emaj_import_groups_configuration(:'EMAJTESTTMPDIR' || '/orig_groups_config_all.json', array['emptyGroup','myGroup5'], true);
 emaj_import_groups_configuration 
----------------------------------
                                2
(1 row)

-- change the attributes for a table
\! sed -e 's/"mypartp1"/"mypartp1", "priority": 20, "log_data_tablespace": "tsplog1", "log_index_tablespace": "tsplog1"/' $EMAJTESTTMPDIR/orig_groups_config_all.json >$EMAJTESTTMPDIR/modified_groups_config_1.json
select emaj.emaj_import_groups_configuration(:'EMAJTESTTMPDIR' || '/modified_groups_config_1.json', array['myGroup4'], true);
 emaj_import_groups_configuration 
----------------------------------
                                1
(1 row)

-- move a table and a sequence to another group
-- the table myschema2.mytbl5 and the sequence myschema2.myseq1 are moved from myGroup2 to myGroup4
\! sed -n -e '1,82p' $EMAJTESTTMPDIR/modified_groups_config_1.json >$EMAJTESTTMPDIR/modified_groups_config_2.json
--     remove the table and the sequence from myGroup2
\! sed -n -e '87,95p' $EMAJTESTTMPDIR/modified_groups_config_1.json >>$EMAJTESTTMPDIR/modified_groups_config_2.json
\! sed -n -e '100,106p' $EMAJTESTTMPDIR/modified_groups_config_1.json >>$EMAJTESTTMPDIR/modified_groups_config_2.json
--     copy the moved table
\! sed -n -e '83,86p' $EMAJTESTTMPDIR/modified_groups_config_1.json >>$EMAJTESTTMPDIR/modified_groups_config_2.json
--     copy the other tables
\! sed -n -e '107,126p' $EMAJTESTTMPDIR/modified_groups_config_1.json >>$EMAJTESTTMPDIR/modified_groups_config_2.json
--     copy the sequences keyword
\! sed -n -e '91,92p' $EMAJTESTTMPDIR/modified_groups_config_1.json >>$EMAJTESTTMPDIR/modified_groups_config_2.json
--     copy the moved sequence
\! sed -n -e '97,100p' $EMAJTESTTMPDIR/modified_groups_config_1.json >>$EMAJTESTTMPDIR/modified_groups_config_2.json
--     copy the remaining json structure
\! sed -n -e '127,$p' $EMAJTESTTMPDIR/modified_groups_config_1.json >>$EMAJTESTTMPDIR/modified_groups_config_2.json
select emaj.emaj_import_groups_configuration(:'EMAJTESTTMPDIR' || '/modified_groups_config_2.json', array['myGroup2','myGroup4'], true);
 emaj_import_groups_configuration 
----------------------------------
                                2
(1 row)

-- remove a table and a sequence from a group
-- the table myschema2.mytbl5 and the sequence myschema2.myseq1 are removed from myGroup4
\! sed -n -e '1,98p' $EMAJTESTTMPDIR/modified_groups_config_2.json >$EMAJTESTTMPDIR/modified_groups_config_3.json
\! sed -n -e '103,122p' $EMAJTESTTMPDIR/modified_groups_config_2.json >>$EMAJTESTTMPDIR/modified_groups_config_3.json
\! sed -n -e '129,$p' $EMAJTESTTMPDIR/modified_groups_config_2.json >>$EMAJTESTTMPDIR/modified_groups_config_3.json
select emaj.emaj_import_groups_configuration(:'EMAJTESTTMPDIR' || '/modified_groups_config_3.json', array['myGroup4'], true);
 emaj_import_groups_configuration 
----------------------------------
                                1
(1 row)

-- register an unknown trigger and an emaj trigger
\! sed -e 's/"mytbl2trg1"/"unknowntrigger"/' -e 's/"mytbl2trg2"/"emaj_trunc_trg"/' $EMAJTESTTMPDIR/modified_groups_config_1.json >$EMAJTESTTMPDIR/modified_groups_config_2.json
select emaj.emaj_import_groups_configuration(:'EMAJTESTTMPDIR' || '/modified_groups_config_2.json', null, true);
WARNING:  _import_groups_conf (2): In the group "myGroup1" and for the table myschema1.mytbl2, the trigger unknowntrigger does not exist.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate, v_location)"
PL/pgSQL function emaj.emaj_import_groups_configuration(text,text[],boolean) line 32 at SQL statement
WARNING:  _import_groups_conf (2): In the group "myGroup1" and for the table myschema1.mytbl2, the trigger emaj_trunc_trg is an E-Maj trigger.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate, v_location)"
PL/pgSQL function emaj.emaj_import_groups_configuration(text,text[],boolean) line 32 at SQL statement
ERROR:  _import_groups_conf: One or several errors have been detected in the JSON groups configuration.
CONTEXT:  SQL statement "SELECT emaj._import_groups_conf(v_json, v_groups, v_allowGroupsUpdate, v_location)"
PL/pgSQL function emaj.emaj_import_groups_configuration(text,text[],boolean) line 32 at SQL statement
-- suppress 1 trigger
\! sed -n -e '1,29p' $EMAJTESTTMPDIR/modified_groups_config_1.json >$EMAJTESTTMPDIR/modified_groups_config_3.json
\! sed -n -e '33,$p' $EMAJTESTTMPDIR/modified_groups_config_1.json >>$EMAJTESTTMPDIR/modified_groups_config_3.json
select emaj.emaj_import_groups_configuration(:'EMAJTESTTMPDIR' || '/modified_groups_config_3.json', null, true);
 emaj_import_groups_configuration 
----------------------------------
                                7
(1 row)

select * from emaj.emaj_ignored_app_trigger order by 1,2,3;
 trg_schema | trg_table |  trg_name  
------------+-----------+------------
 myschema1  | mytbl2    | mytbl2trg2
(1 row)

-- rebuild all original groups
-- this will assign the just removed table ans sequence
select emaj.emaj_import_groups_configuration(:'EMAJTESTTMPDIR' || '/orig_groups_config_all.json', null, true);
 emaj_import_groups_configuration 
----------------------------------
                                7
(1 row)

select * from emaj.emaj_ignored_app_trigger order by 1,2,3;
 trg_schema | trg_table |  trg_name  
------------+-----------+------------
 myschema1  | mytbl2    | mytbl2trg1
 myschema1  | mytbl2    | mytbl2trg2
(2 rows)

-----------------------------------
-- emaj_ignore_app_trigger: REMOVE action
-----------------------------------
-- remove one trigger
select emaj.emaj_ignore_app_trigger('REMOVE','myschema1','mytbl2','mytbl2trg1');
 emaj_ignore_app_trigger 
-------------------------
                       1
(1 row)

select * from emaj.emaj_ignored_app_trigger order by trg_schema, trg_table, trg_name;
 trg_schema | trg_table |  trg_name  
------------+-----------+------------
 myschema1  | mytbl2    | mytbl2trg2
(1 row)

-- remove several triggers
select emaj.emaj_ignore_app_trigger('REMOVE','myschema1','mytbl2','%');
 emaj_ignore_app_trigger 
-------------------------
                       1
(1 row)

select * from emaj.emaj_ignored_app_trigger order by trg_schema, trg_table, trg_name;
 trg_schema | trg_table | trg_name 
------------+-----------+----------
(0 rows)

-----------------------------
-- emaj_drop_group() tests
-----------------------------
-- unknown group
select emaj.emaj_drop_group(NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := 'IDLE')"
PL/pgSQL function emaj.emaj_drop_group(text) line 12 at PERFORM
select emaj.emaj_drop_group('unknownGroup');
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := 'IDLE')"
PL/pgSQL function emaj.emaj_drop_group(text) line 12 at PERFORM
-- group in logging state
select emaj.emaj_start_group('myGroup1','');
 emaj_start_group 
------------------
                7
(1 row)

select emaj.emaj_drop_group('myGroup1');
ERROR:  _check_group_names: The group "myGroup1" is not in IDLE state.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := 'IDLE')"
PL/pgSQL function emaj.emaj_drop_group(text) line 12 at PERFORM
select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               7
(1 row)

-- log schema with an object blocking the schema drop
begin;
  create table emaj_myschema1.dummy_log (col1 int);
  select emaj.emaj_drop_group('myGroup1');
ERROR:  _drop_log_schemas: Cannot drop the schema "emaj_myschema1". It probably owns unattended objects. Use the emaj_verify_all() function to get details.
CONTEXT:  SQL statement "SELECT emaj._drop_log_schemas(CASE WHEN v_isForced THEN 'FORCE_DROP_GROUP' ELSE 'DROP_GROUP' END, v_isForced)"
PL/pgSQL function emaj._drop_group(text,boolean) line 27 at PERFORM
SQL statement "SELECT emaj._drop_group(v_groupName, FALSE)"
PL/pgSQL function emaj.emaj_drop_group(text) line 14 at SQL statement
rollback;
-- should be OK
select emaj.emaj_drop_group('myGroup1');
 emaj_drop_group 
-----------------
               7
(1 row)

select emaj.emaj_drop_group('myGroup2');
 emaj_drop_group 
-----------------
               8
(1 row)

select emaj.emaj_drop_group('emptyGroup');
 emaj_drop_group 
-----------------
               0
(1 row)

select emaj.emaj_drop_group('myGroup5');
 emaj_drop_group 
-----------------
               2
(1 row)

select emaj.emaj_drop_group('myGroup6');
 emaj_drop_group 
-----------------
               4
(1 row)

-- already dropped
select emaj.emaj_drop_group('myGroup2');
ERROR:  _check_group_names: The group "myGroup2" does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := 'IDLE')"
PL/pgSQL function emaj.emaj_drop_group(text) line 12 at PERFORM
-----------------------------
-- emaj_force_drop_group() tests
-----------------------------
-- unknown group
select emaj.emaj_force_drop_group(NULL);
ERROR:  _check_group_names: No group to process.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj.emaj_force_drop_group(text) line 17 at PERFORM
select emaj.emaj_force_drop_group('unknownGroup');
ERROR:  _check_group_names: The group "unknownGroup" does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj.emaj_force_drop_group(text) line 17 at PERFORM
-- already dropped
select emaj.emaj_force_drop_group('myGroup2');
ERROR:  _check_group_names: The group "myGroup2" does not exist.
CONTEXT:  SQL statement "SELECT emaj._check_group_names(v_groupNames := ARRAY[v_groupName], v_mayBeNull := FALSE, v_lockGroups := TRUE, v_checkList := '')"
PL/pgSQL function emaj.emaj_force_drop_group(text) line 17 at PERFORM
-- should be OK
select emaj.emaj_create_group('myGroup1',false);
WARNING:  _create_tbl: The table "myschema1.mytbl2" has triggers (mytbl2trg1, mytbl2trg2). They will be automatically disabled during E-Maj rollback operations, unless they have been recorded into the list of triggers that may be kept enabled, with the emaj_ignore_app_trigger() function.
CONTEXT:  SQL statement "SELECT emaj._create_tbl(grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp,
                               v_timeId, v_isRollbackable, FALSE)
        FROM (
          SELECT grpdef_schema, grpdef_tblseq, grpdef_group, grpdef_priority, grpdef_log_dat_tsp, grpdef_log_idx_tsp
            FROM emaj.emaj_group_def, pg_catalog.pg_class, pg_catalog.pg_namespace
            WHERE grpdef_group = v_groupName
              AND relnamespace = pg_namespace.oid
              AND nspname = grpdef_schema AND relname = grpdef_tblseq
              AND relkind = 'r'
            ORDER BY grpdef_priority, grpdef_schema, grpdef_tblseq
             ) AS t"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 63 at PERFORM
 emaj_create_group 
-------------------
                 7
(1 row)

select emaj.emaj_start_group('myGroup1','');
 emaj_start_group 
------------------
                7
(1 row)

select emaj.emaj_force_drop_group('myGroup1');
 emaj_force_drop_group 
-----------------------
                     7
(1 row)

select emaj.emaj_create_group('myGroup2',true);
WARNING:  _check_fk_groups: The foreign key "mytbl6_col61_fkey" on the table "myschema2.mytbl6" references the table "myschema2.mytbl7" that is outside the groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(array[v_groupName])"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 95 at PERFORM
WARNING:  _check_fk_groups: The table "myschema2.mytbl6" is referenced by the foreign key "mytbl8_col81_fkey" on the table "myschema2.mytbl8" that is outside the groups (myGroup2).
CONTEXT:  SQL statement "SELECT emaj._check_fk_groups(array[v_groupName])"
PL/pgSQL function emaj.emaj_create_group(text,boolean,boolean) line 95 at PERFORM
 emaj_create_group 
-------------------
                 8
(1 row)

select emaj.emaj_force_drop_group('myGroup2');
 emaj_force_drop_group 
-----------------------
                     8
(1 row)

-----------------------------
-- test end: check and force sequences id
-----------------------------
select nspname from pg_namespace where nspname like 'emaj%' order by nspname;
       nspname       
---------------------
 emaj
 emaj_myschema4
 emaj_phil's schema3
(3 rows)

select sch_name from emaj.emaj_schema order by 1;
      sch_name       
---------------------
 emaj
 emaj_myschema4
 emaj_phil's schema3
(3 rows)

select * from emaj.emaj_rel_hist order by 1,2,3;
 relh_schema |                       relh_tblseq                       | relh_time_range | relh_group | relh_kind 
-------------+---------------------------------------------------------+-----------------+------------+-----------
 myschema1   | myTbl3                                                  | [4,12)          | myGroup1   | r
 myschema1   | myTbl3                                                  | [17,20)         | myGroup1b  | r
 myschema1   | myTbl3                                                  | [31,46)         | myGroup1   | r
 myschema1   | myTbl3                                                  | [51,53)         | myGroup1   | r
 myschema1   | myTbl3_col31_seq                                        | [4,12)          | myGroup1   | S
 myschema1   | myTbl3_col31_seq                                        | [31,46)         | myGroup1   | S
 myschema1   | myTbl3_col31_seq                                        | [51,53)         | myGroup1   | S
 myschema1   | mytbl1                                                  | [4,12)          | myGroup1   | r
 myschema1   | mytbl1                                                  | [15,18)         | myGroup1b  | r
 myschema1   | mytbl1                                                  | [31,46)         | myGroup1   | r
 myschema1   | mytbl1                                                  | [51,53)         | myGroup1   | r
 myschema1   | mytbl2                                                  | [4,12)          | myGroup1   | r
 myschema1   | mytbl2                                                  | [16,19)         | myGroup1b  | r
 myschema1   | mytbl2                                                  | [31,46)         | myGroup1   | r
 myschema1   | mytbl2                                                  | [51,53)         | myGroup1   | r
 myschema1   | mytbl2b                                                 | [4,12)          | myGroup1   | r
 myschema1   | mytbl2b                                                 | [16,19)         | myGroup1b  | r
 myschema1   | mytbl2b                                                 | [31,46)         | myGroup1   | r
 myschema1   | mytbl2b                                                 | [51,53)         | myGroup1   | r
 myschema1   | mytbl2b_col20_seq                                       | [4,12)          | myGroup1   | S
 myschema1   | mytbl2b_col20_seq                                       | [31,46)         | myGroup1   | S
 myschema1   | mytbl2b_col20_seq                                       | [51,53)         | myGroup1   | S
 myschema1   | mytbl4                                                  | [4,12)          | myGroup1   | r
 myschema1   | mytbl4                                                  | [17,20)         | myGroup1b  | r
 myschema1   | mytbl4                                                  | [31,46)         | myGroup1   | r
 myschema1   | mytbl4                                                  | [51,53)         | myGroup1   | r
 myschema2   | myTbl3                                                  | [6,21)          | myGroup2   | r
 myschema2   | myTbl3                                                  | [32,47)         | myGroup2   | r
 myschema2   | myTbl3                                                  | [54,55)         | myGroup2   | r
 myschema2   | myTbl3_col31_seq                                        | [6,21)          | myGroup2   | S
 myschema2   | myTbl3_col31_seq                                        | [25,28)         | myGroup2b  | S
 myschema2   | myTbl3_col31_seq                                        | [32,47)         | myGroup2   | S
 myschema2   | myTbl3_col31_seq                                        | [54,55)         | myGroup2   | S
 myschema2   | myseq1                                                  | [6,21)          | myGroup2   | S
 myschema2   | myseq1                                                  | [23,26)         | myGroup2b  | S
 myschema2   | myseq1                                                  | [32,39)         | myGroup2   | S
 myschema2   | myseq1                                                  | [39,40)         | myGroup4   | S
 myschema2   | myseq1                                                  | [41,47)         | myGroup2   | S
 myschema2   | myseq1                                                  | [54,55)         | myGroup2   | S
 myschema2   | myseq2                                                  | [24,27)         | myGroup2b  | S
 myschema2   | mytbl1                                                  | [6,21)          | myGroup2   | r
 myschema2   | mytbl1                                                  | [32,47)         | myGroup2   | r
 myschema2   | mytbl1                                                  | [54,55)         | myGroup2   | r
 myschema2   | mytbl2                                                  | [6,21)          | myGroup2   | r
 myschema2   | mytbl2                                                  | [32,47)         | myGroup2   | r
 myschema2   | mytbl2                                                  | [54,55)         | myGroup2   | r
 myschema2   | mytbl4                                                  | [6,21)          | myGroup2   | r
 myschema2   | mytbl4                                                  | [32,47)         | myGroup2   | r
 myschema2   | mytbl4                                                  | [54,55)         | myGroup2   | r
 myschema2   | mytbl5                                                  | [6,21)          | myGroup2   | r
 myschema2   | mytbl5                                                  | [32,39)         | myGroup2   | r
 myschema2   | mytbl5                                                  | [39,40)         | myGroup4   | r
 myschema2   | mytbl5                                                  | [41,47)         | myGroup2   | r
 myschema2   | mytbl5                                                  | [54,55)         | myGroup2   | r
 myschema2   | mytbl6                                                  | [6,21)          | myGroup2   | r
 myschema2   | mytbl6                                                  | [32,47)         | myGroup2   | r
 myschema2   | mytbl6                                                  | [54,55)         | myGroup2   | r
 myschema5   | myoidstbl                                               | [10,49)         | myGroup5   | r
 myschema5   | myunloggedtbl                                           | [10,49)         | myGroup5   | r
 myschema6   | table_with_50_characters_long_name_____0_________0      | [11,50)         | myGroup6   | r
 myschema6   | table_with_51_characters_long_name_____0_________0a     | [11,50)         | myGroup6   | r
 myschema6   | table_with_55_characters_long_name_____0_________0abcde | [11,50)         | myGroup6   | r
 myschema6   | table_with_55_characters_long_name_____0_________0fghij | [11,50)         | myGroup6   | r
(63 rows)

select hist_function, hist_event, hist_object, 
       regexp_replace(regexp_replace(hist_wording,E'\\d\\d\.\\d\\d\\.\\d\\d\\.\\d\\d\\d\\d','%','g'),E'\\[.+\\]','(timestamp)','g'), 
       hist_user 
  from emaj.emaj_hist order by hist_id;
  hist_function   |          hist_event          |                                  hist_object                                   |                            regexp_replace                            | hist_user 
------------------+------------------------------+--------------------------------------------------------------------------------+----------------------------------------------------------------------+-----------
 CREATE_GROUP     | BEGIN                        | myGroup1                                                                       | rollbackable                                                         | postgres
 CREATE_GROUP     | LOG_SCHEMA CREATED           | emaj_myschema1                                                                 |                                                                      | postgres
 CREATE_GROUP     | END                          | myGroup1                                                                       | 7 tables/sequences processed                                         | postgres
 CREATE_GROUP     | BEGIN                        | emptyGroup                                                                     | audit_only                                                           | postgres
 CREATE_GROUP     | END                          | emptyGroup                                                                     | 0 tables/sequences processed                                         | postgres
 CREATE_GROUP     | BEGIN                        | myGroup2                                                                       | rollbackable                                                         | postgres
 CREATE_GROUP     | LOG_SCHEMA CREATED           | emaj_myschema2                                                                 |                                                                      | postgres
 CREATE_GROUP     | END                          | myGroup2                                                                       | 8 tables/sequences processed                                         | postgres
 CREATE_GROUP     | BEGIN                        | phil's group#3",                                                               | audit_only                                                           | postgres
 CREATE_GROUP     | LOG_SCHEMA CREATED           | "emaj_phil's schema3"                                                          |                                                                      | postgres
 CREATE_GROUP     | END                          | phil's group#3",                                                               | 4 tables/sequences processed                                         | postgres
 CREATE_GROUP     | BEGIN                        | myGroup4                                                                       | rollbackable                                                         | postgres
 CREATE_GROUP     | LOG_SCHEMA CREATED           | emaj_myschema4                                                                 |                                                                      | postgres
 CREATE_GROUP     | END                          | myGroup4                                                                       | 5 tables/sequences processed                                         | postgres
 CREATE_GROUP     | BEGIN                        | myGroup5                                                                       | audit_only                                                           | postgres
 CREATE_GROUP     | LOG_SCHEMA CREATED           | emaj_myschema5                                                                 |                                                                      | postgres
 CREATE_GROUP     | END                          | myGroup5                                                                       | 2 tables/sequences processed                                         | postgres
 CREATE_GROUP     | BEGIN                        | myGroup6                                                                       | rollbackable                                                         | postgres
 CREATE_GROUP     | LOG_SCHEMA CREATED           | emaj_myschema6                                                                 |                                                                      | postgres
 CREATE_GROUP     | END                          | myGroup6                                                                       | 4 tables/sequences processed                                         | postgres
 COMMENT_GROUP    |                              | myGroup1                                                                       |                                                                      | postgres
 COMMENT_GROUP    |                              | myGroup1                                                                       |                                                                      | postgres
 COMMENT_GROUP    |                              | emptyGroup                                                                     |                                                                      | postgres
 COMMENT_GROUP    |                              | myGroup1                                                                       |                                                                      | postgres
 SYNC_DEF_GROUP   | EMAJ_GROUP_DEF SYNCHRONIZED  | myGroup1                                                                       |                                                                      | postgres
 SYNC_DEF_GROUP   | EMAJ_GROUP_DEF SYNCHRONIZED  | myGroup2                                                                       |                                                                      | postgres
 SYNC_DEF_GROUP   | EMAJ_GROUP_DEF SYNCHRONIZED  | phil's group#3",                                                               |                                                                      | postgres
 SYNC_DEF_GROUP   | EMAJ_GROUP_DEF SYNCHRONIZED  | myGroup4                                                                       |                                                                      | postgres
 SYNC_DEF_GROUP   | EMAJ_GROUP_DEF SYNCHRONIZED  | myGroup5                                                                       |                                                                      | postgres
 SYNC_DEF_GROUP   | EMAJ_GROUP_DEF SYNCHRONIZED  | myGroup6                                                                       |                                                                      | postgres
 SYNC_DEF_GROUP   | EMAJ_GROUP_DEF SYNCHRONIZED  | emptyGroup                                                                     |                                                                      | postgres
 SYNC_DEF_GROUP   | EMAJ_GROUP_DEF SYNCHRONIZED  | myGroup1                                                                       |                                                                      | postgres
 DROP_GROUP       | BEGIN                        | myGroup1                                                                       |                                                                      | postgres
 DROP_GROUP       | LOG_SCHEMA DROPPED           | emaj_myschema1                                                                 |                                                                      | postgres
 DROP_GROUP       | END                          | myGroup1                                                                       | 7 tables/sequences processed                                         | postgres
 CREATE_GROUP     | BEGIN                        | myGroup1b                                                                      | rollbackable                                                         | postgres
 CREATE_GROUP     | END                          | myGroup1b                                                                      | 0 tables/sequences processed                                         | postgres
 ASSIGN_TABLE     | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_TABLE     | LOG_SCHEMA CREATED           | emaj_myschema1                                                                 |                                                                      | postgres
 ASSIGN_TABLE     | TABLE ADDED                  | myschema1.mytbl1                                                               | To the idle group myGroup1b                                          | postgres
 ASSIGN_TABLE     | END                          |                                                                                | 1 tables assigned to the group myGroup1b                             | postgres
 ASSIGN_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_TABLES    | END                          |                                                                                | 0 tables assigned to the group myGroup1b                             | postgres
 ASSIGN_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_TABLES    | END                          |                                                                                | 0 tables assigned to the group myGroup1b                             | postgres
 ASSIGN_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_TABLES    | END                          |                                                                                | 0 tables assigned to the group myGroup1b                             | postgres
 ASSIGN_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_TABLES    | TABLE ADDED                  | myschema1.mytbl2                                                               | To the idle group myGroup1b                                          | postgres
 ASSIGN_TABLES    | TABLE ADDED                  | myschema1.mytbl2b                                                              | To the idle group myGroup1b                                          | postgres
 ASSIGN_TABLES    | END                          |                                                                                | 2 tables assigned to the group myGroup1b                             | postgres
 ASSIGN_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_TABLES    | END                          |                                                                                | 0 tables assigned to the group myGroup1b                             | postgres
 ASSIGN_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_TABLES    | END                          |                                                                                | 0 tables assigned to the group myGroup1b                             | postgres
 ASSIGN_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_TABLES    | END                          |                                                                                | 0 tables assigned to the group myGroup1b                             | postgres
 ASSIGN_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_TABLES    | END                          |                                                                                | 0 tables assigned to the group myGroup1b                             | postgres
 ASSIGN_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_TABLES    | END                          |                                                                                | 0 tables assigned to the group myGroup1b                             | postgres
 ASSIGN_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_TABLES    | END                          |                                                                                | 0 tables assigned to the group myGroup1b                             | postgres
 ASSIGN_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_TABLES    | END                          |                                                                                | 0 tables assigned to the group myGroup1b                             | postgres
 ASSIGN_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_TABLES    | TABLE ADDED                  | myschema1."myTbl3"                                                             | To the idle group myGroup1b                                          | postgres
 ASSIGN_TABLES    | TABLE ADDED                  | myschema1.mytbl4                                                               | To the idle group myGroup1b                                          | postgres
 ASSIGN_TABLES    | END                          |                                                                                | 2 tables assigned to the group myGroup1b                             | postgres
 REMOVE_TABLE     | BEGIN                        |                                                                                |                                                                      | postgres
 REMOVE_TABLE     | TABLE REMOVED                | myschema1.mytbl1                                                               | From the idle group myGroup1b                                        | postgres
 REMOVE_TABLE     | END                          |                                                                                | 1 tables removed from their groups                                   | postgres
 REMOVE_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 REMOVE_TABLES    | END                          |                                                                                | 0 tables removed from their groups                                   | postgres
 REMOVE_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 REMOVE_TABLES    | END                          |                                                                                | 0 tables removed from their groups                                   | postgres
 REMOVE_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 REMOVE_TABLES    | END                          |                                                                                | 0 tables removed from their groups                                   | postgres
 REMOVE_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 REMOVE_TABLES    | TABLE REMOVED                | myschema1.mytbl2                                                               | From the idle group myGroup1b                                        | postgres
 REMOVE_TABLES    | TABLE REMOVED                | myschema1.mytbl2b                                                              | From the idle group myGroup1b                                        | postgres
 REMOVE_TABLES    | END                          |                                                                                | 2 tables removed from their groups                                   | postgres
 REMOVE_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 REMOVE_TABLES    | END                          |                                                                                | 0 tables removed from their groups                                   | postgres
 REMOVE_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 REMOVE_TABLES    | END                          |                                                                                | 0 tables removed from their groups                                   | postgres
 REMOVE_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 REMOVE_TABLES    | END                          |                                                                                | 0 tables removed from their groups                                   | postgres
 REMOVE_TABLES    | BEGIN                        |                                                                                |                                                                      | postgres
 REMOVE_TABLES    | TABLE REMOVED                | myschema1."myTbl3"                                                             | From the idle group myGroup1b                                        | postgres
 REMOVE_TABLES    | TABLE REMOVED                | myschema1.mytbl4                                                               | From the idle group myGroup1b                                        | postgres
 REMOVE_TABLES    | LOG_SCHEMA DROPPED           | emaj_myschema1                                                                 |                                                                      | postgres
 REMOVE_TABLES    | END                          |                                                                                | 2 tables removed from their groups                                   | postgres
 DROP_GROUP       | BEGIN                        | myGroup2                                                                       |                                                                      | postgres
 DROP_GROUP       | LOG_SCHEMA DROPPED           | emaj_myschema2                                                                 |                                                                      | postgres
 DROP_GROUP       | END                          | myGroup2                                                                       | 8 tables/sequences processed                                         | postgres
 CREATE_GROUP     | BEGIN                        | myGroup2b                                                                      | rollbackable                                                         | postgres
 CREATE_GROUP     | END                          | myGroup2b                                                                      | 0 tables/sequences processed                                         | postgres
 ASSIGN_SEQUENCE  | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_SEQUENCE  | SEQUENCE ADDED               | myschema2.myseq1                                                               | To the idle group myGroup2b                                          | postgres
 ASSIGN_SEQUENCE  | END                          |                                                                                | 1 sequences assigned to the group myGroup2b                          | postgres
 ASSIGN_SEQUENCES | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_SEQUENCES | END                          |                                                                                | 0 sequences assigned to the group myGroup2b                          | postgres
 ASSIGN_SEQUENCES | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_SEQUENCES | END                          |                                                                                | 0 sequences assigned to the group myGroup2b                          | postgres
 ASSIGN_SEQUENCES | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_SEQUENCES | END                          |                                                                                | 0 sequences assigned to the group myGroup2b                          | postgres
 ASSIGN_SEQUENCES | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_SEQUENCES | SEQUENCE ADDED               | myschema2.myseq2                                                               | To the idle group myGroup2b                                          | postgres
 ASSIGN_SEQUENCES | END                          |                                                                                | 1 sequences assigned to the group myGroup2b                          | postgres
 ASSIGN_SEQUENCES | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_SEQUENCES | END                          |                                                                                | 0 sequences assigned to the group myGroup2b                          | postgres
 ASSIGN_SEQUENCES | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_SEQUENCES | END                          |                                                                                | 0 sequences assigned to the group myGroup2b                          | postgres
 ASSIGN_SEQUENCES | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_SEQUENCES | END                          |                                                                                | 0 sequences assigned to the group myGroup2b                          | postgres
 ASSIGN_SEQUENCES | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_SEQUENCES | END                          |                                                                                | 0 sequences assigned to the group myGroup2b                          | postgres
 ASSIGN_SEQUENCES | BEGIN                        |                                                                                |                                                                      | postgres
 ASSIGN_SEQUENCES | SEQUENCE ADDED               | myschema2."myTbl3_col31_seq"                                                   | To the idle group myGroup2b                                          | postgres
 ASSIGN_SEQUENCES | END                          |                                                                                | 1 sequences assigned to the group myGroup2b                          | postgres
 REMOVE_SEQUENCE  | BEGIN                        |                                                                                |                                                                      | postgres
 REMOVE_SEQUENCE  | SEQUENCE REMOVED             | myschema2.myseq1                                                               | From the idle group myGroup2b                                        | postgres
 REMOVE_SEQUENCE  | END                          |                                                                                | 1 sequences removed from their groups                                | postgres
 REMOVE_SEQUENCES | BEGIN                        |                                                                                |                                                                      | postgres
 REMOVE_SEQUENCES | END                          |                                                                                | 0 sequences removed from their groups                                | postgres
 REMOVE_SEQUENCES | BEGIN                        |                                                                                |                                                                      | postgres
 REMOVE_SEQUENCES | END                          |                                                                                | 0 sequences removed from their groups                                | postgres
 REMOVE_SEQUENCES | BEGIN                        |                                                                                |                                                                      | postgres
 REMOVE_SEQUENCES | END                          |                                                                                | 0 sequences removed from their groups                                | postgres
 REMOVE_SEQUENCES | BEGIN                        |                                                                                |                                                                      | postgres
 REMOVE_SEQUENCES | SEQUENCE REMOVED             | myschema2.myseq2                                                               | From the idle group myGroup2b                                        | postgres
 REMOVE_SEQUENCES | END                          |                                                                                | 1 sequences removed from their groups                                | postgres
 REMOVE_SEQUENCES | BEGIN                        |                                                                                |                                                                      | postgres
 REMOVE_SEQUENCES | END                          |                                                                                | 0 sequences removed from their groups                                | postgres
 REMOVE_SEQUENCES | BEGIN                        |                                                                                |                                                                      | postgres
 REMOVE_SEQUENCES | END                          |                                                                                | 0 sequences removed from their groups                                | postgres
 REMOVE_SEQUENCES | BEGIN                        |                                                                                |                                                                      | postgres
 REMOVE_SEQUENCES | END                          |                                                                                | 0 sequences removed from their groups                                | postgres
 REMOVE_SEQUENCES | BEGIN                        |                                                                                |                                                                      | postgres
 REMOVE_SEQUENCES | SEQUENCE REMOVED             | myschema2."myTbl3_col31_seq"                                                   | From the idle group myGroup2b                                        | postgres
 REMOVE_SEQUENCES | END                          |                                                                                | 1 sequences removed from their groups                                | postgres
 DROP_GROUP       | BEGIN                        | myGroup1b                                                                      |                                                                      | postgres
 DROP_GROUP       | END                          | myGroup1b                                                                      | 0 tables/sequences processed                                         | postgres
 DROP_GROUP       | BEGIN                        | myGroup2b                                                                      |                                                                      | postgres
 DROP_GROUP       | END                          | myGroup2b                                                                      | 0 tables/sequences processed                                         | postgres
 CREATE_GROUP     | BEGIN                        | myGroup1                                                                       | rollbackable                                                         | postgres
 CREATE_GROUP     | LOG_SCHEMA CREATED           | emaj_myschema1                                                                 |                                                                      | postgres
 CREATE_GROUP     | END                          | myGroup1                                                                       | 7 tables/sequences processed                                         | postgres
 CREATE_GROUP     | BEGIN                        | myGroup2                                                                       | rollbackable                                                         | postgres
 CREATE_GROUP     | LOG_SCHEMA CREATED           | emaj_myschema2                                                                 |                                                                      | postgres
 CREATE_GROUP     | END                          | myGroup2                                                                       | 8 tables/sequences processed                                         | postgres
 IMPORT_GROUPS    | BEGIN                        | new_grp                                                                        |                                                                      | postgres
 IMPORT_GROUPS    | GROUP CREATED                | new_grp                                                                        | rollbackable                                                         | postgres
 IMPORT_GROUPS    | END                          |                                                                                | 1 created or altered tables groups                                   | postgres
 IMPORT_GROUPS    | BEGIN                        | new_grp                                                                        |                                                                      | postgres
 IMPORT_GROUPS    | END                          |                                                                                | 1 created or altered tables groups                                   | postgres
 IMPORT_GROUPS    | BEGIN                        | new_grp                                                                        |                                                                      | postgres
 IMPORT_GROUPS    | END                          |                                                                                | 1 created or altered tables groups                                   | postgres
 DROP_GROUP       | BEGIN                        | new_grp                                                                        |                                                                      | postgres
 DROP_GROUP       | END                          | new_grp                                                                        | 0 tables/sequences processed                                         | postgres
 IMPORT_GROUPS    | BEGIN                        | emptyGroup, myGroup5                                                           | Input file: '/tmp/emaj_95/create_drop/orig_groups_config_all.json'   | postgres
 IMPORT_GROUPS    | END                          |                                                                                | 2 created or altered tables groups                                   | postgres
 IMPORT_GROUPS    | BEGIN                        | myGroup4                                                                       | Input file: '/tmp/emaj_95/create_drop/modified_groups_config_1.json' | postgres
 IMPORT_GROUPS    | LOG DATA TABLESPACE CHANGED  | myschema4.mypartp1                                                             | Default tablespace => tsplog1                                        | postgres
 IMPORT_GROUPS    | LOG INDEX TABLESPACE CHANGED | myschema4.mypartp1                                                             | Default tablespace => tsplog1                                        | postgres
 IMPORT_GROUPS    | PRIORITY CHANGED             | myschema4.mypartp1                                                             | NULL => 2                                                            | postgres
 IMPORT_GROUPS    | END                          |                                                                                | 1 created or altered tables groups                                   | postgres
 IMPORT_GROUPS    | BEGIN                        | myGroup2, myGroup4                                                             | Input file: '/tmp/emaj_95/create_drop/modified_groups_config_2.json' | postgres
 IMPORT_GROUPS    | TABLE MOVED                  | myschema2.mytbl5                                                               | From the idle group myGroup2 to the idle group myGroup4              | postgres
 IMPORT_GROUPS    | SEQUENCE MOVED               | myschema2.myseq1                                                               | From the idle group myGroup2 to the idle group myGroup4              | postgres
 IMPORT_GROUPS    | END                          |                                                                                | 2 created or altered tables groups                                   | postgres
 IMPORT_GROUPS    | BEGIN                        | myGroup4                                                                       | Input file: '/tmp/emaj_95/create_drop/modified_groups_config_3.json' | postgres
 IMPORT_GROUPS    | TABLE REMOVED                | myschema2.mytbl5                                                               | From the idle group myGroup4                                         | postgres
 IMPORT_GROUPS    | SEQUENCE REMOVED             | myschema2.myseq1                                                               | From the idle group myGroup4                                         | postgres
 IMPORT_GROUPS    | END                          |                                                                                | 1 created or altered tables groups                                   | postgres
 IMPORT_GROUPS    | BEGIN                        | emptyGroup, myGroup1, myGroup2, myGroup4, myGroup5, myGroup6, phil's group#3", | Input file: '/tmp/emaj_95/create_drop/modified_groups_config_3.json' | postgres
 IMPORT_GROUPS    | TABLE ADDED                  | myschema2.mytbl5                                                               | To the idle group myGroup2                                           | postgres
 IMPORT_GROUPS    | SEQUENCE ADDED               | myschema2.myseq1                                                               | To the idle group myGroup2                                           | postgres
 IMPORT_GROUPS    | END                          |                                                                                | 7 created or altered tables groups                                   | postgres
 IMPORT_GROUPS    | BEGIN                        | emptyGroup, myGroup1, myGroup2, myGroup4, myGroup5, myGroup6, phil's group#3", | Input file: '/tmp/emaj_95/create_drop/orig_groups_config_all.json'   | postgres
 IMPORT_GROUPS    | LOG DATA TABLESPACE CHANGED  | myschema4.mypartp1                                                             | tsplog1 => Default tablespace                                        | postgres
 IMPORT_GROUPS    | LOG INDEX TABLESPACE CHANGED | myschema4.mypartp1                                                             | tsplog1 => Default tablespace                                        | postgres
 IMPORT_GROUPS    | PRIORITY CHANGED             | myschema4.mypartp1                                                             | 2 => NULL                                                            | postgres
 IMPORT_GROUPS    | END                          |                                                                                | 7 created or altered tables groups                                   | postgres
 START_GROUP      | BEGIN                        | myGroup1                                                                       | With log reset                                                       | postgres
 LOCK_GROUP       | BEGIN                        | myGroup1                                                                       |                                                                      | postgres
 LOCK_GROUP       | END                          | myGroup1                                                                       | 5 tables locked, 0 deadlock(s)                                       | postgres
 SET_MARK_GROUP   | BEGIN                        | myGroup1                                                                       | START_%                                                              | postgres
 SET_MARK_GROUP   | END                          | myGroup1                                                                       | START_%                                                              | postgres
 START_GROUP      | END                          | myGroup1                                                                       | 7 tables/sequences processed                                         | postgres
 STOP_GROUP       | BEGIN                        | myGroup1                                                                       |                                                                      | postgres
 LOCK_GROUP       | BEGIN                        | myGroup1                                                                       |                                                                      | postgres
 LOCK_GROUP       | END                          | myGroup1                                                                       | 5 tables locked, 0 deadlock(s)                                       | postgres
 SET_MARK_GROUP   | BEGIN                        | myGroup1                                                                       | STOP_%                                                               | postgres
 SET_MARK_GROUP   | END                          | myGroup1                                                                       | STOP_%                                                               | postgres
 STOP_GROUP       | END                          | myGroup1                                                                       | 7 tables/sequences processed                                         | postgres
 DROP_GROUP       | BEGIN                        | myGroup1                                                                       |                                                                      | postgres
 DROP_GROUP       | LOG_SCHEMA DROPPED           | emaj_myschema1                                                                 |                                                                      | postgres
 DROP_GROUP       | END                          | myGroup1                                                                       | 7 tables/sequences processed                                         | postgres
 DROP_GROUP       | BEGIN                        | myGroup2                                                                       |                                                                      | postgres
 DROP_GROUP       | LOG_SCHEMA DROPPED           | emaj_myschema2                                                                 |                                                                      | postgres
 DROP_GROUP       | END                          | myGroup2                                                                       | 8 tables/sequences processed                                         | postgres
 DROP_GROUP       | BEGIN                        | emptyGroup                                                                     |                                                                      | postgres
 DROP_GROUP       | END                          | emptyGroup                                                                     | 0 tables/sequences processed                                         | postgres
 DROP_GROUP       | BEGIN                        | myGroup5                                                                       |                                                                      | postgres
 DROP_GROUP       | LOG_SCHEMA DROPPED           | emaj_myschema5                                                                 |                                                                      | postgres
 DROP_GROUP       | END                          | myGroup5                                                                       | 2 tables/sequences processed                                         | postgres
 DROP_GROUP       | BEGIN                        | myGroup6                                                                       |                                                                      | postgres
 DROP_GROUP       | LOG_SCHEMA DROPPED           | emaj_myschema6                                                                 |                                                                      | postgres
 DROP_GROUP       | END                          | myGroup6                                                                       | 4 tables/sequences processed                                         | postgres
 CREATE_GROUP     | BEGIN                        | myGroup1                                                                       | audit_only                                                           | postgres
 CREATE_GROUP     | LOG_SCHEMA CREATED           | emaj_myschema1                                                                 |                                                                      | postgres
 CREATE_GROUP     | END                          | myGroup1                                                                       | 7 tables/sequences processed                                         | postgres
 START_GROUP      | BEGIN                        | myGroup1                                                                       | With log reset                                                       | postgres
 LOCK_GROUP       | BEGIN                        | myGroup1                                                                       |                                                                      | postgres
 LOCK_GROUP       | END                          | myGroup1                                                                       | 5 tables locked, 0 deadlock(s)                                       | postgres
 SET_MARK_GROUP   | BEGIN                        | myGroup1                                                                       | START_%                                                              | postgres
 SET_MARK_GROUP   | END                          | myGroup1                                                                       | START_%                                                              | postgres
 START_GROUP      | END                          | myGroup1                                                                       | 7 tables/sequences processed                                         | postgres
 FORCE_DROP_GROUP | BEGIN                        | myGroup1                                                                       |                                                                      | postgres
 FORCE_DROP_GROUP | LOG_SCHEMA DROPPED           | emaj_myschema1                                                                 |                                                                      | postgres
 FORCE_DROP_GROUP | END                          | myGroup1                                                                       | 7 tables/sequences processed                                         | postgres
 CREATE_GROUP     | BEGIN                        | myGroup2                                                                       | rollbackable                                                         | postgres
 CREATE_GROUP     | LOG_SCHEMA CREATED           | emaj_myschema2                                                                 |                                                                      | postgres
 CREATE_GROUP     | END                          | myGroup2                                                                       | 8 tables/sequences processed                                         | postgres
 FORCE_DROP_GROUP | BEGIN                        | myGroup2                                                                       |                                                                      | postgres
 FORCE_DROP_GROUP | LOG_SCHEMA DROPPED           | emaj_myschema2                                                                 |                                                                      | postgres
 FORCE_DROP_GROUP | END                          | myGroup2                                                                       | 8 tables/sequences processed                                         | postgres
(229 rows)

select time_id, time_last_emaj_gid, time_event from emaj.emaj_time_stamp order by time_id;
 time_id | time_last_emaj_gid | time_event 
---------+--------------------+------------
       4 |                  0 | C
       5 |                  0 | C
       6 |                  0 | C
       8 |                  0 | C
       9 |                  0 | C
      10 |                  0 | C
      11 |                  0 | C
      12 |                  0 | D
      13 |                  0 | C
      15 |                  0 | A
      16 |                  0 | A
      17 |                  0 | A
      18 |                  0 | A
      19 |                  0 | A
      20 |                  0 | A
      21 |                  0 | D
      22 |                  0 | C
      23 |                  0 | A
      24 |                  0 | A
      25 |                  0 | A
      26 |                  0 | A
      27 |                  0 | A
      28 |                  0 | A
      29 |                  0 | D
      30 |                  0 | D
      31 |                  0 | C
      32 |                  0 | C
      33 |                  0 | I
      34 |                  0 | I
      35 |                  0 | I
      36 |                  0 | D
      37 |                  0 | I
      38 |                  0 | I
      39 |                  0 | I
      40 |                  0 | I
      41 |                  0 | I
      42 |                  0 | I
      43 |                  0 | M
      44 |                  0 | M
      46 |                  0 | D
      47 |                  0 | D
      48 |                  0 | D
      49 |                  0 | D
      50 |                  0 | D
      51 |                  0 | C
      52 |                  0 | M
      53 |                  0 | D
      54 |                  0 | C
      55 |                  0 | D
(49 rows)

-- remove the temp directory
\! rm -R $EMAJTESTTMPDIR
