-- createDrop.sql : prepare groups content and test emaj_create_group(), emaj_comment_group() 
-- and emaj_drop_group() functions
--
SET client_min_messages TO WARNING;
-----------------------------
-- prepare groups
-----------------------------
delete from emaj.emaj_group_def;
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl1',20,NULL,NULL);
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2',NULL,'tsplog1','tsplog1');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl2b',NULL,'tsplog2','tsplog2');
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3_col31_seq',1);
insert into emaj.emaj_group_def values ('myGroup1','myschema1','myTbl3',10,'tsplog1',NULL);
insert into emaj.emaj_group_def values ('myGroup1','myschema1','mytbl4',20,'tsplog1','tsplog2');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl1');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl2');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','myTbl3_col31_seq');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','myTbl3');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl4');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl5');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','mytbl6');
insert into emaj.emaj_group_def values ('myGroup2','myschema2','myseq1');
-- The third group name contains space, comma # and '
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3','phil''s tbl1');
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3',E'myTbl2\\');
insert into emaj.emaj_group_def values ('phil''s group#3",','phil''s schema3',E'phil''s seq\\1');
-- Note myTbl4 from "phil's schema3" remains outside phil's group#3", group
insert into emaj.emaj_group_def values ('dummyGrp1','dummySchema','mytbl4');
insert into emaj.emaj_group_def values ('dummyGrp2','myschema1','dummyTable');
insert into emaj.emaj_group_def values ('dummyGrp3','myschema1','mytbl1');
insert into emaj.emaj_group_def values ('dummyGrp3','myschema2','mytbl2');
-----------------------------
-- emaj_create_group() tests
-----------------------------
-- invalid group names
select emaj.emaj_create_group(NULL);
ERROR:  emaj_create_group: group name can't be NULL.
CONTEXT:  PL/pgSQL function "emaj_create_group" line 6 at RETURN
select emaj.emaj_create_group('');
ERROR:  emaj_create_group: group name must at least contain 1 character.
CONTEXT:  PL/pgSQL function "emaj_create_group" line 6 at RETURN
select emaj.emaj_create_group(NULL,false);
ERROR:  emaj_create_group: group name can't be NULL.
select emaj.emaj_create_group('',false);
ERROR:  emaj_create_group: group name must at least contain 1 character.
-- group is unknown in emaj_group_def
select emaj.emaj_create_group('unknownGroup');
ERROR:  emaj_create_group: Group unknownGroup is unknown in emaj_group_def table.
CONTEXT:  PL/pgSQL function "emaj_create_group" line 6 at RETURN
select emaj.emaj_create_group('unknownGroup',false);
ERROR:  emaj_create_group: Group unknownGroup is unknown in emaj_group_def table.
-- unknown schema in emaj_group_def
select emaj.emaj_create_group('dummyGrp1');
ERROR:  _check_class: schema dummySchema doesn't exist.
CONTEXT:  PL/pgSQL function "emaj_create_group" line 56 at assignment
PL/pgSQL function "emaj_create_group" line 6 at RETURN
select emaj.emaj_create_group('dummyGrp1',false);
ERROR:  _check_class: schema dummySchema doesn't exist.
CONTEXT:  PL/pgSQL function "emaj_create_group" line 56 at assignment
-- unknown table in emaj_group_def
select emaj.emaj_create_group('dummyGrp2');
ERROR:  _check_class: table or sequence dummyTable doesn't exist.
CONTEXT:  PL/pgSQL function "emaj_create_group" line 56 at assignment
PL/pgSQL function "emaj_create_group" line 6 at RETURN
select emaj.emaj_create_group('dummyGrp2',false);
ERROR:  _check_class: table or sequence dummyTable doesn't exist.
CONTEXT:  PL/pgSQL function "emaj_create_group" line 56 at assignment
-- table without pkey for a rollbackable group
select emaj.emaj_create_group('phil''s group#3",',true);
ERROR:  _create_tbl: table myTbl2\ has no PRIMARY KEY.
CONTEXT:  SQL statement "SELECT  emaj._create_tbl( $1 ,  $2 , coalesce( $3 ,  $4 ), coalesce( $5 ,  $4 ),  $6 )"
PL/pgSQL function "emaj_create_group" line 59 at PERFORM
-- sequence with tablespace defined in the emaj_group_def table
begin;
  update emaj.emaj_group_def set grpdef_log_dat_tsp = 'something' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'myTbl3_col31_seq';
  select emaj.emaj_create_group('myGroup1');
ERROR:  emaj_create_group: Defining tablespace is not allowed for a sequence (myschema1.myTbl3_col31_seq).
CONTEXT:  PL/pgSQL function "emaj_create_group" line 6 at RETURN
rollback;
-- table with invalid tablespace
begin;
  update emaj.emaj_group_def set grpdef_log_dat_tsp = 'dummyTablespace' where grpdef_group = 'myGroup1' and grpdef_schema = 'myschema1' and grpdef_tblseq = 'mytbl1';
  select emaj.emaj_create_group('myGroup1');
ERROR:  tablespace "dummytablespace" does not exist
CONTEXT:  SQL statement "CREATE TABLE emaj.myschema1_mytbl1_log ( LIKE myschema1.mytbl1) TABLESPACE dummyTablespace"
PL/pgSQL function "_create_tbl" line 85 at EXECUTE statement
SQL statement "SELECT  emaj._create_tbl( $1 ,  $2 , coalesce( $3 ,  $4 ), coalesce( $5 ,  $4 ),  $6 )"
PL/pgSQL function "emaj_create_group" line 59 at PERFORM
PL/pgSQL function "emaj_create_group" line 6 at RETURN
rollback;
-- should be OK
select emaj.emaj_create_group('myGroup1');
WARNING:  _create_tbl: table myschema1.mytbl2 has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
CONTEXT:  SQL statement "SELECT  emaj._create_tbl( $1 ,  $2 , coalesce( $3 ,  $4 ), coalesce( $5 ,  $4 ),  $6 )"
PL/pgSQL function "emaj_create_group" line 59 at PERFORM
PL/pgSQL function "emaj_create_group" line 6 at RETURN
 emaj_create_group 
-------------------
                 6
(1 row)

select emaj.emaj_create_group('myGroup2',true);
 emaj_create_group 
-------------------
                 8
(1 row)

select emaj.emaj_create_group('phil''s group#3",',false);
 emaj_create_group 
-------------------
                 3
(1 row)

-- create a group with a table already belonging to another group
select emaj.emaj_create_group('dummyGrp3');
ERROR:  emaj_create_group: one or several tables already belong to another group (myschema1.mytbl1 in myGroup1, myschema2.mytbl2 in myGroup2).
CONTEXT:  PL/pgSQL function "emaj_create_group" line 6 at RETURN
-- already created
select emaj.emaj_create_group('myGroup2');
ERROR:  emaj_create_group: group myGroup2 is already created.
CONTEXT:  PL/pgSQL function "emaj_create_group" line 6 at RETURN
-- impact of created groups
select group_name, group_state, group_nb_table, group_nb_sequence, group_is_rollbackable, group_comment 
  from emaj.emaj_group order by group_name, group_state;
    group_name    | group_state | group_nb_table | group_nb_sequence | group_is_rollbackable | group_comment 
------------------+-------------+----------------+-------------------+-----------------------+---------------
 myGroup1         | IDLE        |              5 |                 1 | t                     | 
 myGroup2         | IDLE        |              6 |                 2 | t                     | 
 phil's group#3", | IDLE        |              2 |                 1 | f                     | 
(3 rows)

select * from emaj.emaj_relation order by rel_group, rel_priority, rel_schema, rel_tblseq;
   rel_schema   |    rel_tblseq    |    rel_group     | rel_priority | rel_log_dat_tsp | rel_log_idx_tsp | rel_kind | rel_session | rel_rows 
----------------+------------------+------------------+--------------+-----------------+-----------------+----------+-------------+----------
 myschema1      | myTbl3_col31_seq | myGroup1         |            1 |                 |                 | S        |             |         
 myschema1      | myTbl3           | myGroup1         |           10 | tsplog1         | tspemaj         | r        |             |         
 myschema1      | mytbl1           | myGroup1         |           20 | tspemaj         | tspemaj         | r        |             |         
 myschema1      | mytbl4           | myGroup1         |           20 | tsplog1         | tsplog2         | r        |             |         
 myschema1      | mytbl2           | myGroup1         |              | tsplog1         | tsplog1         | r        |             |         
 myschema1      | mytbl2b          | myGroup1         |              | tsplog2         | tsplog2         | r        |             |         
 myschema2      | myseq1           | myGroup2         |              |                 |                 | S        |             |         
 myschema2      | mytbl1           | myGroup2         |              | tspemaj         | tspemaj         | r        |             |         
 myschema2      | mytbl2           | myGroup2         |              | tspemaj         | tspemaj         | r        |             |         
 myschema2      | myTbl3           | myGroup2         |              | tspemaj         | tspemaj         | r        |             |         
 myschema2      | myTbl3_col31_seq | myGroup2         |              |                 |                 | S        |             |         
 myschema2      | mytbl4           | myGroup2         |              | tspemaj         | tspemaj         | r        |             |         
 myschema2      | mytbl5           | myGroup2         |              | tspemaj         | tspemaj         | r        |             |         
 myschema2      | mytbl6           | myGroup2         |              | tspemaj         | tspemaj         | r        |             |         
 phil's schema3 | myTbl2\          | phil's group#3", |              | tspemaj         | tspemaj         | r        |             |         
 phil's schema3 | phil's seq\1     | phil's group#3", |              |                 |                 | S        |             |         
 phil's schema3 | phil's tbl1      | phil's group#3", |              | tspemaj         | tspemaj         | r        |             |         
(17 rows)

select * from pg_tables where schemaname = 'emaj' order by tablename;
 schemaname |           tablename            | tableowner | tablespace | hasindexes | hasrules | hastriggers 
------------+--------------------------------+------------+------------+------------+----------+-------------
 emaj       | emaj_fk                        | postgres   | tspemaj    | t          | f        | f
 emaj       | emaj_group                     | postgres   | tspemaj    | t          | f        | t
 emaj       | emaj_group_def                 | postgres   | tspemaj    | t          | f        | f
 emaj       | emaj_hist                      | postgres   | tspemaj    | t          | f        | f
 emaj       | emaj_mark                      | postgres   | tspemaj    | t          | f        | t
 emaj       | emaj_param                     | postgres   | tspemaj    | t          | f        | f
 emaj       | emaj_relation                  | postgres   | tspemaj    | t          | f        | t
 emaj       | emaj_rlbk_stat                 | postgres   | tspemaj    | t          | f        | f
 emaj       | emaj_seq_hole                  | postgres   | tspemaj    | t          | f        | f
 emaj       | emaj_sequence                  | postgres   | tspemaj    | t          | f        | f
 emaj       | myschema1_myTbl3_log           | postgres   | tsplog1    | t          | f        | f
 emaj       | myschema1_mytbl1_log           | postgres   | tspemaj    | t          | f        | f
 emaj       | myschema1_mytbl2_log           | postgres   | tsplog1    | t          | f        | f
 emaj       | myschema1_mytbl2b_log          | postgres   | tsplog2    | t          | f        | f
 emaj       | myschema1_mytbl4_log           | postgres   | tsplog1    | t          | f        | f
 emaj       | myschema2_myTbl3_log           | postgres   | tspemaj    | t          | f        | f
 emaj       | myschema2_mytbl1_log           | postgres   | tspemaj    | t          | f        | f
 emaj       | myschema2_mytbl2_log           | postgres   | tspemaj    | t          | f        | f
 emaj       | myschema2_mytbl4_log           | postgres   | tspemaj    | t          | f        | f
 emaj       | myschema2_mytbl5_log           | postgres   | tspemaj    | t          | f        | f
 emaj       | myschema2_mytbl6_log           | postgres   | tspemaj    | t          | f        | f
 emaj       | phil's schema3_myTbl2\_log     | postgres   | tspemaj    | t          | f        | f
 emaj       | phil's schema3_phil's tbl1_log | postgres   | tspemaj    | t          | f        | f
(23 rows)

-----------------------------
-- emaj_comment_group() tests
-----------------------------
-- unknown group
select emaj.emaj_comment_group(NULL,NULL);
ERROR:  emaj_comment_group: group <NULL> has not been created.
select emaj.emaj_comment_group('unkownGroup',NULL);
ERROR:  emaj_comment_group: group unkownGroup has not been created.
-- should be OK
select emaj.emaj_comment_group('myGroup1','a first comment for group #1');
 emaj_comment_group 
--------------------
 
(1 row)

select emaj.emaj_comment_group('myGroup1','a better comment for group #1');
 emaj_comment_group 
--------------------
 
(1 row)

select group_name, group_comment from emaj.emaj_group where group_name = 'myGroup1';
 group_name |         group_comment         
------------+-------------------------------
 myGroup1   | a better comment for group #1
(1 row)

select emaj.emaj_comment_group('myGroup1',NULL);
 emaj_comment_group 
--------------------
 
(1 row)

select group_name, group_comment from emaj.emaj_group where group_name = 'myGroup1';
 group_name | group_comment 
------------+---------------
 myGroup1   | 
(1 row)

-----------------------------
-- emaj_drop_group() tests
-----------------------------
-- unknown group
select emaj.emaj_drop_group(NULL);
ERROR:  _drop_group: group <NULL> has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group( $1 , TRUE)"
PL/pgSQL function "emaj_drop_group" line 11 at SQL statement
select emaj.emaj_drop_group('unkownGroup');
ERROR:  _drop_group: group unkownGroup has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group( $1 , TRUE)"
PL/pgSQL function "emaj_drop_group" line 11 at SQL statement
-- group in logging state
select emaj.emaj_start_group('myGroup1','');
 emaj_start_group 
------------------
                6
(1 row)

select emaj.emaj_drop_group('myGroup1');
ERROR:  _drop_group: The group myGroup1 cannot be deleted because it is not in idle state.
CONTEXT:  SQL statement "SELECT emaj._drop_group( $1 , TRUE)"
PL/pgSQL function "emaj_drop_group" line 11 at SQL statement
select emaj.emaj_stop_group('myGroup1');
 emaj_stop_group 
-----------------
               6
(1 row)

-- should be OK
select emaj.emaj_drop_group('myGroup1');
 emaj_drop_group 
-----------------
               6
(1 row)

select emaj.emaj_drop_group('myGroup2');
 emaj_drop_group 
-----------------
               8
(1 row)

-- already dropped
select emaj.emaj_drop_group('myGroup2');
ERROR:  _drop_group: group myGroup2 has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group( $1 , TRUE)"
PL/pgSQL function "emaj_drop_group" line 11 at SQL statement
-----------------------------
-- emaj_force_drop_group() tests
-----------------------------
-- unknown group
select emaj.emaj_force_drop_group(NULL);
ERROR:  _drop_group: group <NULL> has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group( $1 , FALSE)"
PL/pgSQL function "emaj_force_drop_group" line 14 at SQL statement
select emaj.emaj_force_drop_group('unkownGroup');
ERROR:  _drop_group: group unkownGroup has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group( $1 , FALSE)"
PL/pgSQL function "emaj_force_drop_group" line 14 at SQL statement
-- already dropped
select emaj.emaj_force_drop_group('myGroup2');
ERROR:  _drop_group: group myGroup2 has not been created.
CONTEXT:  SQL statement "SELECT emaj._drop_group( $1 , FALSE)"
PL/pgSQL function "emaj_force_drop_group" line 14 at SQL statement
-- should be OK
select emaj.emaj_create_group('myGroup1',false);
WARNING:  _create_tbl: table myschema1.mytbl2 has triggers (mytbl2trg). Verify the compatibility with emaj rollback operations (in particular if triggers update one or several other tables). Triggers may have to be manualy disabled before rollback.
CONTEXT:  SQL statement "SELECT  emaj._create_tbl( $1 ,  $2 , coalesce( $3 ,  $4 ), coalesce( $5 ,  $4 ),  $6 )"
PL/pgSQL function "emaj_create_group" line 59 at PERFORM
 emaj_create_group 
-------------------
                 6
(1 row)

select emaj.emaj_start_group('myGroup1','');
 emaj_start_group 
------------------
                6
(1 row)

select emaj.emaj_force_drop_group('myGroup1');
 emaj_force_drop_group 
-----------------------
                     6
(1 row)

select emaj.emaj_create_group('myGroup2',true);
 emaj_create_group 
-------------------
                 8
(1 row)

select emaj.emaj_force_drop_group('myGroup2');
 emaj_force_drop_group 
-----------------------
                     8
(1 row)

